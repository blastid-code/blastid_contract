{
	"id": "90f4fe5fea38a760feed5a1659439927",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.10",
	"solcLongVersion": "0.8.10+commit.fc410830",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/dnssec-oracle/algorithms/DummyAlgorithm.sol": {
				"content": "pragma solidity ^0.8.4;\n\nimport \"./Algorithm.sol\";\n\n/**\n* @dev Implements a dummy DNSSEC (signing) algorithm that approves all\n*      signatures, for testing.\n*/\ncontract DummyAlgorithm is Algorithm {\n    function verify(bytes calldata, bytes calldata, bytes calldata) external override view returns (bool) { return true; }\n}\n"
			},
			"contracts/dnssec-oracle/algorithms/Algorithm.sol": {
				"content": "pragma solidity ^0.8.4;\n\n/**\n* @dev An interface for contracts implementing a DNSSEC (signing) algorithm.\n*/\ninterface Algorithm {\n    /**\n    * @dev Verifies a signature.\n    * @param key The public key to verify with.\n    * @param data The signed data to verify.\n    * @param signature The signature to verify.\n    * @return True iff the signature is valid.\n    */\n    function verify(bytes calldata key, bytes calldata data, bytes calldata signature) external virtual view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/dnssec-oracle/algorithms/Algorithm.sol": {
				"Algorithm": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "key",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "verify",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "An interface for contracts implementing a DNSSEC (signing) algorithm.",
						"kind": "dev",
						"methods": {
							"verify(bytes,bytes,bytes)": {
								"details": "Verifies a signature.",
								"params": {
									"data": "The signed data to verify.",
									"key": "The public key to verify with.",
									"signature": "The signature to verify."
								},
								"returns": {
									"_0": "True iff the signature is valid."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"verify(bytes,bytes,bytes)": "de8f50a1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"key\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An interface for contracts implementing a DNSSEC (signing) algorithm.\",\"kind\":\"dev\",\"methods\":{\"verify(bytes,bytes,bytes)\":{\"details\":\"Verifies a signature.\",\"params\":{\"data\":\"The signed data to verify.\",\"key\":\"The public key to verify with.\",\"signature\":\"The signature to verify.\"},\"returns\":{\"_0\":\"True iff the signature is valid.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/dnssec-oracle/algorithms/Algorithm.sol\":\"Algorithm\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/dnssec-oracle/algorithms/Algorithm.sol\":{\"keccak256\":\"0x51d6251568844e435f58952354abe8c8c8e978ab40ecb0bbb2f5bd767838b3a7\",\"urls\":[\"bzz-raw://b971a70e2a41451fe901a6a523feea1135fc4ef7d88848a294fb1a9760928130\",\"dweb:/ipfs/QmausTGdb4UNMnWmsysDNdATa1Ayv8oCMoZ57YB5nqU9Vp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/dnssec-oracle/algorithms/DummyAlgorithm.sol": {
				"DummyAlgorithm": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "verify",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implements a dummy DNSSEC (signing) algorithm that approves all      signatures, for testing.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/dnssec-oracle/algorithms/DummyAlgorithm.sol\":162:325  contract DummyAlgorithm is Algorithm {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/dnssec-oracle/algorithms/DummyAlgorithm.sol\":162:325  contract DummyAlgorithm is Algorithm {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xde8f50a1\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/dnssec-oracle/algorithms/DummyAlgorithm.sol\":205:323  function verify(bytes calldata, bytes calldata, bytes calldata) external override view returns (bool) { return true; } */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_7:\n        /* \"contracts/dnssec-oracle/algorithms/DummyAlgorithm.sol\":301:305  bool */\n      0x00\n        /* \"contracts/dnssec-oracle/algorithms/DummyAlgorithm.sol\":316:320  true */\n      0x01\n        /* \"contracts/dnssec-oracle/algorithms/DummyAlgorithm.sol\":309:320  return true */\n      swap1\n      pop\n        /* \"contracts/dnssec-oracle/algorithms/DummyAlgorithm.sol\":205:323  function verify(bytes calldata, bytes calldata, bytes calldata) external override view returns (bool) { return true; } */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_12:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_13:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:451   */\n    tag_14:\n        /* \"#utility.yul\":443:444   */\n      0x00\n        /* \"#utility.yul\":440:441   */\n      dup1\n        /* \"#utility.yul\":433:445   */\n      revert\n        /* \"#utility.yul\":457:574   */\n    tag_15:\n        /* \"#utility.yul\":566:567   */\n      0x00\n        /* \"#utility.yul\":563:564   */\n      dup1\n        /* \"#utility.yul\":556:568   */\n      revert\n        /* \"#utility.yul\":580:697   */\n    tag_16:\n        /* \"#utility.yul\":689:690   */\n      0x00\n        /* \"#utility.yul\":686:687   */\n      dup1\n        /* \"#utility.yul\":679:691   */\n      revert\n        /* \"#utility.yul\":716:1268   */\n    tag_17:\n        /* \"#utility.yul\":773:781   */\n      0x00\n        /* \"#utility.yul\":783:789   */\n      dup1\n        /* \"#utility.yul\":833:836   */\n      dup4\n        /* \"#utility.yul\":826:830   */\n      0x1f\n        /* \"#utility.yul\":818:824   */\n      dup5\n        /* \"#utility.yul\":814:831   */\n      add\n        /* \"#utility.yul\":810:837   */\n      slt\n        /* \"#utility.yul\":800:922   */\n      tag_28\n      jumpi\n        /* \"#utility.yul\":841:920   */\n      tag_29\n      tag_14\n      jump\t// in\n    tag_29:\n        /* \"#utility.yul\":800:922   */\n    tag_28:\n        /* \"#utility.yul\":954:960   */\n      dup3\n        /* \"#utility.yul\":941:961   */\n      calldataload\n        /* \"#utility.yul\":931:961   */\n      swap1\n      pop\n        /* \"#utility.yul\":984:1002   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":976:982   */\n      dup2\n        /* \"#utility.yul\":973:1003   */\n      gt\n        /* \"#utility.yul\":970:1087   */\n      iszero\n      tag_30\n      jumpi\n        /* \"#utility.yul\":1006:1085   */\n      tag_31\n      tag_15\n      jump\t// in\n    tag_31:\n        /* \"#utility.yul\":970:1087   */\n    tag_30:\n        /* \"#utility.yul\":1120:1124   */\n      0x20\n        /* \"#utility.yul\":1112:1118   */\n      dup4\n        /* \"#utility.yul\":1108:1125   */\n      add\n        /* \"#utility.yul\":1096:1125   */\n      swap2\n      pop\n        /* \"#utility.yul\":1174:1177   */\n      dup4\n        /* \"#utility.yul\":1166:1170   */\n      0x01\n        /* \"#utility.yul\":1158:1164   */\n      dup3\n        /* \"#utility.yul\":1154:1171   */\n      mul\n        /* \"#utility.yul\":1144:1152   */\n      dup4\n        /* \"#utility.yul\":1140:1172   */\n      add\n        /* \"#utility.yul\":1137:1178   */\n      gt\n        /* \"#utility.yul\":1134:1262   */\n      iszero\n      tag_32\n      jumpi\n        /* \"#utility.yul\":1181:1260   */\n      tag_33\n      tag_16\n      jump\t// in\n    tag_33:\n        /* \"#utility.yul\":1134:1262   */\n    tag_32:\n        /* \"#utility.yul\":716:1268   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1274:2487   */\n    tag_6:\n        /* \"#utility.yul\":1384:1390   */\n      0x00\n        /* \"#utility.yul\":1392:1398   */\n      dup1\n        /* \"#utility.yul\":1400:1406   */\n      0x00\n        /* \"#utility.yul\":1408:1414   */\n      dup1\n        /* \"#utility.yul\":1416:1422   */\n      0x00\n        /* \"#utility.yul\":1424:1430   */\n      dup1\n        /* \"#utility.yul\":1473:1475   */\n      0x60\n        /* \"#utility.yul\":1461:1470   */\n      dup8\n        /* \"#utility.yul\":1452:1459   */\n      dup10\n        /* \"#utility.yul\":1448:1471   */\n      sub\n        /* \"#utility.yul\":1444:1476   */\n      slt\n        /* \"#utility.yul\":1441:1560   */\n      iszero\n      tag_35\n      jumpi\n        /* \"#utility.yul\":1479:1558   */\n      tag_36\n      tag_12\n      jump\t// in\n    tag_36:\n        /* \"#utility.yul\":1441:1560   */\n    tag_35:\n        /* \"#utility.yul\":1627:1628   */\n      0x00\n        /* \"#utility.yul\":1616:1625   */\n      dup8\n        /* \"#utility.yul\":1612:1629   */\n      add\n        /* \"#utility.yul\":1599:1630   */\n      calldataload\n        /* \"#utility.yul\":1657:1675   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1649:1655   */\n      dup2\n        /* \"#utility.yul\":1646:1676   */\n      gt\n        /* \"#utility.yul\":1643:1760   */\n      iszero\n      tag_37\n      jumpi\n        /* \"#utility.yul\":1679:1758   */\n      tag_38\n      tag_13\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":1643:1760   */\n    tag_37:\n        /* \"#utility.yul\":1792:1856   */\n      tag_39\n        /* \"#utility.yul\":1848:1855   */\n      dup10\n        /* \"#utility.yul\":1839:1845   */\n      dup3\n        /* \"#utility.yul\":1828:1837   */\n      dup11\n        /* \"#utility.yul\":1824:1846   */\n      add\n        /* \"#utility.yul\":1792:1856   */\n      tag_17\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":1774:1856   */\n      swap7\n      pop\n      swap7\n      pop\n        /* \"#utility.yul\":1570:1866   */\n      pop\n        /* \"#utility.yul\":1933:1935   */\n      0x20\n        /* \"#utility.yul\":1922:1931   */\n      dup8\n        /* \"#utility.yul\":1918:1936   */\n      add\n        /* \"#utility.yul\":1905:1937   */\n      calldataload\n        /* \"#utility.yul\":1964:1982   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1956:1962   */\n      dup2\n        /* \"#utility.yul\":1953:1983   */\n      gt\n        /* \"#utility.yul\":1950:2067   */\n      iszero\n      tag_40\n      jumpi\n        /* \"#utility.yul\":1986:2065   */\n      tag_41\n      tag_13\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":1950:2067   */\n    tag_40:\n        /* \"#utility.yul\":2099:2163   */\n      tag_42\n        /* \"#utility.yul\":2155:2162   */\n      dup10\n        /* \"#utility.yul\":2146:2152   */\n      dup3\n        /* \"#utility.yul\":2135:2144   */\n      dup11\n        /* \"#utility.yul\":2131:2153   */\n      add\n        /* \"#utility.yul\":2099:2163   */\n      tag_17\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":2081:2163   */\n      swap5\n      pop\n      swap5\n      pop\n        /* \"#utility.yul\":1876:2173   */\n      pop\n        /* \"#utility.yul\":2240:2242   */\n      0x40\n        /* \"#utility.yul\":2229:2238   */\n      dup8\n        /* \"#utility.yul\":2225:2243   */\n      add\n        /* \"#utility.yul\":2212:2244   */\n      calldataload\n        /* \"#utility.yul\":2271:2289   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2263:2269   */\n      dup2\n        /* \"#utility.yul\":2260:2290   */\n      gt\n        /* \"#utility.yul\":2257:2374   */\n      iszero\n      tag_43\n      jumpi\n        /* \"#utility.yul\":2293:2372   */\n      tag_44\n      tag_13\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":2257:2374   */\n    tag_43:\n        /* \"#utility.yul\":2406:2470   */\n      tag_45\n        /* \"#utility.yul\":2462:2469   */\n      dup10\n        /* \"#utility.yul\":2453:2459   */\n      dup3\n        /* \"#utility.yul\":2442:2451   */\n      dup11\n        /* \"#utility.yul\":2438:2460   */\n      add\n        /* \"#utility.yul\":2406:2470   */\n      tag_17\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":2388:2470   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":2183:2480   */\n      pop\n        /* \"#utility.yul\":1274:2487   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      jump\t// out\n        /* \"#utility.yul\":2493:2583   */\n    tag_18:\n        /* \"#utility.yul\":2527:2534   */\n      0x00\n        /* \"#utility.yul\":2570:2575   */\n      dup2\n        /* \"#utility.yul\":2563:2576   */\n      iszero\n        /* \"#utility.yul\":2556:2577   */\n      iszero\n        /* \"#utility.yul\":2545:2577   */\n      swap1\n      pop\n        /* \"#utility.yul\":2493:2583   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2589:2698   */\n    tag_19:\n        /* \"#utility.yul\":2670:2691   */\n      tag_48\n        /* \"#utility.yul\":2685:2690   */\n      dup2\n        /* \"#utility.yul\":2670:2691   */\n      tag_18\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":2665:2668   */\n      dup3\n        /* \"#utility.yul\":2658:2692   */\n      mstore\n        /* \"#utility.yul\":2589:2698   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2704:2914   */\n    tag_9:\n        /* \"#utility.yul\":2791:2795   */\n      0x00\n        /* \"#utility.yul\":2829:2831   */\n      0x20\n        /* \"#utility.yul\":2818:2827   */\n      dup3\n        /* \"#utility.yul\":2814:2832   */\n      add\n        /* \"#utility.yul\":2806:2832   */\n      swap1\n      pop\n        /* \"#utility.yul\":2842:2907   */\n      tag_50\n        /* \"#utility.yul\":2904:2905   */\n      0x00\n        /* \"#utility.yul\":2893:2902   */\n      dup4\n        /* \"#utility.yul\":2889:2906   */\n      add\n        /* \"#utility.yul\":2880:2886   */\n      dup5\n        /* \"#utility.yul\":2842:2907   */\n      tag_19\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":2704:2914   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122085677bb9ec046e62ce35f1ffb8acb7eb9755d905558d734d06b6b9c5d76da21464736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506101ff806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063de8f50a114610030575b600080fd5b61004a600480360381019061004591906100df565b610060565b60405161005791906101ae565b60405180910390f35b6000600190509695505050505050565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f84011261009f5761009e61007a565b5b8235905067ffffffffffffffff8111156100bc576100bb61007f565b5b6020830191508360018202830111156100d8576100d7610084565b5b9250929050565b600080600080600080606087890312156100fc576100fb610070565b5b600087013567ffffffffffffffff81111561011a57610119610075565b5b61012689828a01610089565b9650965050602087013567ffffffffffffffff81111561014957610148610075565b5b61015589828a01610089565b9450945050604087013567ffffffffffffffff81111561017857610177610075565b5b61018489828a01610089565b92509250509295509295509295565b60008115159050919050565b6101a881610193565b82525050565b60006020820190506101c3600083018461019f565b9291505056fea264697066735822122085677bb9ec046e62ce35f1ffb8acb7eb9755d905558d734d06b6b9c5d76da21464736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FF DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xDE8F50A1 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0xDF JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x1AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x9F JUMPI PUSH2 0x9E PUSH2 0x7A JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBC JUMPI PUSH2 0xBB PUSH2 0x7F JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xD8 JUMPI PUSH2 0xD7 PUSH2 0x84 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP8 DUP10 SUB SLT ISZERO PUSH2 0xFC JUMPI PUSH2 0xFB PUSH2 0x70 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x11A JUMPI PUSH2 0x119 PUSH2 0x75 JUMP JUMPDEST JUMPDEST PUSH2 0x126 DUP10 DUP3 DUP11 ADD PUSH2 0x89 JUMP JUMPDEST SWAP7 POP SWAP7 POP POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x149 JUMPI PUSH2 0x148 PUSH2 0x75 JUMP JUMPDEST JUMPDEST PUSH2 0x155 DUP10 DUP3 DUP11 ADD PUSH2 0x89 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x178 JUMPI PUSH2 0x177 PUSH2 0x75 JUMP JUMPDEST JUMPDEST PUSH2 0x184 DUP10 DUP3 DUP11 ADD PUSH2 0x89 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A8 DUP2 PUSH2 0x193 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x19F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP6 PUSH8 0x7BB9EC046E62CE35 CALL SELFDESTRUCT 0xB8 0xAC 0xB7 0xEB SWAP8 SSTORE 0xD9 SDIV SSTORE DUP14 PUSH20 0x4D06B6B9C5D76DA21464736F6C634300080A0033 ",
							"sourceMap": "162:163:1:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@verify_36": {
									"entryPoint": 96,
									"id": 36,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_calldata_ptr": {
									"entryPoint": 137,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes_calldata_ptrt_bytes_calldata_ptrt_bytes_calldata_ptr": {
									"entryPoint": 223,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 415,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 430,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 403,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 127,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 122,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 132,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 117,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 112,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2917:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:2",
														"type": ""
													}
												],
												"src": "7:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "423:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:12:2"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "546:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "563:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "566:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "556:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "556:12:2"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "669:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "686:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "689:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "679:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "679:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "679:12:2"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "580:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "790:478:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "839:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "841:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "841:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "841:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "818:6:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "826:4:2",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "814:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "814:17:2"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "833:3:2"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "810:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "810:27:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "803:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "803:35:2"
															},
															"nodeType": "YulIf",
															"src": "800:122:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "931:30:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "954:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "941:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "941:20:2"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "931:6:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1004:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nodeType": "YulIdentifier",
																				"src": "1006:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1006:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1006:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "976:6:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "984:18:2",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "973:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "973:30:2"
															},
															"nodeType": "YulIf",
															"src": "970:117:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1096:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1112:6:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1120:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1108:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1108:17:2"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nodeType": "YulIdentifier",
																	"src": "1096:8:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1179:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "1181:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1181:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1181:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nodeType": "YulIdentifier",
																				"src": "1144:8:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "1158:6:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1166:4:2",
																						"type": "",
																						"value": "0x01"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "1154:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1154:17:2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1140:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1140:32:2"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1174:3:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1137:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1137:41:2"
															},
															"nodeType": "YulIf",
															"src": "1134:128:2"
														}
													]
												},
												"name": "abi_decode_t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "757:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "765:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nodeType": "YulTypedName",
														"src": "773:8:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "783:6:2",
														"type": ""
													}
												],
												"src": "716:552:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1431:1056:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1477:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1479:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1479:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1479:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1452:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1461:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1448:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1448:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1473:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1444:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1444:32:2"
															},
															"nodeType": "YulIf",
															"src": "1441:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "1570:296:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1585:45:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1616:9:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1627:1:2",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1612:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1612:17:2"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "1599:12:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1599:31:2"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1589:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1677:83:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "1679:77:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1679:79:2"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1679:79:2"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1649:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1657:18:2",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1646:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1646:30:2"
																	},
																	"nodeType": "YulIf",
																	"src": "1643:117:2"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1774:82:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1828:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1839:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1824:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1824:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1848:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_calldata_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "1792:31:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1792:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1774:6:2"
																		},
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1782:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1876:297:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1891:46:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1922:9:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1933:2:2",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1918:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1918:18:2"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "1905:12:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1905:32:2"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1895:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1984:83:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "1986:77:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1986:79:2"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1986:79:2"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1956:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1964:18:2",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1953:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1953:30:2"
																	},
																	"nodeType": "YulIf",
																	"src": "1950:117:2"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2081:82:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2135:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2146:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2131:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2131:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2155:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_calldata_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "2099:31:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2099:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "2081:6:2"
																		},
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "2089:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2183:297:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2198:46:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2229:9:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2240:2:2",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2225:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2225:18:2"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "2212:12:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2212:32:2"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2202:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2291:83:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "2293:77:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2293:79:2"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2293:79:2"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2263:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2271:18:2",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2260:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2260:30:2"
																	},
																	"nodeType": "YulIf",
																	"src": "2257:117:2"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2388:82:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2442:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2453:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2438:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2438:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2462:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_calldata_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "2406:31:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2406:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "2388:6:2"
																		},
																		{
																			"name": "value5",
																			"nodeType": "YulIdentifier",
																			"src": "2396:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes_calldata_ptrt_bytes_calldata_ptrt_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1361:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1372:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1384:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1392:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1400:6:2",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1408:6:2",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "1416:6:2",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "1424:6:2",
														"type": ""
													}
												],
												"src": "1274:1213:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2535:48:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2545:32:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2570:5:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2563:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2563:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2556:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2556:21:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2545:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2517:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2527:7:2",
														"type": ""
													}
												],
												"src": "2493:90:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2648:50:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2665:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2685:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2670:14:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2670:21:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2658:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2658:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2658:34:2"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2636:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2643:3:2",
														"type": ""
													}
												],
												"src": "2589:109:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2796:118:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2806:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2818:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2829:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2814:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2814:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2806:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2880:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2893:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2904:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2889:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2889:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2842:37:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2842:65:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2842:65:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2768:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2780:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2791:4:2",
														"type": ""
													}
												],
												"src": "2704:210:2"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_bytes_calldata_ptrt_bytes_calldata_ptrt_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4, value5 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063de8f50a114610030575b600080fd5b61004a600480360381019061004591906100df565b610060565b60405161005791906101ae565b60405180910390f35b6000600190509695505050505050565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f84011261009f5761009e61007a565b5b8235905067ffffffffffffffff8111156100bc576100bb61007f565b5b6020830191508360018202830111156100d8576100d7610084565b5b9250929050565b600080600080600080606087890312156100fc576100fb610070565b5b600087013567ffffffffffffffff81111561011a57610119610075565b5b61012689828a01610089565b9650965050602087013567ffffffffffffffff81111561014957610148610075565b5b61015589828a01610089565b9450945050604087013567ffffffffffffffff81111561017857610177610075565b5b61018489828a01610089565b92509250509295509295509295565b60008115159050919050565b6101a881610193565b82525050565b60006020820190506101c3600083018461019f565b9291505056fea264697066735822122085677bb9ec046e62ce35f1ffb8acb7eb9755d905558d734d06b6b9c5d76da21464736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xDE8F50A1 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0xDF JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x1AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x9F JUMPI PUSH2 0x9E PUSH2 0x7A JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBC JUMPI PUSH2 0xBB PUSH2 0x7F JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xD8 JUMPI PUSH2 0xD7 PUSH2 0x84 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP8 DUP10 SUB SLT ISZERO PUSH2 0xFC JUMPI PUSH2 0xFB PUSH2 0x70 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x11A JUMPI PUSH2 0x119 PUSH2 0x75 JUMP JUMPDEST JUMPDEST PUSH2 0x126 DUP10 DUP3 DUP11 ADD PUSH2 0x89 JUMP JUMPDEST SWAP7 POP SWAP7 POP POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x149 JUMPI PUSH2 0x148 PUSH2 0x75 JUMP JUMPDEST JUMPDEST PUSH2 0x155 DUP10 DUP3 DUP11 ADD PUSH2 0x89 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x178 JUMPI PUSH2 0x177 PUSH2 0x75 JUMP JUMPDEST JUMPDEST PUSH2 0x184 DUP10 DUP3 DUP11 ADD PUSH2 0x89 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A8 DUP2 PUSH2 0x193 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x19F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP6 PUSH8 0x7BB9EC046E62CE35 CALL SELFDESTRUCT 0xB8 0xAC 0xB7 0xEB SWAP8 SSTORE 0xD9 SDIV SSTORE DUP14 PUSH20 0x4D06B6B9C5D76DA21464736F6C634300080A0033 ",
							"sourceMap": "162:163:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;205:118;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;301:4;316;309:11;;205:118;;;;;;;;:::o;88:117:2:-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:117;689:1;686;679:12;716:552;773:8;783:6;833:3;826:4;818:6;814:17;810:27;800:122;;841:79;;:::i;:::-;800:122;954:6;941:20;931:30;;984:18;976:6;973:30;970:117;;;1006:79;;:::i;:::-;970:117;1120:4;1112:6;1108:17;1096:29;;1174:3;1166:4;1158:6;1154:17;1144:8;1140:32;1137:41;1134:128;;;1181:79;;:::i;:::-;1134:128;716:552;;;;;:::o;1274:1213::-;1384:6;1392;1400;1408;1416;1424;1473:2;1461:9;1452:7;1448:23;1444:32;1441:119;;;1479:79;;:::i;:::-;1441:119;1627:1;1616:9;1612:17;1599:31;1657:18;1649:6;1646:30;1643:117;;;1679:79;;:::i;:::-;1643:117;1792:64;1848:7;1839:6;1828:9;1824:22;1792:64;:::i;:::-;1774:82;;;;1570:296;1933:2;1922:9;1918:18;1905:32;1964:18;1956:6;1953:30;1950:117;;;1986:79;;:::i;:::-;1950:117;2099:64;2155:7;2146:6;2135:9;2131:22;2099:64;:::i;:::-;2081:82;;;;1876:297;2240:2;2229:9;2225:18;2212:32;2271:18;2263:6;2260:30;2257:117;;;2293:79;;:::i;:::-;2257:117;2406:64;2462:7;2453:6;2442:9;2438:22;2406:64;:::i;:::-;2388:82;;;;2183:297;1274:1213;;;;;;;;:::o;2493:90::-;2527:7;2570:5;2563:13;2556:21;2545:32;;2493:90;;;:::o;2589:109::-;2670:21;2685:5;2670:21;:::i;:::-;2665:3;2658:34;2589:109;;:::o;2704:210::-;2791:4;2829:2;2818:9;2814:18;2806:26;;2842:65;2904:1;2893:9;2889:17;2880:6;2842:65;:::i;:::-;2704:210;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "102200",
								"executionCost": "147",
								"totalCost": "102347"
							},
							"external": {
								"verify(bytes,bytes,bytes)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 162,
									"end": 325,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 162,
									"end": 325,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 162,
									"end": 325,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 162,
									"end": 325,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 162,
									"end": 325,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 162,
									"end": 325,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 162,
									"end": 325,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 162,
									"end": 325,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 162,
									"end": 325,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 162,
									"end": 325,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 162,
									"end": 325,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 162,
									"end": 325,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 162,
									"end": 325,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 162,
									"end": 325,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 162,
									"end": 325,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 162,
									"end": 325,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 162,
									"end": 325,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 162,
									"end": 325,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 162,
									"end": 325,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 162,
									"end": 325,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 162,
									"end": 325,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122085677bb9ec046e62ce35f1ffb8acb7eb9755d905558d734d06b6b9c5d76da21464736f6c634300080a0033",
									".code": [
										{
											"begin": 162,
											"end": 325,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 162,
											"end": 325,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 162,
											"end": 325,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 162,
											"end": 325,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 162,
											"end": 325,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 162,
											"end": 325,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 162,
											"end": 325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 162,
											"end": 325,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 162,
											"end": 325,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 162,
											"end": 325,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 162,
											"end": 325,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 162,
											"end": 325,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 162,
											"end": 325,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 162,
											"end": 325,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 162,
											"end": 325,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 162,
											"end": 325,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 162,
											"end": 325,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 162,
											"end": 325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 162,
											"end": 325,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 162,
											"end": 325,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 162,
											"end": 325,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 162,
											"end": 325,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 162,
											"end": 325,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 162,
											"end": 325,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 162,
											"end": 325,
											"name": "PUSH",
											"source": 1,
											"value": "DE8F50A1"
										},
										{
											"begin": 162,
											"end": 325,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 162,
											"end": 325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 162,
											"end": 325,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 162,
											"end": 325,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 162,
											"end": 325,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 162,
											"end": 325,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 162,
											"end": 325,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 162,
											"end": 325,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 205,
											"end": 323,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 205,
											"end": 323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 205,
											"end": 323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 205,
											"end": 323,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 205,
											"end": 323,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 205,
											"end": 323,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 205,
											"end": 323,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 205,
											"end": 323,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 205,
											"end": 323,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 205,
											"end": 323,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 205,
											"end": 323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 205,
											"end": 323,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 205,
											"end": 323,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 205,
											"end": 323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 205,
											"end": 323,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 205,
											"end": 323,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 205,
											"end": 323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 205,
											"end": 323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 205,
											"end": 323,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 205,
											"end": 323,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 205,
											"end": 323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 205,
											"end": 323,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 205,
											"end": 323,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 205,
											"end": 323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 205,
											"end": 323,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 205,
											"end": 323,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 205,
											"end": 323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 205,
											"end": 323,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 205,
											"end": 323,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 205,
											"end": 323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 205,
											"end": 323,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 205,
											"end": 323,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 205,
											"end": 323,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 205,
											"end": 323,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 205,
											"end": 323,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 205,
											"end": 323,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 205,
											"end": 323,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 205,
											"end": 323,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 205,
											"end": 323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 301,
											"end": 305,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 316,
											"end": 320,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 309,
											"end": 320,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 309,
											"end": 320,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 205,
											"end": 323,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 205,
											"end": 323,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 205,
											"end": 323,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 205,
											"end": 323,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 205,
											"end": 323,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 205,
											"end": 323,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 205,
											"end": 323,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 205,
											"end": 323,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 205,
											"end": 323,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 334,
											"end": 451,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 334,
											"end": 451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 443,
											"end": 444,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 440,
											"end": 441,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 433,
											"end": 445,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 457,
											"end": 574,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 457,
											"end": 574,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 566,
											"end": 567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 563,
											"end": 564,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 556,
											"end": 568,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 580,
											"end": 697,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 580,
											"end": 697,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 689,
											"end": 690,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 686,
											"end": 687,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 679,
											"end": 691,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 716,
											"end": 1268,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 716,
											"end": 1268,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 773,
											"end": 781,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 783,
											"end": 789,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 833,
											"end": 836,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 826,
											"end": 830,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 818,
											"end": 824,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 814,
											"end": 831,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 810,
											"end": 837,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 800,
											"end": 922,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 800,
											"end": 922,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 841,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 841,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 841,
											"end": 920,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 841,
											"end": 920,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 841,
											"end": 920,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 800,
											"end": 922,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 800,
											"end": 922,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 954,
											"end": 960,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 941,
											"end": 961,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 931,
											"end": 961,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 931,
											"end": 961,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 984,
											"end": 1002,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 976,
											"end": 982,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 973,
											"end": 1003,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 970,
											"end": 1087,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 970,
											"end": 1087,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 970,
											"end": 1087,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1006,
											"end": 1085,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1006,
											"end": 1085,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1006,
											"end": 1085,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1006,
											"end": 1085,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1006,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 970,
											"end": 1087,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 970,
											"end": 1087,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1124,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1112,
											"end": 1118,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1108,
											"end": 1125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1096,
											"end": 1125,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1096,
											"end": 1125,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1174,
											"end": 1177,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1166,
											"end": 1170,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1158,
											"end": 1164,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1154,
											"end": 1171,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1144,
											"end": 1152,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1140,
											"end": 1172,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1137,
											"end": 1178,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1134,
											"end": 1262,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1134,
											"end": 1262,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1134,
											"end": 1262,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1181,
											"end": 1260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1181,
											"end": 1260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1181,
											"end": 1260,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1181,
											"end": 1260,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1181,
											"end": 1260,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1134,
											"end": 1262,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1134,
											"end": 1262,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 716,
											"end": 1268,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 716,
											"end": 1268,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 716,
											"end": 1268,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 716,
											"end": 1268,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 716,
											"end": 1268,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 716,
											"end": 1268,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1274,
											"end": 2487,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1274,
											"end": 2487,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1384,
											"end": 1390,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1392,
											"end": 1398,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1400,
											"end": 1406,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1408,
											"end": 1414,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1422,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1424,
											"end": 1430,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1475,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1461,
											"end": 1470,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1452,
											"end": 1459,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 1448,
											"end": 1471,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1476,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1441,
											"end": 1560,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1441,
											"end": 1560,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1441,
											"end": 1560,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1479,
											"end": 1558,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1479,
											"end": 1558,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1479,
											"end": 1558,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1479,
											"end": 1558,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1479,
											"end": 1558,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1441,
											"end": 1560,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1441,
											"end": 1560,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1627,
											"end": 1628,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1616,
											"end": 1625,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1612,
											"end": 1629,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1599,
											"end": 1630,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1657,
											"end": 1675,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1649,
											"end": 1655,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1646,
											"end": 1676,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1643,
											"end": 1760,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1643,
											"end": 1760,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1643,
											"end": 1760,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1679,
											"end": 1758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1679,
											"end": 1758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1679,
											"end": 1758,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1679,
											"end": 1758,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1679,
											"end": 1758,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1643,
											"end": 1760,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1643,
											"end": 1760,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1792,
											"end": 1856,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1848,
											"end": 1855,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 1839,
											"end": 1845,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1837,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 1824,
											"end": 1846,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1792,
											"end": 1856,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1792,
											"end": 1856,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1792,
											"end": 1856,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1792,
											"end": 1856,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1774,
											"end": 1856,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 1774,
											"end": 1856,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1774,
											"end": 1856,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 1774,
											"end": 1856,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1570,
											"end": 1866,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1933,
											"end": 1935,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1922,
											"end": 1931,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1918,
											"end": 1936,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1905,
											"end": 1937,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1964,
											"end": 1982,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1956,
											"end": 1962,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1953,
											"end": 1983,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1950,
											"end": 2067,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1950,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1950,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1986,
											"end": 2065,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1986,
											"end": 2065,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1986,
											"end": 2065,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1986,
											"end": 2065,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1986,
											"end": 2065,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1950,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1950,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2099,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2155,
											"end": 2162,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 2146,
											"end": 2152,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2135,
											"end": 2144,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 2131,
											"end": 2153,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2099,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2099,
											"end": 2163,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2099,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2099,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2163,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2163,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2163,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2163,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1876,
											"end": 2173,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2240,
											"end": 2242,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2229,
											"end": 2238,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2225,
											"end": 2243,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2212,
											"end": 2244,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 2271,
											"end": 2289,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2263,
											"end": 2269,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2260,
											"end": 2290,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2257,
											"end": 2374,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2257,
											"end": 2374,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2257,
											"end": 2374,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2293,
											"end": 2372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2293,
											"end": 2372,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2293,
											"end": 2372,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2293,
											"end": 2372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2257,
											"end": 2374,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2257,
											"end": 2374,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2406,
											"end": 2470,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2462,
											"end": 2469,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 2453,
											"end": 2459,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2451,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2460,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2406,
											"end": 2470,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2406,
											"end": 2470,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2406,
											"end": 2470,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2406,
											"end": 2470,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2388,
											"end": 2470,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2388,
											"end": 2470,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2388,
											"end": 2470,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2388,
											"end": 2470,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2183,
											"end": 2480,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 2487,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 2487,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 2487,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 2487,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 2487,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 2487,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 2487,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 2487,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 2487,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2493,
											"end": 2583,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2493,
											"end": 2583,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2527,
											"end": 2534,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2575,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2563,
											"end": 2576,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2556,
											"end": 2577,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2545,
											"end": 2577,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2545,
											"end": 2577,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2583,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2583,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2583,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2583,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2589,
											"end": 2698,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2589,
											"end": 2698,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2670,
											"end": 2691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2685,
											"end": 2690,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2670,
											"end": 2691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2670,
											"end": 2691,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2670,
											"end": 2691,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2670,
											"end": 2691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2665,
											"end": 2668,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2658,
											"end": 2692,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2589,
											"end": 2698,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2589,
											"end": 2698,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2589,
											"end": 2698,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2704,
											"end": 2914,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 2704,
											"end": 2914,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2791,
											"end": 2795,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2829,
											"end": 2831,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2818,
											"end": 2827,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2814,
											"end": 2832,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2806,
											"end": 2832,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2806,
											"end": 2832,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2842,
											"end": 2907,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2904,
											"end": 2905,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2893,
											"end": 2902,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2889,
											"end": 2906,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 2886,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2842,
											"end": 2907,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2842,
											"end": 2907,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2842,
											"end": 2907,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2842,
											"end": 2907,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2704,
											"end": 2914,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2704,
											"end": 2914,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2704,
											"end": 2914,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2704,
											"end": 2914,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2704,
											"end": 2914,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"verify(bytes,bytes,bytes)": "de8f50a1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implements a dummy DNSSEC (signing) algorithm that approves all      signatures, for testing.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/dnssec-oracle/algorithms/DummyAlgorithm.sol\":\"DummyAlgorithm\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/dnssec-oracle/algorithms/Algorithm.sol\":{\"keccak256\":\"0x51d6251568844e435f58952354abe8c8c8e978ab40ecb0bbb2f5bd767838b3a7\",\"urls\":[\"bzz-raw://b971a70e2a41451fe901a6a523feea1135fc4ef7d88848a294fb1a9760928130\",\"dweb:/ipfs/QmausTGdb4UNMnWmsysDNdATa1Ayv8oCMoZ57YB5nqU9Vp\"]},\"contracts/dnssec-oracle/algorithms/DummyAlgorithm.sol\":{\"keccak256\":\"0x59bb926cf8544aa5624717a2fd5850508ac7dd2a09620b05799b4ee00b708b2d\",\"urls\":[\"bzz-raw://e29e539403eaa9d6a75ab9758271132d9c1b11f3c9371b82b03db8d418f80e59\",\"dweb:/ipfs/QmQhxvSDjyCax5gph3KGkigEaXDExLf33sLs7uvZG6SLhW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/dnssec-oracle/algorithms/Algorithm.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/dnssec-oracle/algorithms/Algorithm.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/dnssec-oracle/algorithms/DummyAlgorithm.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/dnssec-oracle/algorithms/DummyAlgorithm.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5815",
				"formattedMessage": "Warning: Interface functions are implicitly \"virtual\"\n  --> contracts/dnssec-oracle/algorithms/Algorithm.sol:14:5:\n   |\n14 |     function verify(bytes calldata key, bytes calldata data, bytes calldata signature) external virtual view returns (bool);\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Interface functions are implicitly \"virtual\"",
				"severity": "warning",
				"sourceLocation": {
					"end": 491,
					"file": "contracts/dnssec-oracle/algorithms/Algorithm.sol",
					"start": 371
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n  --> contracts/dnssec-oracle/algorithms/DummyAlgorithm.sol:10:5:\n   |\n10 |     function verify(bytes calldata, bytes calldata, bytes calldata) external override view returns (bool) { return true; }\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 323,
					"file": "contracts/dnssec-oracle/algorithms/DummyAlgorithm.sol",
					"start": 205
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/dnssec-oracle/algorithms/Algorithm.sol": {
				"ast": {
					"absolutePath": "contracts/dnssec-oracle/algorithms/Algorithm.sol",
					"exportedSymbols": {
						"Algorithm": [
							15
						]
					},
					"id": 16,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Algorithm",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "25:83:0",
								"text": " @dev An interface for contracts implementing a DNSSEC (signing) algorithm."
							},
							"fullyImplemented": false,
							"id": 15,
							"linearizedBaseContracts": [
								15
							],
							"name": "Algorithm",
							"nameLocation": "119:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "135:231:0",
										"text": " @dev Verifies a signature.\n @param key The public key to verify with.\n @param data The signed data to verify.\n @param signature The signature to verify.\n @return True iff the signature is valid."
									},
									"functionSelector": "de8f50a1",
									"id": 14,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "verify",
									"nameLocation": "380:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "402:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "387:18:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 4,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "387:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "422:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "407:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 6,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "407:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "443:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "428:24:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 8,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "428:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "386:67:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "485:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 11,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "485:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "484:6:0"
									},
									"scope": 15,
									"src": "371:120:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								}
							],
							"scope": 16,
							"src": "109:384:0",
							"usedErrors": []
						}
					],
					"src": "0:494:0"
				},
				"id": 0
			},
			"contracts/dnssec-oracle/algorithms/DummyAlgorithm.sol": {
				"ast": {
					"absolutePath": "contracts/dnssec-oracle/algorithms/DummyAlgorithm.sol",
					"exportedSymbols": {
						"Algorithm": [
							15
						],
						"DummyAlgorithm": [
							37
						]
					},
					"id": 38,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 17,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:1"
						},
						{
							"absolutePath": "contracts/dnssec-oracle/algorithms/Algorithm.sol",
							"file": "./Algorithm.sol",
							"id": 18,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 38,
							"sourceUnit": 16,
							"src": "25:25:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 20,
										"name": "Algorithm",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 15,
										"src": "189:9:1"
									},
									"id": 21,
									"nodeType": "InheritanceSpecifier",
									"src": "189:9:1"
								}
							],
							"canonicalName": "DummyAlgorithm",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 19,
								"nodeType": "StructuredDocumentation",
								"src": "52:109:1",
								"text": " @dev Implements a dummy DNSSEC (signing) algorithm that approves all\n      signatures, for testing."
							},
							"fullyImplemented": true,
							"id": 37,
							"linearizedBaseContracts": [
								37,
								15
							],
							"name": "DummyAlgorithm",
							"nameLocation": "171:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										14
									],
									"body": {
										"id": 35,
										"nodeType": "Block",
										"src": "307:16:1",
										"statements": [
											{
												"expression": {
													"hexValue": "74727565",
													"id": 33,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "316:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 32,
												"id": 34,
												"nodeType": "Return",
												"src": "309:11:1"
											}
										]
									},
									"functionSelector": "de8f50a1",
									"id": 36,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verify",
									"nameLocation": "214:6:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 29,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "278:8:1"
									},
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "221:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 22,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "221:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "237:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 24,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "237:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "253:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 26,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "253:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "220:48:1"
									},
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "301:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 30,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "301:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "300:6:1"
									},
									"scope": 37,
									"src": "205:118:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 38,
							"src": "162:163:1",
							"usedErrors": []
						}
					],
					"src": "0:326:1"
				},
				"id": 1
			}
		}
	}
}