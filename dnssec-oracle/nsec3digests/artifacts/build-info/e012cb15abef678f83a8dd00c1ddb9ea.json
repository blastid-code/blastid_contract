{
	"id": "e012cb15abef678f83a8dd00c1ddb9ea",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol": {
				"content": "pragma solidity ^0.8.4;\n\nimport \"./NSEC3Digest.sol\";\nimport \"../SHA1.sol\";\nimport \"../../Buffer.sol\";\n/**\n* @dev Implements the DNSSEC iterated SHA1 digest used for NSEC3 records.\n*/\ncontract SHA1NSEC3Digest is NSEC3Digest {\n    using Buffer for Buffer.buffer;\n\n    function hash(bytes calldata salt, bytes calldata data, uint iterations) external override pure returns (bytes32) {\n        Buffer.buffer memory buf;\n        buf.init(salt.length + data.length + 16);\n\n        buf.append(data);\n        buf.append(salt);\n        bytes20 h = SHA1.sha1(buf.buf);\n        if (iterations > 0) {\n            buf.truncate();\n            buf.appendBytes20(bytes20(0));\n            buf.append(salt);\n\n            for (uint i = 0; i < iterations; i++) {\n                buf.writeBytes20(0, h);\n                h = SHA1.sha1(buf.buf);\n            }\n        }\n\n        return bytes32(h);\n    }\n}\n"
			},
			"contracts/Buffer.sol": {
				"content": "pragma solidity ^0.8.4;\n\n/**\n* @dev A library for working with mutable byte buffers in Solidity.\n*\n* Byte buffers are mutable and expandable, and provide a variety of primitives\n* for writing to them. At any time you can fetch a bytes object containing the\n* current contents of the buffer. The bytes object should not be stored between\n* operations, as it may change due to resizing of the buffer.\n*/\nlibrary Buffer {\n    /**\n    * @dev Represents a mutable buffer. Buffers have a current value (buf) and\n    *      a capacity. The capacity may be longer than the current value, in\n    *      which case it can be extended without the need to allocate more memory.\n    */\n    struct buffer {\n        bytes buf;\n        uint capacity;\n    }\n\n    /**\n    * @dev Initializes a buffer with an initial capacity.\n    * @param buf The buffer to initialize.\n    * @param capacity The number of bytes of space to allocate the buffer.\n    * @return The buffer, for chaining.\n    */\n    function init(buffer memory buf, uint capacity) internal pure returns(buffer memory) {\n        if (capacity % 32 != 0) {\n            capacity += 32 - (capacity % 32);\n        }\n        // Allocate space for the buffer data\n        buf.capacity = capacity;\n        assembly {\n            let ptr := mload(0x40)\n            mstore(buf, ptr)\n            mstore(ptr, 0)\n            mstore(0x40, add(32, add(ptr, capacity)))\n        }\n        return buf;\n    }\n\n    /**\n    * @dev Initializes a new buffer from an existing bytes object.\n    *      Changes to the buffer may mutate the original value.\n    * @param b The bytes object to initialize the buffer with.\n    * @return A new buffer.\n    */\n    function fromBytes(bytes memory b) internal pure returns(buffer memory) {\n        buffer memory buf;\n        buf.buf = b;\n        buf.capacity = b.length;\n        return buf;\n    }\n\n    function resize(buffer memory buf, uint capacity) private pure {\n        bytes memory oldbuf = buf.buf;\n        init(buf, capacity);\n        append(buf, oldbuf);\n    }\n\n    function max(uint a, uint b) private pure returns(uint) {\n        if (a > b) {\n            return a;\n        }\n        return b;\n    }\n\n    /**\n    * @dev Sets buffer length to 0.\n    * @param buf The buffer to truncate.\n    * @return The original buffer, for chaining..\n    */\n    function truncate(buffer memory buf) internal pure returns (buffer memory) {\n        assembly {\n            let bufptr := mload(buf)\n            mstore(bufptr, 0)\n        }\n        return buf;\n    }\n\n    /**\n    * @dev Writes a byte string to a buffer. Resizes if doing so would exceed\n    *      the capacity of the buffer.\n    * @param buf The buffer to append to.\n    * @param off The start offset to write to.\n    * @param data The data to append.\n    * @param len The number of bytes to copy.\n    * @return The original buffer, for chaining.\n    */\n    function write(buffer memory buf, uint off, bytes memory data, uint len) internal pure returns(buffer memory) {\n        require(len <= data.length);\n\n        if (off + len > buf.capacity) {\n            resize(buf, max(buf.capacity, len + off) * 2);\n        }\n\n        uint dest;\n        uint src;\n        assembly {\n            // Memory address of the buffer data\n            let bufptr := mload(buf)\n            // Length of existing buffer data\n            let buflen := mload(bufptr)\n            // Start address = buffer address + offset + sizeof(buffer length)\n            dest := add(add(bufptr, 32), off)\n            // Update buffer length if we're extending it\n            if gt(add(len, off), buflen) {\n                mstore(bufptr, add(len, off))\n            }\n            src := add(data, 32)\n        }\n\n        // Copy word-length chunks while possible\n        for (; len >= 32; len -= 32) {\n            assembly {\n                mstore(dest, mload(src))\n            }\n            dest += 32;\n            src += 32;\n        }\n\n        // Copy remaining bytes\n        unchecked {\n            uint mask = (256 ** (32 - len)) - 1;\n            assembly {\n                let srcpart := and(mload(src), not(mask))\n                let destpart := and(mload(dest), mask)\n                mstore(dest, or(destpart, srcpart))\n            }\n        }\n\n        return buf;\n    }\n\n    /**\n    * @dev Appends a byte string to a buffer. Resizes if doing so would exceed\n    *      the capacity of the buffer.\n    * @param buf The buffer to append to.\n    * @param data The data to append.\n    * @param len The number of bytes to copy.\n    * @return The original buffer, for chaining.\n    */\n    function append(buffer memory buf, bytes memory data, uint len) internal pure returns (buffer memory) {\n        return write(buf, buf.buf.length, data, len);\n    }\n\n    /**\n    * @dev Appends a byte string to a buffer. Resizes if doing so would exceed\n    *      the capacity of the buffer.\n    * @param buf The buffer to append to.\n    * @param data The data to append.\n    * @return The original buffer, for chaining.\n    */\n    function append(buffer memory buf, bytes memory data) internal pure returns (buffer memory) {\n        return write(buf, buf.buf.length, data, data.length);\n    }\n\n    /**\n    * @dev Writes a byte to the buffer. Resizes if doing so would exceed the\n    *      capacity of the buffer.\n    * @param buf The buffer to append to.\n    * @param off The offset to write the byte at.\n    * @param data The data to append.\n    * @return The original buffer, for chaining.\n    */\n    function writeUint8(buffer memory buf, uint off, uint8 data) internal pure returns(buffer memory) {\n        if (off >= buf.capacity) {\n            resize(buf, buf.capacity * 2);\n        }\n\n        assembly {\n            // Memory address of the buffer data\n            let bufptr := mload(buf)\n            // Length of existing buffer data\n            let buflen := mload(bufptr)\n            // Address = buffer address + sizeof(buffer length) + off\n            let dest := add(add(bufptr, off), 32)\n            mstore8(dest, data)\n            // Update buffer length if we extended it\n            if eq(off, buflen) {\n                mstore(bufptr, add(buflen, 1))\n            }\n        }\n        return buf;\n    }\n\n    /**\n    * @dev Appends a byte to the buffer. Resizes if doing so would exceed the\n    *      capacity of the buffer.\n    * @param buf The buffer to append to.\n    * @param data The data to append.\n    * @return The original buffer, for chaining.\n    */\n    function appendUint8(buffer memory buf, uint8 data) internal pure returns(buffer memory) {\n        return writeUint8(buf, buf.buf.length, data);\n    }\n\n    /**\n    * @dev Writes up to 32 bytes to the buffer. Resizes if doing so would\n    *      exceed the capacity of the buffer.\n    * @param buf The buffer to append to.\n    * @param off The offset to write at.\n    * @param data The data to append.\n    * @param len The number of bytes to write (left-aligned).\n    * @return The original buffer, for chaining.\n    */\n    function write(buffer memory buf, uint off, bytes32 data, uint len) private pure returns(buffer memory) {\n        if (len + off > buf.capacity) {\n            resize(buf, (len + off) * 2);\n        }\n\n        unchecked {\n            uint mask = (256 ** len) - 1;\n            // Right-align data\n            data = data >> (8 * (32 - len));\n            assembly {\n                // Memory address of the buffer data\n                let bufptr := mload(buf)\n                // Address = buffer address + sizeof(buffer length) + off + len\n                let dest := add(add(bufptr, off), len)\n                mstore(dest, or(and(mload(dest), not(mask)), data))\n                // Update buffer length if we extended it\n                if gt(add(off, len), mload(bufptr)) {\n                    mstore(bufptr, add(off, len))\n                }\n            }\n        }\n        return buf;\n    }\n\n    /**\n    * @dev Writes a bytes20 to the buffer. Resizes if doing so would exceed the\n    *      capacity of the buffer.\n    * @param buf The buffer to append to.\n    * @param off The offset to write at.\n    * @param data The data to append.\n    * @return The original buffer, for chaining.\n    */\n    function writeBytes20(buffer memory buf, uint off, bytes20 data) internal pure returns (buffer memory) {\n        return write(buf, off, bytes32(data), 20);\n    }\n\n    /**\n    * @dev Appends a bytes20 to the buffer. Resizes if doing so would exceed\n    *      the capacity of the buffer.\n    * @param buf The buffer to append to.\n    * @param data The data to append.\n    * @return The original buffer, for chhaining.\n    */\n    function appendBytes20(buffer memory buf, bytes20 data) internal pure returns (buffer memory) {\n        return write(buf, buf.buf.length, bytes32(data), 20);\n    }\n\n    /**\n    * @dev Appends a bytes32 to the buffer. Resizes if doing so would exceed\n    *      the capacity of the buffer.\n    * @param buf The buffer to append to.\n    * @param data The data to append.\n    * @return The original buffer, for chaining.\n    */\n    function appendBytes32(buffer memory buf, bytes32 data) internal pure returns (buffer memory) {\n        return write(buf, buf.buf.length, data, 32);\n    }\n\n    /**\n    * @dev Writes an integer to the buffer. Resizes if doing so would exceed\n    *      the capacity of the buffer.\n    * @param buf The buffer to append to.\n    * @param off The offset to write at.\n    * @param data The data to append.\n    * @param len The number of bytes to write (right-aligned).\n    * @return The original buffer, for chaining.\n    */\n    function writeInt(buffer memory buf, uint off, uint data, uint len) private pure returns(buffer memory) {\n        if (len + off > buf.capacity) {\n            resize(buf, (len + off) * 2);\n        }\n\n        uint mask = (256 ** len) - 1;\n        assembly {\n            // Memory address of the buffer data\n            let bufptr := mload(buf)\n            // Address = buffer address + off + sizeof(buffer length) + len\n            let dest := add(add(bufptr, off), len)\n            mstore(dest, or(and(mload(dest), not(mask)), data))\n            // Update buffer length if we extended it\n            if gt(add(off, len), mload(bufptr)) {\n                mstore(bufptr, add(off, len))\n            }\n        }\n        return buf;\n    }\n\n    /**\n     * @dev Appends a byte to the end of the buffer. Resizes if doing so would\n     * exceed the capacity of the buffer.\n     * @param buf The buffer to append to.\n     * @param data The data to append.\n     * @return The original buffer.\n     */\n    function appendInt(buffer memory buf, uint data, uint len) internal pure returns(buffer memory) {\n        return writeInt(buf, buf.buf.length, data, len);\n    }\n}\n"
			},
			"contracts/dnssec-oracle/SHA1.sol": {
				"content": "pragma solidity >=0.8.4;\n\nlibrary SHA1 {\n    event Debug(bytes32 x);\n\n    function sha1(bytes memory data) internal pure returns(bytes20 ret) {\n        assembly {\n            // Get a safe scratch location\n            let scratch := mload(0x40)\n\n            // Get the data length, and point data at the first byte\n            let len := mload(data)\n            data := add(data, 32)\n\n            // Find the length after padding\n            let totallen := add(and(add(len, 1), 0xFFFFFFFFFFFFFFC0), 64)\n            switch lt(sub(totallen, len), 9)\n            case 1 { totallen := add(totallen, 64) }\n\n            let h := 0x6745230100EFCDAB890098BADCFE001032547600C3D2E1F0\n\n            function readword(ptr, off, count) -> result {\n                result := 0\n                if lt(off, count) {\n                    result := mload(add(ptr, off))\n                    count := sub(count, off)\n                    if lt(count, 32) {\n                        let mask := not(sub(exp(256, sub(32, count)), 1))\n                        result := and(result, mask)\n                    }\n                }\n            }\n\n            for { let i := 0 } lt(i, totallen) { i := add(i, 64) } {\n                mstore(scratch, readword(data, i, len))\n                mstore(add(scratch, 32), readword(data, add(i, 32), len))\n\n                // If we loaded the last byte, store the terminator byte\n                switch lt(sub(len, i), 64)\n                case 1 { mstore8(add(scratch, sub(len, i)), 0x80) }\n\n                // If this is the last block, store the length\n                switch eq(i, sub(totallen, 64))\n                case 1 { mstore(add(scratch, 32), or(mload(add(scratch, 32)), mul(len, 8))) }\n\n                // Expand the 16 32-bit words into 80\n                for { let j := 64 } lt(j, 128) { j := add(j, 12) } {\n                    let temp := xor(xor(mload(add(scratch, sub(j, 12))), mload(add(scratch, sub(j, 32)))), xor(mload(add(scratch, sub(j, 56))), mload(add(scratch, sub(j, 64)))))\n                    temp := or(and(mul(temp, 2), 0xFFFFFFFEFFFFFFFEFFFFFFFEFFFFFFFEFFFFFFFEFFFFFFFEFFFFFFFEFFFFFFFE), and(div(temp, 0x80000000), 0x0000000100000001000000010000000100000001000000010000000100000001))\n                    mstore(add(scratch, j), temp)\n                }\n                for { let j := 128 } lt(j, 320) { j := add(j, 24) } {\n                    let temp := xor(xor(mload(add(scratch, sub(j, 24))), mload(add(scratch, sub(j, 64)))), xor(mload(add(scratch, sub(j, 112))), mload(add(scratch, sub(j, 128)))))\n                    temp := or(and(mul(temp, 4), 0xFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFC), and(div(temp, 0x40000000), 0x0000000300000003000000030000000300000003000000030000000300000003))\n                    mstore(add(scratch, j), temp)\n                }\n\n                let x := h\n                let f := 0\n                let k := 0\n                for { let j := 0 } lt(j, 80) { j := add(j, 1) } {\n                    switch div(j, 20)\n                    case 0 {\n                        // f = d xor (b and (c xor d))\n                        f := xor(div(x, 0x100000000000000000000), div(x, 0x10000000000))\n                        f := and(div(x, 0x1000000000000000000000000000000), f)\n                        f := xor(div(x, 0x10000000000), f)\n                        k := 0x5A827999\n                    }\n                    case 1{\n                        // f = b xor c xor d\n                        f := xor(div(x, 0x1000000000000000000000000000000), div(x, 0x100000000000000000000))\n                        f := xor(div(x, 0x10000000000), f)\n                        k := 0x6ED9EBA1\n                    }\n                    case 2 {\n                        // f = (b and c) or (d and (b or c))\n                        f := or(div(x, 0x1000000000000000000000000000000), div(x, 0x100000000000000000000))\n                        f := and(div(x, 0x10000000000), f)\n                        f := or(and(div(x, 0x1000000000000000000000000000000), div(x, 0x100000000000000000000)), f)\n                        k := 0x8F1BBCDC\n                    }\n                    case 3 {\n                        // f = b xor c xor d\n                        f := xor(div(x, 0x1000000000000000000000000000000), div(x, 0x100000000000000000000))\n                        f := xor(div(x, 0x10000000000), f)\n                        k := 0xCA62C1D6\n                    }\n                    // temp = (a leftrotate 5) + f + e + k + w[i]\n                    let temp := and(div(x, 0x80000000000000000000000000000000000000000000000), 0x1F)\n                    temp := or(and(div(x, 0x800000000000000000000000000000000000000), 0xFFFFFFE0), temp)\n                    temp := add(f, temp)\n                    temp := add(and(x, 0xFFFFFFFF), temp)\n                    temp := add(k, temp)\n                    temp := add(div(mload(add(scratch, mul(j, 4))), 0x100000000000000000000000000000000000000000000000000000000), temp)\n                    x := or(div(x, 0x10000000000), mul(temp, 0x10000000000000000000000000000000000000000))\n                    x := or(and(x, 0xFFFFFFFF00FFFFFFFF000000000000FFFFFFFF00FFFFFFFF), mul(or(and(div(x, 0x4000000000000), 0xC0000000), and(div(x, 0x400000000000000000000), 0x3FFFFFFF)), 0x100000000000000000000))\n                }\n\n                h := and(add(h, x), 0xFFFFFFFF00FFFFFFFF00FFFFFFFF00FFFFFFFF00FFFFFFFF)\n            }\n            ret := mul(or(or(or(or(and(div(h, 0x100000000), 0xFFFFFFFF00000000000000000000000000000000), and(div(h, 0x1000000), 0xFFFFFFFF000000000000000000000000)), and(div(h, 0x10000), 0xFFFFFFFF0000000000000000)), and(div(h, 0x100), 0xFFFFFFFF00000000)), and(h, 0xFFFFFFFF)), 0x1000000000000000000000000)\n        }\n    }\n}"
			},
			"contracts/dnssec-oracle/nsec3digests/NSEC3Digest.sol": {
				"content": "pragma solidity ^0.8.4;\n\n/**\n * @dev Interface for contracts that implement NSEC3 digest algorithms.\n */\ninterface NSEC3Digest {\n    /**\n     * @dev Performs an NSEC3 iterated hash.\n     * @param salt The salt value to use on each iteration.\n     * @param data The data to hash.\n     * @param iterations The number of iterations to perform.\n     * @return The result of the iterated hash operation.\n     */\n     function hash(bytes calldata salt, bytes calldata data, uint iterations) external virtual pure returns (bytes32);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/Buffer.sol": {
				"Buffer": {
					"abi": [],
					"devdoc": {
						"details": "A library for working with mutable byte buffers in Solidity. Byte buffers are mutable and expandable, and provide a variety of primitives for writing to them. At any time you can fetch a bytes object containing the current contents of the buffer. The bytes object should not be stored between operations, as it may change due to resizing of the buffer.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Buffer.sol\":402:10704  library Buffer {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Buffer.sol\":402:10704  library Buffer {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201c9fc80f2cdbd4654a58493e3fba6f86f153f80cd87c46994d4b9c408e4af67f64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201c9fc80f2cdbd4654a58493e3fba6f86f153f80cd87c46994d4b9c408e4af67f64736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR SWAP16 0xC8 0xF 0x2C 0xDB 0xD4 PUSH6 0x4A58493E3FBA PUSH16 0x86F153F80CD87C46994D4B9C408E4AF6 PUSH32 0x64736F6C63430008180033000000000000000000000000000000000000000000 ",
							"sourceMap": "402:10302:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201c9fc80f2cdbd4654a58493e3fba6f86f153f80cd87c46994d4b9c408e4af67f64736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR SWAP16 0xC8 0xF 0x2C 0xDB 0xD4 PUSH6 0x4A58493E3FBA PUSH16 0x86F153F80CD87C46994D4B9C408E4AF6 PUSH32 0x64736F6C63430008180033000000000000000000000000000000000000000000 ",
							"sourceMap": "402:10302:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"append(struct Buffer.buffer memory,bytes memory)": "infinite",
								"append(struct Buffer.buffer memory,bytes memory,uint256)": "infinite",
								"appendBytes20(struct Buffer.buffer memory,bytes20)": "infinite",
								"appendBytes32(struct Buffer.buffer memory,bytes32)": "infinite",
								"appendInt(struct Buffer.buffer memory,uint256,uint256)": "infinite",
								"appendUint8(struct Buffer.buffer memory,uint8)": "infinite",
								"fromBytes(bytes memory)": "infinite",
								"init(struct Buffer.buffer memory,uint256)": "infinite",
								"max(uint256,uint256)": "infinite",
								"resize(struct Buffer.buffer memory,uint256)": "infinite",
								"truncate(struct Buffer.buffer memory)": "infinite",
								"write(struct Buffer.buffer memory,uint256,bytes memory,uint256)": "infinite",
								"write(struct Buffer.buffer memory,uint256,bytes32,uint256)": "infinite",
								"writeBytes20(struct Buffer.buffer memory,uint256,bytes20)": "infinite",
								"writeInt(struct Buffer.buffer memory,uint256,uint256,uint256)": "infinite",
								"writeUint8(struct Buffer.buffer memory,uint256,uint8)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 402,
									"end": 10704,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 402,
									"end": 10704,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 402,
									"end": 10704,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 402,
									"end": 10704,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 402,
									"end": 10704,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 402,
									"end": 10704,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 402,
									"end": 10704,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 402,
									"end": 10704,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 402,
									"end": 10704,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 402,
									"end": 10704,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 402,
									"end": 10704,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 402,
									"end": 10704,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 402,
									"end": 10704,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 402,
									"end": 10704,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 402,
									"end": 10704,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 402,
									"end": 10704,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 402,
									"end": 10704,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 402,
									"end": 10704,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 402,
									"end": 10704,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 402,
									"end": 10704,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 402,
									"end": 10704,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 402,
									"end": 10704,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 402,
									"end": 10704,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 402,
									"end": 10704,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 402,
									"end": 10704,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 402,
									"end": 10704,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 402,
									"end": 10704,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 402,
									"end": 10704,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 402,
									"end": 10704,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 402,
									"end": 10704,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 402,
									"end": 10704,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 402,
									"end": 10704,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 402,
									"end": 10704,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 402,
									"end": 10704,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 402,
									"end": 10704,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201c9fc80f2cdbd4654a58493e3fba6f86f153f80cd87c46994d4b9c408e4af67f64736f6c63430008180033",
									".code": [
										{
											"begin": 402,
											"end": 10704,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 402,
											"end": 10704,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 402,
											"end": 10704,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 402,
											"end": 10704,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 402,
											"end": 10704,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 402,
											"end": 10704,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 402,
											"end": 10704,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 402,
											"end": 10704,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 402,
											"end": 10704,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/Buffer.sol",
								"contracts/dnssec-oracle/SHA1.sol",
								"contracts/dnssec-oracle/nsec3digests/NSEC3Digest.sol",
								"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"A library for working with mutable byte buffers in Solidity. Byte buffers are mutable and expandable, and provide a variety of primitives for writing to them. At any time you can fetch a bytes object containing the current contents of the buffer. The bytes object should not be stored between operations, as it may change due to resizing of the buffer.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Buffer.sol\":\"Buffer\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Buffer.sol\":{\"keccak256\":\"0x18e42be1a3e4f7b4442d7ab0b524af5e09163503439954faf0ab3792cce91caa\",\"urls\":[\"bzz-raw://515c7c344086fe7cf7647eaaa477d3c9a6dbd3af6333136af0ce3b6955e79f84\",\"dweb:/ipfs/QmUZpq2w29ZxFF8b96qhr2jwj8aK14R2rZT2tzNPk128bo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/dnssec-oracle/SHA1.sol": {
				"SHA1": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "x",
									"type": "bytes32"
								}
							],
							"name": "Debug",
							"type": "event"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/dnssec-oracle/SHA1.sol\":26:5737  library SHA1 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/dnssec-oracle/SHA1.sol\":26:5737  library SHA1 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220256d3317b2821983d6297d81c3ba8f45730e6bbb68eac3509440329e37de2fbc64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220256d3317b2821983d6297d81c3ba8f45730e6bbb68eac3509440329e37de2fbc64736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 PUSH14 0x3317B2821983D6297D81C3BA8F45 PUSH20 0xE6BBB68EAC3509440329E37DE2FBC64736F6C63 NUMBER STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "26:5711:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220256d3317b2821983d6297d81c3ba8f45730e6bbb68eac3509440329e37de2fbc64736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 PUSH14 0x3317B2821983D6297D81C3BA8F45 PUSH20 0xE6BBB68EAC3509440329E37DE2FBC64736F6C63 NUMBER STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "26:5711:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"sha1(bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 26,
									"end": 5737,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 5737,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 5737,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 26,
									"end": 5737,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 26,
									"end": 5737,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 26,
									"end": 5737,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 26,
									"end": 5737,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 26,
									"end": 5737,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 26,
									"end": 5737,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 26,
									"end": 5737,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 5737,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 26,
									"end": 5737,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 26,
									"end": 5737,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 26,
									"end": 5737,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 26,
									"end": 5737,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 26,
									"end": 5737,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 5737,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 5737,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 26,
									"end": 5737,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 5737,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 26,
									"end": 5737,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 26,
									"end": 5737,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 26,
									"end": 5737,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 5737,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 26,
									"end": 5737,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 26,
									"end": 5737,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 26,
									"end": 5737,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 26,
									"end": 5737,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 5737,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 26,
									"end": 5737,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 26,
									"end": 5737,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 26,
									"end": 5737,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 26,
									"end": 5737,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 26,
									"end": 5737,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 26,
									"end": 5737,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220256d3317b2821983d6297d81c3ba8f45730e6bbb68eac3509440329e37de2fbc64736f6c63430008180033",
									".code": [
										{
											"begin": 26,
											"end": 5737,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 26,
											"end": 5737,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 26,
											"end": 5737,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 26,
											"end": 5737,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 26,
											"end": 5737,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 26,
											"end": 5737,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26,
											"end": 5737,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26,
											"end": 5737,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26,
											"end": 5737,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/Buffer.sol",
								"contracts/dnssec-oracle/SHA1.sol",
								"contracts/dnssec-oracle/nsec3digests/NSEC3Digest.sol",
								"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"x\",\"type\":\"bytes32\"}],\"name\":\"Debug\",\"type\":\"event\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/dnssec-oracle/SHA1.sol\":\"SHA1\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/dnssec-oracle/SHA1.sol\":{\"keccak256\":\"0x43d6fc9dfba44bcc5d696ac24d8e1b90355942b41c8324ea31dce1ebfce82263\",\"urls\":[\"bzz-raw://1960e30cb640d8fa40a05d1c699ada2bd70b7556d4d0a93ab7d234b9f7d5e41d\",\"dweb:/ipfs/Qmf39ZcTRYZQ5xX1LJhFmY9LeEWE548oN4QBcrR6vwuutY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/dnssec-oracle/nsec3digests/NSEC3Digest.sol": {
				"NSEC3Digest": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "salt",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "iterations",
									"type": "uint256"
								}
							],
							"name": "hash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for contracts that implement NSEC3 digest algorithms.",
						"kind": "dev",
						"methods": {
							"hash(bytes,bytes,uint256)": {
								"details": "Performs an NSEC3 iterated hash.",
								"params": {
									"data": "The data to hash.",
									"iterations": "The number of iterations to perform.",
									"salt": "The salt value to use on each iteration."
								},
								"returns": {
									"_0": "The result of the iterated hash operation."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"hash(bytes,bytes,uint256)": "68f9dab2"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"salt\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"iterations\",\"type\":\"uint256\"}],\"name\":\"hash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for contracts that implement NSEC3 digest algorithms.\",\"kind\":\"dev\",\"methods\":{\"hash(bytes,bytes,uint256)\":{\"details\":\"Performs an NSEC3 iterated hash.\",\"params\":{\"data\":\"The data to hash.\",\"iterations\":\"The number of iterations to perform.\",\"salt\":\"The salt value to use on each iteration.\"},\"returns\":{\"_0\":\"The result of the iterated hash operation.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/dnssec-oracle/nsec3digests/NSEC3Digest.sol\":\"NSEC3Digest\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/dnssec-oracle/nsec3digests/NSEC3Digest.sol\":{\"keccak256\":\"0xb3b61aee6bb472158b7ace6b5644dcb668271296b98a6dcde24dc72e3cdf4950\",\"urls\":[\"bzz-raw://e4294774b9f5ca42f886ee2de37ec2d3dd02f1048e824aa5983f4dedf2751e31\",\"dweb:/ipfs/QmYSaec2cLmyH63Paf4gb3PS78XqKFDm6WxyvYjcNU7DqW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol": {
				"SHA1NSEC3Digest": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "salt",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "iterations",
									"type": "uint256"
								}
							],
							"name": "hash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implements the DNSSEC iterated SHA1 digest used for NSEC3 records.",
						"kind": "dev",
						"methods": {
							"hash(bytes,bytes,uint256)": {
								"details": "Performs an NSEC3 iterated hash.",
								"params": {
									"data": "The data to hash.",
									"iterations": "The number of iterations to perform.",
									"salt": "The salt value to use on each iteration."
								},
								"returns": {
									"_0": "The result of the iterated hash operation."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":183:882  contract SHA1NSEC3Digest is NSEC3Digest {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":183:882  contract SHA1NSEC3Digest is NSEC3Digest {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x68f9dab2\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":266:880  function hash(bytes calldata salt, bytes calldata data, uint iterations) external override pure returns (bytes32) {... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_7:\n        /* \"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":371:378  bytes32 */\n      0x00\n        /* \"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":390:414  Buffer.buffer memory buf */\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n        /* \"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":424:464  buf.init(salt.length + data.length + 16) */\n      tag_13\n        /* \"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":461:463  16 */\n      0x10\n        /* \"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":447:451  data */\n      dup7\n      dup7\n        /* \"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":447:458  data.length */\n      swap1\n      pop\n        /* \"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":433:437  salt */\n      dup10\n      dup10\n        /* \"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":433:444  salt.length */\n      swap1\n      pop\n        /* \"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":433:458  salt.length + data.length */\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n        /* \"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":433:463  salt.length + data.length + 16 */\n      tag_16\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_16:\n        /* \"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":424:427  buf */\n      dup3\n        /* \"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":424:432  buf.init */\n      tag_17\n      swap1\n        /* \"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":424:464  buf.init(salt.length + data.length + 16) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_13:\n      pop\n        /* \"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":475:491  buf.append(data) */\n      tag_18\n        /* \"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":486:490  data */\n      dup6\n      dup6\n        /* \"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":475:491  buf.append(data) */\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      dup2\n      dup5\n      add\n      mstore\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      swap1\n      pop\n      dup1\n      dup4\n      add\n      swap3\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":475:478  buf */\n      dup3\n        /* \"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":475:485  buf.append */\n      tag_19\n      swap1\n        /* \"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":475:491  buf.append(data) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_18:\n      pop\n        /* \"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":501:517  buf.append(salt) */\n      tag_20\n        /* \"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":512:516  salt */\n      dup8\n      dup8\n        /* \"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":501:517  buf.append(salt) */\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      dup2\n      dup5\n      add\n      mstore\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      swap1\n      pop\n      dup1\n      dup4\n      add\n      swap3\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":501:504  buf */\n      dup3\n        /* \"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":501:511  buf.append */\n      tag_19\n      swap1\n        /* \"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":501:517  buf.append(salt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_20:\n      pop\n        /* \"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":527:536  bytes20 h */\n      0x00\n        /* \"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":539:557  SHA1.sha1(buf.buf) */\n      tag_21\n        /* \"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":549:552  buf */\n      dup3\n        /* \"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":549:556  buf.buf */\n      0x00\n      add\n      mload\n        /* \"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":539:548  SHA1.sha1 */\n      tag_22\n        /* \"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":539:557  SHA1.sha1(buf.buf) */\n      jump\t// in\n    tag_21:\n        /* \"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":527:557  bytes20 h = SHA1.sha1(buf.buf) */\n      swap1\n      pop\n        /* \"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":584:585  0 */\n      0x00\n        /* \"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":571:581  iterations */\n      dup5\n        /* \"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":571:585  iterations > 0 */\n      gt\n        /* \"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":567:846  if (iterations > 0) {... */\n      iszero\n      tag_23\n      jumpi\n        /* \"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":601:615  buf.truncate() */\n      tag_24\n        /* \"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":601:604  buf */\n      dup3\n        /* \"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":601:613  buf.truncate */\n      tag_25\n        /* \"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":601:615  buf.truncate() */\n      jump\t// in\n    tag_24:\n      pop\n        /* \"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":629:658  buf.appendBytes20(bytes20(0)) */\n      tag_26\n        /* \"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":655:656  0 */\n      0x00\n        /* \"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":647:657  bytes20(0) */\n      0x60\n      shl\n        /* \"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":629:632  buf */\n      dup4\n        /* \"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":629:646  buf.appendBytes20 */\n      tag_27\n      swap1\n        /* \"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":629:658  buf.appendBytes20(bytes20(0)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_26:\n      pop\n        /* \"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":672:688  buf.append(salt) */\n      tag_28\n        /* \"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":683:687  salt */\n      dup9\n      dup9\n        /* \"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":672:688  buf.append(salt) */\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      dup2\n      dup5\n      add\n      mstore\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      swap1\n      pop\n      dup1\n      dup4\n      add\n      swap3\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":672:675  buf */\n      dup4\n        /* \"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":672:682  buf.append */\n      tag_19\n      swap1\n        /* \"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":672:688  buf.append(salt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_28:\n      pop\n        /* \"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":708:714  uint i */\n      0x00\n        /* \"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":703:836  for (uint i = 0; i < iterations; i++) {... */\n    tag_29:\n        /* \"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":724:734  iterations */\n      dup5\n        /* \"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":720:721  i */\n      dup2\n        /* \"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":720:734  i < iterations */\n      lt\n        /* \"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":703:836  for (uint i = 0; i < iterations; i++) {... */\n      iszero\n      tag_30\n      jumpi\n        /* \"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":759:781  buf.writeBytes20(0, h) */\n      tag_32\n        /* \"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":776:777  0 */\n      0x00\n        /* \"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":779:780  h */\n      dup4\n        /* \"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":759:762  buf */\n      dup6\n        /* \"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":759:775  buf.writeBytes20 */\n      tag_33\n      swap1\n        /* \"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":759:781  buf.writeBytes20(0, h) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_32:\n      pop\n        /* \"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":803:821  SHA1.sha1(buf.buf) */\n      tag_34\n        /* \"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":813:816  buf */\n      dup4\n        /* \"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":813:820  buf.buf */\n      0x00\n      add\n      mload\n        /* \"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":803:812  SHA1.sha1 */\n      tag_22\n        /* \"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":803:821  SHA1.sha1(buf.buf) */\n      jump\t// in\n    tag_34:\n        /* \"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":799:821  h = SHA1.sha1(buf.buf) */\n      swap2\n      pop\n        /* \"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":736:739  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":703:836  for (uint i = 0; i < iterations; i++) {... */\n      jump(tag_29)\n    tag_30:\n      pop\n        /* \"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":567:846  if (iterations > 0) {... */\n    tag_23:\n        /* \"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":871:872  h */\n      dup1\n        /* \"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":863:873  bytes32(h) */\n      not(0xffffffffffffffffffffffff)\n      and\n        /* \"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":856:873  return bytes32(h) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":266:880  function hash(bytes calldata salt, bytes calldata data, uint iterations) external override pure returns (bytes32) {... */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Buffer.sol\":977:1432  function init(buffer memory buf, uint capacity) internal pure returns(buffer memory) {... */\n    tag_17:\n        /* \"contracts/Buffer.sol\":1047:1060  buffer memory */\n      tag_35\n      tag_12\n      jump\t// in\n    tag_35:\n        /* \"contracts/Buffer.sol\":1093:1094  0 */\n      0x00\n        /* \"contracts/Buffer.sol\":1087:1089  32 */\n      0x20\n        /* \"contracts/Buffer.sol\":1076:1084  capacity */\n      dup4\n        /* \"contracts/Buffer.sol\":1076:1089  capacity % 32 */\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n        /* \"contracts/Buffer.sol\":1076:1094  capacity % 32 != 0 */\n      eq\n        /* \"contracts/Buffer.sol\":1072:1153  if (capacity % 32 != 0) {... */\n      tag_39\n      jumpi\n        /* \"contracts/Buffer.sol\":1139:1141  32 */\n      0x20\n        /* \"contracts/Buffer.sol\":1128:1136  capacity */\n      dup3\n        /* \"contracts/Buffer.sol\":1128:1141  capacity % 32 */\n      tag_40\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_40:\n        /* \"contracts/Buffer.sol\":1122:1124  32 */\n      0x20\n        /* \"contracts/Buffer.sol\":1122:1142  32 - (capacity % 32) */\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n        /* \"contracts/Buffer.sol\":1110:1142  capacity += 32 - (capacity % 32) */\n      dup3\n      tag_43\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_43:\n      swap2\n      pop\n        /* \"contracts/Buffer.sol\":1072:1153  if (capacity % 32 != 0) {... */\n    tag_39:\n        /* \"contracts/Buffer.sol\":1223:1231  capacity */\n      dup2\n        /* \"contracts/Buffer.sol\":1208:1211  buf */\n      dup4\n        /* \"contracts/Buffer.sol\":1208:1220  buf.capacity */\n      0x20\n      add\n        /* \"contracts/Buffer.sol\":1208:1231  buf.capacity = capacity */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Buffer.sol\":1281:1285  0x40 */\n      0x40\n        /* \"contracts/Buffer.sol\":1275:1286  mload(0x40) */\n      mload\n        /* \"contracts/Buffer.sol\":1311:1314  ptr */\n      dup1\n        /* \"contracts/Buffer.sol\":1306:1309  buf */\n      dup5\n        /* \"contracts/Buffer.sol\":1299:1315  mstore(buf, ptr) */\n      mstore\n        /* \"contracts/Buffer.sol\":1340:1341  0 */\n      0x00\n        /* \"contracts/Buffer.sol\":1335:1338  ptr */\n      dup2\n        /* \"contracts/Buffer.sol\":1328:1342  mstore(ptr, 0) */\n      mstore\n        /* \"contracts/Buffer.sol\":1385:1393  capacity */\n      dup3\n        /* \"contracts/Buffer.sol\":1380:1383  ptr */\n      dup2\n        /* \"contracts/Buffer.sol\":1376:1394  add(ptr, capacity) */\n      add\n        /* \"contracts/Buffer.sol\":1372:1374  32 */\n      0x20\n        /* \"contracts/Buffer.sol\":1368:1395  add(32, add(ptr, capacity)) */\n      add\n        /* \"contracts/Buffer.sol\":1362:1366  0x40 */\n      0x40\n        /* \"contracts/Buffer.sol\":1355:1396  mstore(0x40, add(32, add(ptr, capacity))) */\n      mstore\n        /* \"contracts/Buffer.sol\":1250:1406  {... */\n      pop\n        /* \"contracts/Buffer.sol\":1422:1425  buf */\n      dup3\n        /* \"contracts/Buffer.sol\":1415:1425  return buf */\n      swap1\n      pop\n        /* \"contracts/Buffer.sol\":977:1432  function init(buffer memory buf, uint capacity) internal pure returns(buffer memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Buffer.sol\":5001:5162  function append(buffer memory buf, bytes memory data) internal pure returns (buffer memory) {... */\n    tag_19:\n        /* \"contracts/Buffer.sol\":5078:5091  buffer memory */\n      tag_44\n      tag_12\n      jump\t// in\n    tag_44:\n        /* \"contracts/Buffer.sol\":5110:5155  write(buf, buf.buf.length, data, data.length) */\n      tag_46\n        /* \"contracts/Buffer.sol\":5116:5119  buf */\n      dup4\n        /* \"contracts/Buffer.sol\":5121:5124  buf */\n      dup5\n        /* \"contracts/Buffer.sol\":5121:5128  buf.buf */\n      0x00\n      add\n      mload\n        /* \"contracts/Buffer.sol\":5121:5135  buf.buf.length */\n      mload\n        /* \"contracts/Buffer.sol\":5137:5141  data */\n      dup5\n        /* \"contracts/Buffer.sol\":5143:5147  data */\n      dup6\n        /* \"contracts/Buffer.sol\":5143:5154  data.length */\n      mload\n        /* \"contracts/Buffer.sol\":5110:5115  write */\n      tag_47\n        /* \"contracts/Buffer.sol\":5110:5155  write(buf, buf.buf.length, data, data.length) */\n      jump\t// in\n    tag_46:\n        /* \"contracts/Buffer.sol\":5103:5155  return write(buf, buf.buf.length, data, data.length) */\n      swap1\n      pop\n        /* \"contracts/Buffer.sol\":5001:5162  function append(buffer memory buf, bytes memory data) internal pure returns (buffer memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/dnssec-oracle/SHA1.sol\":74:5735  function sha1(bytes memory data) internal pure returns(bytes20 ret) {... */\n    tag_22:\n        /* \"contracts/dnssec-oracle/SHA1.sol\":129:140  bytes20 ret */\n      0x00\n        /* \"contracts/dnssec-oracle/SHA1.sol\":239:243  0x40 */\n      0x40\n        /* \"contracts/dnssec-oracle/SHA1.sol\":233:244  mload(0x40) */\n      mload\n        /* \"contracts/dnssec-oracle/SHA1.sol\":344:348  data */\n      dup3\n        /* \"contracts/dnssec-oracle/SHA1.sol\":338:349  mload(data) */\n      mload\n        /* \"contracts/dnssec-oracle/SHA1.sol\":380:382  32 */\n      0x20\n        /* \"contracts/dnssec-oracle/SHA1.sol\":374:378  data */\n      dup5\n        /* \"contracts/dnssec-oracle/SHA1.sol\":370:383  add(data, 32) */\n      add\n        /* \"contracts/dnssec-oracle/SHA1.sol\":362:383  data := add(data, 32) */\n      swap4\n      pop\n        /* \"contracts/dnssec-oracle/SHA1.sol\":500:502  64 */\n      0x40\n        /* \"contracts/dnssec-oracle/SHA1.sol\":479:497  0xFFFFFFFFFFFFFFC0 */\n      0xffffffffffffffc0\n        /* \"contracts/dnssec-oracle/SHA1.sol\":475:476  1 */\n      0x01\n        /* \"contracts/dnssec-oracle/SHA1.sol\":470:473  len */\n      dup4\n        /* \"contracts/dnssec-oracle/SHA1.sol\":466:477  add(len, 1) */\n      add\n        /* \"contracts/dnssec-oracle/SHA1.sol\":462:498  and(add(len, 1), 0xFFFFFFFFFFFFFFC0) */\n      and\n        /* \"contracts/dnssec-oracle/SHA1.sol\":458:503  add(and(add(len, 1), 0xFFFFFFFFFFFFFFC0), 64) */\n      add\n        /* \"contracts/dnssec-oracle/SHA1.sol\":546:547  9 */\n      0x09\n        /* \"contracts/dnssec-oracle/SHA1.sol\":540:543  len */\n      dup3\n        /* \"contracts/dnssec-oracle/SHA1.sol\":530:538  totallen */\n      dup3\n        /* \"contracts/dnssec-oracle/SHA1.sol\":526:544  sub(totallen, len) */\n      sub\n        /* \"contracts/dnssec-oracle/SHA1.sol\":523:548  lt(sub(totallen, len), 9) */\n      lt\n        /* \"contracts/dnssec-oracle/SHA1.sol\":566:567  1 */\n      0x01\n        /* \"contracts/dnssec-oracle/SHA1.sol\":561:601  case 1 { totallen := add(totallen, 64) } */\n      dup2\n      sub\n        /* \"contracts/dnssec-oracle/SHA1.sol\":516:601  switch lt(sub(totallen, len), 9)... */\n      tag_50\n        /* \"contracts/dnssec-oracle/SHA1.sol\":561:601  case 1 { totallen := add(totallen, 64) } */\n      jumpi\n        /* \"contracts/dnssec-oracle/SHA1.sol\":596:598  64 */\n      0x40\n        /* \"contracts/dnssec-oracle/SHA1.sol\":586:594  totallen */\n      dup3\n        /* \"contracts/dnssec-oracle/SHA1.sol\":582:599  add(totallen, 64) */\n      add\n        /* \"contracts/dnssec-oracle/SHA1.sol\":570:599  totallen := add(totallen, 64) */\n      swap2\n      pop\n        /* \"contracts/dnssec-oracle/SHA1.sol\":516:601  switch lt(sub(totallen, len), 9)... */\n    tag_50:\n      pop\n        /* \"contracts/dnssec-oracle/SHA1.sol\":624:674  0x6745230100EFCDAB890098BADCFE001032547600C3D2E1F0 */\n      0x6745230100efcdab890098badcfe001032547600c3d2e1f0\n        /* \"contracts/dnssec-oracle/SHA1.sol\":688:1113  function readword(ptr, off, count) -> result {... */\n      jump(tag_52)\n    tag_49:\n        /* \"contracts/dnssec-oracle/SHA1.sol\":726:732  result */\n      0x00\n        /* \"contracts/dnssec-oracle/SHA1.sol\":790:795  count */\n      dup4\n        /* \"contracts/dnssec-oracle/SHA1.sol\":785:788  off */\n      dup4\n        /* \"contracts/dnssec-oracle/SHA1.sol\":782:796  lt(off, count) */\n      lt\n        /* \"contracts/dnssec-oracle/SHA1.sol\":779:1099  if lt(off, count) {... */\n      iszero\n      tag_54\n      jumpi\n        /* \"contracts/dnssec-oracle/SHA1.sol\":844:847  off */\n      dup3\n        /* \"contracts/dnssec-oracle/SHA1.sol\":839:842  ptr */\n      dup3\n        /* \"contracts/dnssec-oracle/SHA1.sol\":835:848  add(ptr, off) */\n      add\n        /* \"contracts/dnssec-oracle/SHA1.sol\":829:849  mload(add(ptr, off)) */\n      mload\n        /* \"contracts/dnssec-oracle/SHA1.sol\":819:849  result := mload(add(ptr, off)) */\n      swap1\n      pop\n        /* \"contracts/dnssec-oracle/SHA1.sol\":890:893  off */\n      dup3\n        /* \"contracts/dnssec-oracle/SHA1.sol\":883:888  count */\n      dup5\n        /* \"contracts/dnssec-oracle/SHA1.sol\":879:894  sub(count, off) */\n      sub\n        /* \"contracts/dnssec-oracle/SHA1.sol\":870:894  count := sub(count, off) */\n      swap4\n      pop\n        /* \"contracts/dnssec-oracle/SHA1.sol\":928:930  32 */\n      0x20\n        /* \"contracts/dnssec-oracle/SHA1.sol\":921:926  count */\n      dup5\n        /* \"contracts/dnssec-oracle/SHA1.sol\":918:931  lt(count, 32) */\n      lt\n        /* \"contracts/dnssec-oracle/SHA1.sol\":915:1081  if lt(count, 32) {... */\n      iszero\n      tag_55\n      jumpi\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1004:1005  1 */\n      0x01\n        /* \"contracts/dnssec-oracle/SHA1.sol\":995:1000  count */\n      dup5\n        /* \"contracts/dnssec-oracle/SHA1.sol\":991:993  32 */\n      0x20\n        /* \"contracts/dnssec-oracle/SHA1.sol\":987:1001  sub(32, count) */\n      sub\n        /* \"contracts/dnssec-oracle/SHA1.sol\":982:985  256 */\n      0x0100\n        /* \"contracts/dnssec-oracle/SHA1.sol\":978:1002  exp(256, sub(32, count)) */\n      exp\n        /* \"contracts/dnssec-oracle/SHA1.sol\":974:1006  sub(exp(256, sub(32, count)), 1) */\n      sub\n        /* \"contracts/dnssec-oracle/SHA1.sol\":970:1007  not(sub(exp(256, sub(32, count)), 1)) */\n      not\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1054:1058  mask */\n      dup1\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1046:1052  result */\n      dup3\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1042:1059  and(result, mask) */\n      and\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1032:1059  result := and(result, mask) */\n      swap2\n      pop\n        /* \"contracts/dnssec-oracle/SHA1.sol\":932:1081  {... */\n      pop\n        /* \"contracts/dnssec-oracle/SHA1.sol\":915:1081  if lt(count, 32) {... */\n    tag_55:\n        /* \"contracts/dnssec-oracle/SHA1.sol\":779:1099  if lt(off, count) {... */\n    tag_54:\n        /* \"contracts/dnssec-oracle/SHA1.sol\":688:1113  function readword(ptr, off, count) -> result {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_52:\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1142:1143  0 */\n      0x00\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1127:5411  for { let i := 0 } lt(i, totallen) { i := add(i, 64) } {... */\n    tag_56:\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1152:1160  totallen */\n      dup3\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1149:1150  i */\n      dup2\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1146:1161  lt(i, totallen) */\n      lt\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1127:5411  for { let i := 0 } lt(i, totallen) { i := add(i, 64) } {... */\n      iszero\n      tag_58\n      jumpi\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1216:1238  readword(data, i, len) */\n      tag_59\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1234:1237  len */\n      dup5\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1231:1232  i */\n      dup3\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1225:1229  data */\n      dup10\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1216:1238  readword(data, i, len) */\n      tag_49\n      jump\t// in\n    tag_59:\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1207:1214  scratch */\n      dup6\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1200:1239  mstore(scratch, readword(data, i, len)) */\n      mstore\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1281:1312  readword(data, add(i, 32), len) */\n      tag_60\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1308:1311  len */\n      dup5\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1303:1305  32 */\n      0x20\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1300:1301  i */\n      dup4\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1296:1306  add(i, 32) */\n      add\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1290:1294  data */\n      dup10\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1281:1312  readword(data, add(i, 32), len) */\n      tag_49\n      jump\t// in\n    tag_60:\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1276:1278  32 */\n      0x20\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1267:1274  scratch */\n      dup7\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1263:1279  add(scratch, 32) */\n      add\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1256:1313  mstore(add(scratch, 32), readword(data, add(i, 32), len)) */\n      mstore\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1427:1429  64 */\n      0x40\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1423:1424  i */\n      dup2\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1418:1421  len */\n      dup6\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1414:1425  sub(len, i) */\n      sub\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1411:1430  lt(sub(len, i), 64) */\n      lt\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1452:1453  1 */\n      0x01\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1447:1498  case 1 { mstore8(add(scratch, sub(len, i)), 0x80) } */\n      dup2\n      sub\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1404:1498  switch lt(sub(len, i), 64)... */\n      tag_61\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1447:1498  case 1 { mstore8(add(scratch, sub(len, i)), 0x80) } */\n      jumpi\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1491:1495  0x80 */\n      0x80\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1486:1487  i */\n      dup3\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1481:1484  len */\n      dup7\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1477:1488  sub(len, i) */\n      sub\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1468:1475  scratch */\n      dup8\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1464:1489  add(scratch, sub(len, i)) */\n      add\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1456:1496  mstore8(add(scratch, sub(len, i)), 0x80) */\n      mstore8\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1404:1498  switch lt(sub(len, i), 64)... */\n    tag_61:\n      pop\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1606:1608  64 */\n      0x40\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1596:1604  totallen */\n      dup4\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1592:1609  sub(totallen, 64) */\n      sub\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1589:1590  i */\n      dup2\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1586:1610  eq(i, sub(totallen, 64)) */\n      eq\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1632:1633  1 */\n      0x01\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1627:1704  case 1 { mstore(add(scratch, 32), or(mload(add(scratch, 32)), mul(len, 8))) } */\n      dup2\n      sub\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1579:1704  switch eq(i, sub(totallen, 64))... */\n      tag_63\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1627:1704  case 1 { mstore(add(scratch, 32), or(mload(add(scratch, 32)), mul(len, 8))) } */\n      jumpi\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1698:1699  8 */\n      0x08\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1693:1696  len */\n      dup6\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1689:1700  mul(len, 8) */\n      mul\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1683:1685  32 */\n      0x20\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1674:1681  scratch */\n      dup8\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1670:1686  add(scratch, 32) */\n      add\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1664:1687  mload(add(scratch, 32)) */\n      mload\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1661:1701  or(mload(add(scratch, 32)), mul(len, 8)) */\n      or\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1656:1658  32 */\n      0x20\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1647:1654  scratch */\n      dup8\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1643:1659  add(scratch, 32) */\n      add\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1636:1702  mstore(add(scratch, 32), or(mload(add(scratch, 32)), mul(len, 8))) */\n      mstore\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1579:1704  switch eq(i, sub(totallen, 64))... */\n    tag_63:\n      pop\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1791:1793  64 */\n      0x40\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1776:2288  for { let j := 64 } lt(j, 128) { j := add(j, 12) } {... */\n    tag_65:\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1802:1805  128 */\n      0x80\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1799:1800  j */\n      dup2\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1796:1806  lt(j, 128) */\n      lt\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1776:2288  for { let j := 64 } lt(j, 128) { j := add(j, 12) } {... */\n      iszero\n      tag_67\n      jumpi\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1999:2001  64 */\n      0x40\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1996:1997  j */\n      dup2\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1992:2002  sub(j, 64) */\n      sub\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1983:1990  scratch */\n      dup7\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1979:2003  add(scratch, sub(j, 64)) */\n      add\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1973:2004  mload(add(scratch, sub(j, 64))) */\n      mload\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1966:1968  56 */\n      0x38\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1963:1964  j */\n      dup3\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1959:1969  sub(j, 56) */\n      sub\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1950:1957  scratch */\n      dup8\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1946:1970  add(scratch, sub(j, 56)) */\n      add\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1940:1971  mload(add(scratch, sub(j, 56))) */\n      mload\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1936:2005  xor(mload(add(scratch, sub(j, 56))), mload(add(scratch, sub(j, 64)))) */\n      xor\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1928:1930  32 */\n      0x20\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1925:1926  j */\n      dup3\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1921:1931  sub(j, 32) */\n      sub\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1912:1919  scratch */\n      dup8\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1908:1932  add(scratch, sub(j, 32)) */\n      add\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1902:1933  mload(add(scratch, sub(j, 32))) */\n      mload\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1895:1897  12 */\n      0x0c\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1892:1893  j */\n      dup4\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1888:1898  sub(j, 12) */\n      sub\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1879:1886  scratch */\n      dup9\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1875:1899  add(scratch, sub(j, 12)) */\n      add\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1869:1900  mload(add(scratch, sub(j, 12))) */\n      mload\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1865:1934  xor(mload(add(scratch, sub(j, 12))), mload(add(scratch, sub(j, 32)))) */\n      xor\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1861:2006  xor(xor(mload(add(scratch, sub(j, 12))), mload(add(scratch, sub(j, 32)))), xor(mload(add(scratch, sub(j, 56))), mload(add(scratch, sub(j, 64))))) */\n      xor\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2152:2218  0x0000000100000001000000010000000100000001000000010000000100000001 */\n      0x0100000001000000010000000100000001000000010000000100000001\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2139:2149  0x80000000 */\n      0x80000000\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2133:2137  temp */\n      dup3\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2129:2150  div(temp, 0x80000000) */\n      div\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2125:2219  and(div(temp, 0x80000000), 0x0000000100000001000000010000000100000001000000010000000100000001) */\n      and\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2056:2122  0xFFFFFFFEFFFFFFFEFFFFFFFEFFFFFFFEFFFFFFFEFFFFFFFEFFFFFFFEFFFFFFFE */\n      0xfffffffefffffffefffffffefffffffefffffffefffffffefffffffefffffffe\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2052:2053  2 */\n      0x02\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2046:2050  temp */\n      dup4\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2042:2054  mul(temp, 2) */\n      mul\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2038:2123  and(mul(temp, 2), 0xFFFFFFFEFFFFFFFEFFFFFFFEFFFFFFFEFFFFFFFEFFFFFFFEFFFFFFFEFFFFFFFE) */\n      and\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2035:2220  or(and(mul(temp, 2), 0xFFFFFFFEFFFFFFFEFFFFFFFEFFFFFFFEFFFFFFFEFFFFFFFEFFFFFFFEFFFFFFFE), and(div(temp, 0x80000000), 0x0000000100000001000000010000000100000001000000010000000100000001)) */\n      or\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2027:2220  temp := or(and(mul(temp, 2), 0xFFFFFFFEFFFFFFFEFFFFFFFEFFFFFFFEFFFFFFFEFFFFFFFEFFFFFFFEFFFFFFFE), and(div(temp, 0x80000000), 0x0000000100000001000000010000000100000001000000010000000100000001)) */\n      swap1\n      pop\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2265:2269  temp */\n      dup1\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2261:2262  j */\n      dup3\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2252:2259  scratch */\n      dup9\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2248:2263  add(scratch, j) */\n      add\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2241:2270  mstore(add(scratch, j), temp) */\n      mstore\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1827:2288  {... */\n      pop\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1821:1823  12 */\n      0x0c\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1818:1819  j */\n      dup2\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1814:1824  add(j, 12) */\n      add\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1809:1824  j := add(j, 12) */\n      swap1\n      pop\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1776:2288  for { let j := 64 } lt(j, 128) { j := add(j, 12) } {... */\n      jump(tag_65)\n    tag_67:\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1780:1795  { let j := 64 } */\n      pop\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2320:2323  128 */\n      0x80\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2305:2820  for { let j := 128 } lt(j, 320) { j := add(j, 24) } {... */\n    tag_68:\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2332:2335  320 */\n      0x0140\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2329:2330  j */\n      dup2\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2326:2336  lt(j, 320) */\n      lt\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2305:2820  for { let j := 128 } lt(j, 320) { j := add(j, 24) } {... */\n      iszero\n      tag_70\n      jumpi\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2530:2533  128 */\n      0x80\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2527:2528  j */\n      dup2\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2523:2534  sub(j, 128) */\n      sub\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2514:2521  scratch */\n      dup7\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2510:2535  add(scratch, sub(j, 128)) */\n      add\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2504:2536  mload(add(scratch, sub(j, 128))) */\n      mload\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2496:2499  112 */\n      0x70\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2493:2494  j */\n      dup3\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2489:2500  sub(j, 112) */\n      sub\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2480:2487  scratch */\n      dup8\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2476:2501  add(scratch, sub(j, 112)) */\n      add\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2470:2502  mload(add(scratch, sub(j, 112))) */\n      mload\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2466:2537  xor(mload(add(scratch, sub(j, 112))), mload(add(scratch, sub(j, 128)))) */\n      xor\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2458:2460  64 */\n      0x40\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2455:2456  j */\n      dup3\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2451:2461  sub(j, 64) */\n      sub\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2442:2449  scratch */\n      dup8\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2438:2462  add(scratch, sub(j, 64)) */\n      add\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2432:2463  mload(add(scratch, sub(j, 64))) */\n      mload\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2425:2427  24 */\n      0x18\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2422:2423  j */\n      dup4\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2418:2428  sub(j, 24) */\n      sub\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2409:2416  scratch */\n      dup9\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2405:2429  add(scratch, sub(j, 24)) */\n      add\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2399:2430  mload(add(scratch, sub(j, 24))) */\n      mload\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2395:2464  xor(mload(add(scratch, sub(j, 24))), mload(add(scratch, sub(j, 64)))) */\n      xor\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2391:2538  xor(xor(mload(add(scratch, sub(j, 24))), mload(add(scratch, sub(j, 64)))), xor(mload(add(scratch, sub(j, 112))), mload(add(scratch, sub(j, 128))))) */\n      xor\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2684:2750  0x0000000300000003000000030000000300000003000000030000000300000003 */\n      0x0300000003000000030000000300000003000000030000000300000003\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2671:2681  0x40000000 */\n      0x40000000\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2665:2669  temp */\n      dup3\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2661:2682  div(temp, 0x40000000) */\n      div\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2657:2751  and(div(temp, 0x40000000), 0x0000000300000003000000030000000300000003000000030000000300000003) */\n      and\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2588:2654  0xFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFC */\n      0xfffffffcfffffffcfffffffcfffffffcfffffffcfffffffcfffffffcfffffffc\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2584:2585  4 */\n      0x04\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2578:2582  temp */\n      dup4\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2574:2586  mul(temp, 4) */\n      mul\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2570:2655  and(mul(temp, 4), 0xFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFC) */\n      and\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2567:2752  or(and(mul(temp, 4), 0xFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFC), and(div(temp, 0x40000000), 0x0000000300000003000000030000000300000003000000030000000300000003)) */\n      or\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2559:2752  temp := or(and(mul(temp, 4), 0xFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFC), and(div(temp, 0x40000000), 0x0000000300000003000000030000000300000003000000030000000300000003)) */\n      swap1\n      pop\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2797:2801  temp */\n      dup1\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2793:2794  j */\n      dup3\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2784:2791  scratch */\n      dup9\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2780:2795  add(scratch, j) */\n      add\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2773:2802  mstore(add(scratch, j), temp) */\n      mstore\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2357:2820  {... */\n      pop\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2351:2353  24 */\n      0x18\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2348:2349  j */\n      dup2\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2344:2354  add(j, 24) */\n      add\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2339:2354  j := add(j, 24) */\n      swap1\n      pop\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2305:2820  for { let j := 128 } lt(j, 320) { j := add(j, 24) } {... */\n      jump(tag_68)\n    tag_70:\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2309:2325  { let j := 128 } */\n      pop\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2847:2848  h */\n      dup2\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2874:2875  0 */\n      0x00\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2901:2902  0 */\n      dup1\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2934:2935  0 */\n      0x00\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2919:5308  for { let j := 0 } lt(j, 80) { j := add(j, 1) } {... */\n    tag_71:\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2944:2946  80 */\n      0x50\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2941:2942  j */\n      dup2\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2938:2947  lt(j, 80) */\n      lt\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2919:5308  for { let j := 0 } lt(j, 80) { j := add(j, 1) } {... */\n      iszero\n      tag_73\n      jumpi\n        /* \"contracts/dnssec-oracle/SHA1.sol\":3003:3005  20 */\n      0x14\n        /* \"contracts/dnssec-oracle/SHA1.sol\":3000:3001  j */\n      dup2\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2996:3006  div(j, 20) */\n      div\n        /* \"contracts/dnssec-oracle/SHA1.sol\":3032:3033  0 */\n      0x00\n        /* \"contracts/dnssec-oracle/SHA1.sol\":3027:3379  case 0 {... */\n      dup2\n      eq\n      tag_75\n      jumpi\n        /* \"contracts/dnssec-oracle/SHA1.sol\":3405:3406  1 */\n      0x01\n        /* \"contracts/dnssec-oracle/SHA1.sol\":3400:3682  case 1{... */\n      dup2\n      eq\n      tag_76\n      jumpi\n        /* \"contracts/dnssec-oracle/SHA1.sol\":3708:3709  2 */\n      0x02\n        /* \"contracts/dnssec-oracle/SHA1.sol\":3703:4117  case 2 {... */\n      dup2\n      eq\n      tag_77\n      jumpi\n        /* \"contracts/dnssec-oracle/SHA1.sol\":4143:4144  3 */\n      0x03\n        /* \"contracts/dnssec-oracle/SHA1.sol\":4138:4421  case 3 {... */\n      dup2\n      eq\n      tag_78\n      jumpi\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2989:4421  switch div(j, 20)... */\n      jump(tag_74)\n        /* \"contracts/dnssec-oracle/SHA1.sol\":3027:3379  case 0 {... */\n    tag_75:\n        /* \"contracts/dnssec-oracle/SHA1.sol\":3164:3177  0x10000000000 */\n      0x010000000000\n        /* \"contracts/dnssec-oracle/SHA1.sol\":3161:3162  x */\n      dup6\n        /* \"contracts/dnssec-oracle/SHA1.sol\":3157:3178  div(x, 0x10000000000) */\n      div\n        /* \"contracts/dnssec-oracle/SHA1.sol\":3131:3154  0x100000000000000000000 */\n      0x0100000000000000000000\n        /* \"contracts/dnssec-oracle/SHA1.sol\":3128:3129  x */\n      dup7\n        /* \"contracts/dnssec-oracle/SHA1.sol\":3124:3155  div(x, 0x100000000000000000000) */\n      div\n        /* \"contracts/dnssec-oracle/SHA1.sol\":3120:3179  xor(div(x, 0x100000000000000000000), div(x, 0x10000000000)) */\n      xor\n        /* \"contracts/dnssec-oracle/SHA1.sol\":3115:3179  f := xor(div(x, 0x100000000000000000000), div(x, 0x10000000000)) */\n      swap4\n      pop\n        /* \"contracts/dnssec-oracle/SHA1.sol\":3256:3257  f */\n      dup4\n        /* \"contracts/dnssec-oracle/SHA1.sol\":3220:3253  0x1000000000000000000000000000000 */\n      0x01000000000000000000000000000000\n        /* \"contracts/dnssec-oracle/SHA1.sol\":3217:3218  x */\n      dup7\n        /* \"contracts/dnssec-oracle/SHA1.sol\":3213:3254  div(x, 0x1000000000000000000000000000000) */\n      div\n        /* \"contracts/dnssec-oracle/SHA1.sol\":3209:3258  and(div(x, 0x1000000000000000000000000000000), f) */\n      and\n        /* \"contracts/dnssec-oracle/SHA1.sol\":3204:3258  f := and(div(x, 0x1000000000000000000000000000000), f) */\n      swap4\n      pop\n        /* \"contracts/dnssec-oracle/SHA1.sol\":3315:3316  f */\n      dup4\n        /* \"contracts/dnssec-oracle/SHA1.sol\":3299:3312  0x10000000000 */\n      0x010000000000\n        /* \"contracts/dnssec-oracle/SHA1.sol\":3296:3297  x */\n      dup7\n        /* \"contracts/dnssec-oracle/SHA1.sol\":3292:3313  div(x, 0x10000000000) */\n      div\n        /* \"contracts/dnssec-oracle/SHA1.sol\":3288:3317  xor(div(x, 0x10000000000), f) */\n      xor\n        /* \"contracts/dnssec-oracle/SHA1.sol\":3283:3317  f := xor(div(x, 0x10000000000), f) */\n      swap4\n      pop\n        /* \"contracts/dnssec-oracle/SHA1.sol\":3347:3357  0x5A827999 */\n      0x5a827999\n        /* \"contracts/dnssec-oracle/SHA1.sol\":3342:3357  k := 0x5A827999 */\n      swap3\n      pop\n        /* \"contracts/dnssec-oracle/SHA1.sol\":3027:3379  case 0 {... */\n      jump(tag_74)\n        /* \"contracts/dnssec-oracle/SHA1.sol\":3400:3682  case 1{... */\n    tag_76:\n        /* \"contracts/dnssec-oracle/SHA1.sol\":3536:3559  0x100000000000000000000 */\n      0x0100000000000000000000\n        /* \"contracts/dnssec-oracle/SHA1.sol\":3533:3534  x */\n      dup6\n        /* \"contracts/dnssec-oracle/SHA1.sol\":3529:3560  div(x, 0x100000000000000000000) */\n      div\n        /* \"contracts/dnssec-oracle/SHA1.sol\":3493:3526  0x1000000000000000000000000000000 */\n      0x01000000000000000000000000000000\n        /* \"contracts/dnssec-oracle/SHA1.sol\":3490:3491  x */\n      dup7\n        /* \"contracts/dnssec-oracle/SHA1.sol\":3486:3527  div(x, 0x1000000000000000000000000000000) */\n      div\n        /* \"contracts/dnssec-oracle/SHA1.sol\":3482:3561  xor(div(x, 0x1000000000000000000000000000000), div(x, 0x100000000000000000000)) */\n      xor\n        /* \"contracts/dnssec-oracle/SHA1.sol\":3477:3561  f := xor(div(x, 0x1000000000000000000000000000000), div(x, 0x100000000000000000000)) */\n      swap4\n      pop\n        /* \"contracts/dnssec-oracle/SHA1.sol\":3618:3619  f */\n      dup4\n        /* \"contracts/dnssec-oracle/SHA1.sol\":3602:3615  0x10000000000 */\n      0x010000000000\n        /* \"contracts/dnssec-oracle/SHA1.sol\":3599:3600  x */\n      dup7\n        /* \"contracts/dnssec-oracle/SHA1.sol\":3595:3616  div(x, 0x10000000000) */\n      div\n        /* \"contracts/dnssec-oracle/SHA1.sol\":3591:3620  xor(div(x, 0x10000000000), f) */\n      xor\n        /* \"contracts/dnssec-oracle/SHA1.sol\":3586:3620  f := xor(div(x, 0x10000000000), f) */\n      swap4\n      pop\n        /* \"contracts/dnssec-oracle/SHA1.sol\":3650:3660  0x6ED9EBA1 */\n      0x6ed9eba1\n        /* \"contracts/dnssec-oracle/SHA1.sol\":3645:3660  k := 0x6ED9EBA1 */\n      swap3\n      pop\n        /* \"contracts/dnssec-oracle/SHA1.sol\":3400:3682  case 1{... */\n      jump(tag_74)\n        /* \"contracts/dnssec-oracle/SHA1.sol\":3703:4117  case 2 {... */\n    tag_77:\n        /* \"contracts/dnssec-oracle/SHA1.sol\":3855:3878  0x100000000000000000000 */\n      0x0100000000000000000000\n        /* \"contracts/dnssec-oracle/SHA1.sol\":3852:3853  x */\n      dup6\n        /* \"contracts/dnssec-oracle/SHA1.sol\":3848:3879  div(x, 0x100000000000000000000) */\n      div\n        /* \"contracts/dnssec-oracle/SHA1.sol\":3812:3845  0x1000000000000000000000000000000 */\n      0x01000000000000000000000000000000\n        /* \"contracts/dnssec-oracle/SHA1.sol\":3809:3810  x */\n      dup7\n        /* \"contracts/dnssec-oracle/SHA1.sol\":3805:3846  div(x, 0x1000000000000000000000000000000) */\n      div\n        /* \"contracts/dnssec-oracle/SHA1.sol\":3802:3880  or(div(x, 0x1000000000000000000000000000000), div(x, 0x100000000000000000000)) */\n      or\n        /* \"contracts/dnssec-oracle/SHA1.sol\":3797:3880  f := or(div(x, 0x1000000000000000000000000000000), div(x, 0x100000000000000000000)) */\n      swap4\n      pop\n        /* \"contracts/dnssec-oracle/SHA1.sol\":3937:3938  f */\n      dup4\n        /* \"contracts/dnssec-oracle/SHA1.sol\":3921:3934  0x10000000000 */\n      0x010000000000\n        /* \"contracts/dnssec-oracle/SHA1.sol\":3918:3919  x */\n      dup7\n        /* \"contracts/dnssec-oracle/SHA1.sol\":3914:3935  div(x, 0x10000000000) */\n      div\n        /* \"contracts/dnssec-oracle/SHA1.sol\":3910:3939  and(div(x, 0x10000000000), f) */\n      and\n        /* \"contracts/dnssec-oracle/SHA1.sol\":3905:3939  f := and(div(x, 0x10000000000), f) */\n      swap4\n      pop\n        /* \"contracts/dnssec-oracle/SHA1.sol\":4053:4054  f */\n      dup4\n        /* \"contracts/dnssec-oracle/SHA1.sol\":4026:4049  0x100000000000000000000 */\n      0x0100000000000000000000\n        /* \"contracts/dnssec-oracle/SHA1.sol\":4023:4024  x */\n      dup7\n        /* \"contracts/dnssec-oracle/SHA1.sol\":4019:4050  div(x, 0x100000000000000000000) */\n      div\n        /* \"contracts/dnssec-oracle/SHA1.sol\":3983:4016  0x1000000000000000000000000000000 */\n      0x01000000000000000000000000000000\n        /* \"contracts/dnssec-oracle/SHA1.sol\":3980:3981  x */\n      dup8\n        /* \"contracts/dnssec-oracle/SHA1.sol\":3976:4017  div(x, 0x1000000000000000000000000000000) */\n      div\n        /* \"contracts/dnssec-oracle/SHA1.sol\":3972:4051  and(div(x, 0x1000000000000000000000000000000), div(x, 0x100000000000000000000)) */\n      and\n        /* \"contracts/dnssec-oracle/SHA1.sol\":3969:4055  or(and(div(x, 0x1000000000000000000000000000000), div(x, 0x100000000000000000000)), f) */\n      or\n        /* \"contracts/dnssec-oracle/SHA1.sol\":3964:4055  f := or(and(div(x, 0x1000000000000000000000000000000), div(x, 0x100000000000000000000)), f) */\n      swap4\n      pop\n        /* \"contracts/dnssec-oracle/SHA1.sol\":4085:4095  0x8F1BBCDC */\n      0x8f1bbcdc\n        /* \"contracts/dnssec-oracle/SHA1.sol\":4080:4095  k := 0x8F1BBCDC */\n      swap3\n      pop\n        /* \"contracts/dnssec-oracle/SHA1.sol\":3703:4117  case 2 {... */\n      jump(tag_74)\n        /* \"contracts/dnssec-oracle/SHA1.sol\":4138:4421  case 3 {... */\n    tag_78:\n        /* \"contracts/dnssec-oracle/SHA1.sol\":4275:4298  0x100000000000000000000 */\n      0x0100000000000000000000\n        /* \"contracts/dnssec-oracle/SHA1.sol\":4272:4273  x */\n      dup6\n        /* \"contracts/dnssec-oracle/SHA1.sol\":4268:4299  div(x, 0x100000000000000000000) */\n      div\n        /* \"contracts/dnssec-oracle/SHA1.sol\":4232:4265  0x1000000000000000000000000000000 */\n      0x01000000000000000000000000000000\n        /* \"contracts/dnssec-oracle/SHA1.sol\":4229:4230  x */\n      dup7\n        /* \"contracts/dnssec-oracle/SHA1.sol\":4225:4266  div(x, 0x1000000000000000000000000000000) */\n      div\n        /* \"contracts/dnssec-oracle/SHA1.sol\":4221:4300  xor(div(x, 0x1000000000000000000000000000000), div(x, 0x100000000000000000000)) */\n      xor\n        /* \"contracts/dnssec-oracle/SHA1.sol\":4216:4300  f := xor(div(x, 0x1000000000000000000000000000000), div(x, 0x100000000000000000000)) */\n      swap4\n      pop\n        /* \"contracts/dnssec-oracle/SHA1.sol\":4357:4358  f */\n      dup4\n        /* \"contracts/dnssec-oracle/SHA1.sol\":4341:4354  0x10000000000 */\n      0x010000000000\n        /* \"contracts/dnssec-oracle/SHA1.sol\":4338:4339  x */\n      dup7\n        /* \"contracts/dnssec-oracle/SHA1.sol\":4334:4355  div(x, 0x10000000000) */\n      div\n        /* \"contracts/dnssec-oracle/SHA1.sol\":4330:4359  xor(div(x, 0x10000000000), f) */\n      xor\n        /* \"contracts/dnssec-oracle/SHA1.sol\":4325:4359  f := xor(div(x, 0x10000000000), f) */\n      swap4\n      pop\n        /* \"contracts/dnssec-oracle/SHA1.sol\":4389:4399  0xCA62C1D6 */\n      0xca62c1d6\n        /* \"contracts/dnssec-oracle/SHA1.sol\":4384:4399  k := 0xCA62C1D6 */\n      swap3\n      pop\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2989:4421  switch div(j, 20)... */\n    tag_74:\n      pop\n        /* \"contracts/dnssec-oracle/SHA1.sol\":4583:4587  0x1F */\n      0x1f\n        /* \"contracts/dnssec-oracle/SHA1.sol\":4531:4580  0x80000000000000000000000000000000000000000000000 */\n      0x080000000000000000000000000000000000000000000000\n        /* \"contracts/dnssec-oracle/SHA1.sol\":4528:4529  x */\n      dup6\n        /* \"contracts/dnssec-oracle/SHA1.sol\":4524:4581  div(x, 0x80000000000000000000000000000000000000000000000) */\n      div\n        /* \"contracts/dnssec-oracle/SHA1.sol\":4520:4588  and(div(x, 0x80000000000000000000000000000000000000000000000), 0x1F) */\n      and\n        /* \"contracts/dnssec-oracle/SHA1.sol\":4688:4692  temp */\n      dup1\n        /* \"contracts/dnssec-oracle/SHA1.sol\":4675:4685  0xFFFFFFE0 */\n      0xffffffe0\n        /* \"contracts/dnssec-oracle/SHA1.sol\":4631:4672  0x800000000000000000000000000000000000000 */\n      0x0800000000000000000000000000000000000000\n        /* \"contracts/dnssec-oracle/SHA1.sol\":4628:4629  x */\n      dup8\n        /* \"contracts/dnssec-oracle/SHA1.sol\":4624:4673  div(x, 0x800000000000000000000000000000000000000) */\n      div\n        /* \"contracts/dnssec-oracle/SHA1.sol\":4620:4686  and(div(x, 0x800000000000000000000000000000000000000), 0xFFFFFFE0) */\n      and\n        /* \"contracts/dnssec-oracle/SHA1.sol\":4617:4693  or(and(div(x, 0x800000000000000000000000000000000000000), 0xFFFFFFE0), temp) */\n      or\n        /* \"contracts/dnssec-oracle/SHA1.sol\":4609:4693  temp := or(and(div(x, 0x800000000000000000000000000000000000000), 0xFFFFFFE0), temp) */\n      swap1\n      pop\n        /* \"contracts/dnssec-oracle/SHA1.sol\":4729:4733  temp */\n      dup1\n        /* \"contracts/dnssec-oracle/SHA1.sol\":4726:4727  f */\n      dup5\n        /* \"contracts/dnssec-oracle/SHA1.sol\":4722:4734  add(f, temp) */\n      add\n        /* \"contracts/dnssec-oracle/SHA1.sol\":4714:4734  temp := add(f, temp) */\n      swap1\n      pop\n        /* \"contracts/dnssec-oracle/SHA1.sol\":4787:4791  temp */\n      dup1\n        /* \"contracts/dnssec-oracle/SHA1.sol\":4774:4784  0xFFFFFFFF */\n      0xffffffff\n        /* \"contracts/dnssec-oracle/SHA1.sol\":4771:4772  x */\n      dup7\n        /* \"contracts/dnssec-oracle/SHA1.sol\":4767:4785  and(x, 0xFFFFFFFF) */\n      and\n        /* \"contracts/dnssec-oracle/SHA1.sol\":4763:4792  add(and(x, 0xFFFFFFFF), temp) */\n      add\n        /* \"contracts/dnssec-oracle/SHA1.sol\":4755:4792  temp := add(and(x, 0xFFFFFFFF), temp) */\n      swap1\n      pop\n        /* \"contracts/dnssec-oracle/SHA1.sol\":4828:4832  temp */\n      dup1\n        /* \"contracts/dnssec-oracle/SHA1.sol\":4825:4826  k */\n      dup4\n        /* \"contracts/dnssec-oracle/SHA1.sol\":4821:4833  add(k, temp) */\n      add\n        /* \"contracts/dnssec-oracle/SHA1.sol\":4813:4833  temp := add(k, temp) */\n      swap1\n      pop\n        /* \"contracts/dnssec-oracle/SHA1.sol\":4964:4968  temp */\n      dup1\n        /* \"contracts/dnssec-oracle/SHA1.sol\":4902:4961  0x100000000000000000000000000000000000000000000000000000000 */\n      0x0100000000000000000000000000000000000000000000000000000000\n        /* \"contracts/dnssec-oracle/SHA1.sol\":4896:4897  4 */\n      0x04\n        /* \"contracts/dnssec-oracle/SHA1.sol\":4893:4894  j */\n      dup5\n        /* \"contracts/dnssec-oracle/SHA1.sol\":4889:4898  mul(j, 4) */\n      mul\n        /* \"contracts/dnssec-oracle/SHA1.sol\":4880:4887  scratch */\n      dup13\n        /* \"contracts/dnssec-oracle/SHA1.sol\":4876:4899  add(scratch, mul(j, 4)) */\n      add\n        /* \"contracts/dnssec-oracle/SHA1.sol\":4870:4900  mload(add(scratch, mul(j, 4))) */\n      mload\n        /* \"contracts/dnssec-oracle/SHA1.sol\":4866:4962  div(mload(add(scratch, mul(j, 4))), 0x100000000000000000000000000000000000000000000000000000000) */\n      div\n        /* \"contracts/dnssec-oracle/SHA1.sol\":4862:4969  add(div(mload(add(scratch, mul(j, 4))), 0x100000000000000000000000000000000000000000000000000000000), temp) */\n      add\n        /* \"contracts/dnssec-oracle/SHA1.sol\":4854:4969  temp := add(div(mload(add(scratch, mul(j, 4))), 0x100000000000000000000000000000000000000000000000000000000), temp) */\n      swap1\n      pop\n        /* \"contracts/dnssec-oracle/SHA1.sol\":5031:5074  0x10000000000000000000000000000000000000000 */\n      0x010000000000000000000000000000000000000000\n        /* \"contracts/dnssec-oracle/SHA1.sol\":5025:5029  temp */\n      dup2\n        /* \"contracts/dnssec-oracle/SHA1.sol\":5021:5075  mul(temp, 0x10000000000000000000000000000000000000000) */\n      mul\n        /* \"contracts/dnssec-oracle/SHA1.sol\":5005:5018  0x10000000000 */\n      0x010000000000\n        /* \"contracts/dnssec-oracle/SHA1.sol\":5002:5003  x */\n      dup7\n        /* \"contracts/dnssec-oracle/SHA1.sol\":4998:5019  div(x, 0x10000000000) */\n      div\n        /* \"contracts/dnssec-oracle/SHA1.sol\":4995:5076  or(div(x, 0x10000000000), mul(temp, 0x10000000000000000000000000000000000000000)) */\n      or\n        /* \"contracts/dnssec-oracle/SHA1.sol\":4990:5076  x := or(div(x, 0x10000000000), mul(temp, 0x10000000000000000000000000000000000000000)) */\n      swap5\n      pop\n        /* \"contracts/dnssec-oracle/SHA1.sol\":5265:5288  0x100000000000000000000 */\n      0x0100000000000000000000\n        /* \"contracts/dnssec-oracle/SHA1.sol\":5251:5261  0x3FFFFFFF */\n      0x3fffffff\n        /* \"contracts/dnssec-oracle/SHA1.sol\":5225:5248  0x400000000000000000000 */\n      0x0400000000000000000000\n        /* \"contracts/dnssec-oracle/SHA1.sol\":5222:5223  x */\n      dup8\n        /* \"contracts/dnssec-oracle/SHA1.sol\":5218:5249  div(x, 0x400000000000000000000) */\n      div\n        /* \"contracts/dnssec-oracle/SHA1.sol\":5214:5262  and(div(x, 0x400000000000000000000), 0x3FFFFFFF) */\n      and\n        /* \"contracts/dnssec-oracle/SHA1.sol\":5201:5211  0xC0000000 */\n      0xc0000000\n        /* \"contracts/dnssec-oracle/SHA1.sol\":5183:5198  0x4000000000000 */\n      0x04000000000000\n        /* \"contracts/dnssec-oracle/SHA1.sol\":5180:5181  x */\n      dup9\n        /* \"contracts/dnssec-oracle/SHA1.sol\":5176:5199  div(x, 0x4000000000000) */\n      div\n        /* \"contracts/dnssec-oracle/SHA1.sol\":5172:5212  and(div(x, 0x4000000000000), 0xC0000000) */\n      and\n        /* \"contracts/dnssec-oracle/SHA1.sol\":5169:5263  or(and(div(x, 0x4000000000000), 0xC0000000), and(div(x, 0x400000000000000000000), 0x3FFFFFFF)) */\n      or\n        /* \"contracts/dnssec-oracle/SHA1.sol\":5165:5289  mul(or(and(div(x, 0x4000000000000), 0xC0000000), and(div(x, 0x400000000000000000000), 0x3FFFFFFF)), 0x100000000000000000000) */\n      mul\n        /* \"contracts/dnssec-oracle/SHA1.sol\":5112:5162  0xFFFFFFFF00FFFFFFFF000000000000FFFFFFFF00FFFFFFFF */\n      0xffffffff00ffffffff000000000000ffffffff00ffffffff\n        /* \"contracts/dnssec-oracle/SHA1.sol\":5109:5110  x */\n      dup7\n        /* \"contracts/dnssec-oracle/SHA1.sol\":5105:5163  and(x, 0xFFFFFFFF00FFFFFFFF000000000000FFFFFFFF00FFFFFFFF) */\n      and\n        /* \"contracts/dnssec-oracle/SHA1.sol\":5102:5290  or(and(x, 0xFFFFFFFF00FFFFFFFF000000000000FFFFFFFF00FFFFFFFF), mul(or(and(div(x, 0x4000000000000), 0xC0000000), and(div(x, 0x400000000000000000000), 0x3FFFFFFF)), 0x100000000000000000000)) */\n      or\n        /* \"contracts/dnssec-oracle/SHA1.sol\":5097:5290  x := or(and(x, 0xFFFFFFFF00FFFFFFFF000000000000FFFFFFFF00FFFFFFFF), mul(or(and(div(x, 0x4000000000000), 0xC0000000), and(div(x, 0x400000000000000000000), 0x3FFFFFFF)), 0x100000000000000000000)) */\n      swap5\n      pop\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2967:5308  {... */\n      pop\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2962:2963  1 */\n      0x01\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2959:2960  j */\n      dup2\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2955:2964  add(j, 1) */\n      add\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2950:2964  j := add(j, 1) */\n      swap1\n      pop\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2919:5308  for { let j := 0 } lt(j, 80) { j := add(j, 1) } {... */\n      jump(tag_71)\n    tag_73:\n        /* \"contracts/dnssec-oracle/SHA1.sol\":2923:2937  { let j := 0 } */\n      pop\n        /* \"contracts/dnssec-oracle/SHA1.sol\":5346:5396  0xFFFFFFFF00FFFFFFFF00FFFFFFFF00FFFFFFFF00FFFFFFFF */\n      0xffffffff00ffffffff00ffffffff00ffffffff00ffffffff\n        /* \"contracts/dnssec-oracle/SHA1.sol\":5342:5343  x */\n      dup4\n        /* \"contracts/dnssec-oracle/SHA1.sol\":5339:5340  h */\n      dup7\n        /* \"contracts/dnssec-oracle/SHA1.sol\":5335:5344  add(h, x) */\n      add\n        /* \"contracts/dnssec-oracle/SHA1.sol\":5331:5397  and(add(h, x), 0xFFFFFFFF00FFFFFFFF00FFFFFFFF00FFFFFFFF00FFFFFFFF) */\n      and\n        /* \"contracts/dnssec-oracle/SHA1.sol\":5326:5397  h := and(add(h, x), 0xFFFFFFFF00FFFFFFFF00FFFFFFFF00FFFFFFFF00FFFFFFFF) */\n      swap5\n      pop\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1182:5411  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1176:1178  64 */\n      0x40\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1173:1174  i */\n      dup2\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1169:1179  add(i, 64) */\n      add\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1164:1179  i := add(i, 64) */\n      swap1\n      pop\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1127:5411  for { let i := 0 } lt(i, totallen) { i := add(i, 64) } {... */\n      jump(tag_56)\n    tag_58:\n        /* \"contracts/dnssec-oracle/SHA1.sol\":1131:1145  { let i := 0 } */\n      pop\n        /* \"contracts/dnssec-oracle/SHA1.sol\":5691:5718  0x1000000000000000000000000 */\n      0x01000000000000000000000000\n        /* \"contracts/dnssec-oracle/SHA1.sol\":5677:5687  0xFFFFFFFF */\n      0xffffffff\n        /* \"contracts/dnssec-oracle/SHA1.sol\":5674:5675  h */\n      dup3\n        /* \"contracts/dnssec-oracle/SHA1.sol\":5670:5688  and(h, 0xFFFFFFFF) */\n      and\n        /* \"contracts/dnssec-oracle/SHA1.sol\":5648:5666  0xFFFFFFFF00000000 */\n      0xffffffff00000000\n        /* \"contracts/dnssec-oracle/SHA1.sol\":5640:5645  0x100 */\n      0x0100\n        /* \"contracts/dnssec-oracle/SHA1.sol\":5637:5638  h */\n      dup5\n        /* \"contracts/dnssec-oracle/SHA1.sol\":5633:5646  div(h, 0x100) */\n      div\n        /* \"contracts/dnssec-oracle/SHA1.sol\":5629:5667  and(div(h, 0x100), 0xFFFFFFFF00000000) */\n      and\n        /* \"contracts/dnssec-oracle/SHA1.sol\":5599:5625  0xFFFFFFFF0000000000000000 */\n      0xffffffff0000000000000000\n        /* \"contracts/dnssec-oracle/SHA1.sol\":5589:5596  0x10000 */\n      0x010000\n        /* \"contracts/dnssec-oracle/SHA1.sol\":5586:5587  h */\n      dup6\n        /* \"contracts/dnssec-oracle/SHA1.sol\":5582:5597  div(h, 0x10000) */\n      div\n        /* \"contracts/dnssec-oracle/SHA1.sol\":5578:5626  and(div(h, 0x10000), 0xFFFFFFFF0000000000000000) */\n      and\n        /* \"contracts/dnssec-oracle/SHA1.sol\":5540:5574  0xFFFFFFFF000000000000000000000000 */\n      0xffffffff000000000000000000000000\n        /* \"contracts/dnssec-oracle/SHA1.sol\":5528:5537  0x1000000 */\n      0x01000000\n        /* \"contracts/dnssec-oracle/SHA1.sol\":5525:5526  h */\n      dup7\n        /* \"contracts/dnssec-oracle/SHA1.sol\":5521:5538  div(h, 0x1000000) */\n      div\n        /* \"contracts/dnssec-oracle/SHA1.sol\":5517:5575  and(div(h, 0x1000000), 0xFFFFFFFF000000000000000000000000) */\n      and\n        /* \"contracts/dnssec-oracle/SHA1.sol\":5472:5514  0xFFFFFFFF00000000000000000000000000000000 */\n      0xffffffff00000000000000000000000000000000\n        /* \"contracts/dnssec-oracle/SHA1.sol\":5458:5469  0x100000000 */\n      0x0100000000\n        /* \"contracts/dnssec-oracle/SHA1.sol\":5455:5456  h */\n      dup8\n        /* \"contracts/dnssec-oracle/SHA1.sol\":5451:5470  div(h, 0x100000000) */\n      div\n        /* \"contracts/dnssec-oracle/SHA1.sol\":5447:5515  and(div(h, 0x100000000), 0xFFFFFFFF00000000000000000000000000000000) */\n      and\n        /* \"contracts/dnssec-oracle/SHA1.sol\":5444:5576  or(and(div(h, 0x100000000), 0xFFFFFFFF00000000000000000000000000000000), and(div(h, 0x1000000), 0xFFFFFFFF000000000000000000000000)) */\n      or\n        /* \"contracts/dnssec-oracle/SHA1.sol\":5441:5627  or(or(and(div(h, 0x100000000), 0xFFFFFFFF00000000000000000000000000000000), and(div(h, 0x1000000), 0xFFFFFFFF000000000000000000000000)), and(div(h, 0x10000), 0xFFFFFFFF0000000000000000)) */\n      or\n        /* \"contracts/dnssec-oracle/SHA1.sol\":5438:5668  or(or(or(and(div(h, 0x100000000), 0xFFFFFFFF00000000000000000000000000000000), and(div(h, 0x1000000), 0xFFFFFFFF000000000000000000000000)), and(div(h, 0x10000), 0xFFFFFFFF0000000000000000)), and(div(h, 0x100), 0xFFFFFFFF00000000)) */\n      or\n        /* \"contracts/dnssec-oracle/SHA1.sol\":5435:5689  or(or(or(or(and(div(h, 0x100000000), 0xFFFFFFFF00000000000000000000000000000000), and(div(h, 0x1000000), 0xFFFFFFFF000000000000000000000000)), and(div(h, 0x10000), 0xFFFFFFFF0000000000000000)), and(div(h, 0x100), 0xFFFFFFFF00000000)), and(h, 0xFFFFFFFF)) */\n      or\n        /* \"contracts/dnssec-oracle/SHA1.sol\":5431:5719  mul(or(or(or(or(and(div(h, 0x100000000), 0xFFFFFFFF00000000000000000000000000000000), and(div(h, 0x1000000), 0xFFFFFFFF000000000000000000000000)), and(div(h, 0x10000), 0xFFFFFFFF0000000000000000)), and(div(h, 0x100), 0xFFFFFFFF00000000)), and(h, 0xFFFFFFFF)), 0x1000000000000000000000000) */\n      mul\n        /* \"contracts/dnssec-oracle/SHA1.sol\":5424:5719  ret := mul(or(or(or(or(and(div(h, 0x100000000), 0xFFFFFFFF00000000000000000000000000000000), and(div(h, 0x1000000), 0xFFFFFFFF000000000000000000000000)), and(div(h, 0x10000), 0xFFFFFFFF0000000000000000)), and(div(h, 0x100), 0xFFFFFFFF00000000)), and(h, 0xFFFFFFFF)), 0x1000000000000000000000000) */\n      swap5\n      pop\n        /* \"contracts/dnssec-oracle/SHA1.sol\":161:5729  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/dnssec-oracle/SHA1.sol\":74:5735  function sha1(bytes memory data) internal pure returns(bytes20 ret) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Buffer.sol\":2316:2514  function truncate(buffer memory buf) internal pure returns (buffer memory) {... */\n    tag_25:\n        /* \"contracts/Buffer.sol\":2376:2389  buffer memory */\n      tag_79\n      tag_12\n      jump\t// in\n    tag_79:\n        /* \"contracts/Buffer.sol\":2444:2447  buf */\n      dup2\n        /* \"contracts/Buffer.sol\":2438:2448  mload(buf) */\n      mload\n        /* \"contracts/Buffer.sol\":2476:2477  0 */\n      0x00\n        /* \"contracts/Buffer.sol\":2468:2474  bufptr */\n      dup2\n        /* \"contracts/Buffer.sol\":2461:2478  mstore(bufptr, 0) */\n      mstore\n        /* \"contracts/Buffer.sol\":2410:2488  {... */\n      pop\n        /* \"contracts/Buffer.sol\":2504:2507  buf */\n      dup2\n        /* \"contracts/Buffer.sol\":2497:2507  return buf */\n      swap1\n      pop\n        /* \"contracts/Buffer.sol\":2316:2514  function truncate(buffer memory buf) internal pure returns (buffer memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Buffer.sol\":8596:8759  function appendBytes20(buffer memory buf, bytes20 data) internal pure returns (buffer memory) {... */\n    tag_27:\n        /* \"contracts/Buffer.sol\":8675:8688  buffer memory */\n      tag_81\n      tag_12\n      jump\t// in\n    tag_81:\n        /* \"contracts/Buffer.sol\":8707:8752  write(buf, buf.buf.length, bytes32(data), 20) */\n      tag_83\n        /* \"contracts/Buffer.sol\":8713:8716  buf */\n      dup4\n        /* \"contracts/Buffer.sol\":8718:8721  buf */\n      dup5\n        /* \"contracts/Buffer.sol\":8718:8725  buf.buf */\n      0x00\n      add\n      mload\n        /* \"contracts/Buffer.sol\":8718:8732  buf.buf.length */\n      mload\n        /* \"contracts/Buffer.sol\":8742:8746  data */\n      dup5\n        /* \"contracts/Buffer.sol\":8734:8747  bytes32(data) */\n      not(0xffffffffffffffffffffffff)\n      and\n        /* \"contracts/Buffer.sol\":8749:8751  20 */\n      0x14\n        /* \"contracts/Buffer.sol\":8707:8712  write */\n      tag_84\n        /* \"contracts/Buffer.sol\":8707:8752  write(buf, buf.buf.length, bytes32(data), 20) */\n      jump\t// in\n    tag_83:\n        /* \"contracts/Buffer.sol\":8700:8752  return write(buf, buf.buf.length, bytes32(data), 20) */\n      swap1\n      pop\n        /* \"contracts/Buffer.sol\":8596:8759  function appendBytes20(buffer memory buf, bytes20 data) internal pure returns (buffer memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Buffer.sol\":8168:8329  function writeBytes20(buffer memory buf, uint off, bytes20 data) internal pure returns (buffer memory) {... */\n    tag_33:\n        /* \"contracts/Buffer.sol\":8256:8269  buffer memory */\n      tag_85\n      tag_12\n      jump\t// in\n    tag_85:\n        /* \"contracts/Buffer.sol\":8288:8322  write(buf, off, bytes32(data), 20) */\n      tag_87\n        /* \"contracts/Buffer.sol\":8294:8297  buf */\n      dup5\n        /* \"contracts/Buffer.sol\":8299:8302  off */\n      dup5\n        /* \"contracts/Buffer.sol\":8312:8316  data */\n      dup5\n        /* \"contracts/Buffer.sol\":8304:8317  bytes32(data) */\n      not(0xffffffffffffffffffffffff)\n      and\n        /* \"contracts/Buffer.sol\":8319:8321  20 */\n      0x14\n        /* \"contracts/Buffer.sol\":8288:8293  write */\n      tag_84\n        /* \"contracts/Buffer.sol\":8288:8322  write(buf, off, bytes32(data), 20) */\n      jump\t// in\n    tag_87:\n        /* \"contracts/Buffer.sol\":8281:8322  return write(buf, off, bytes32(data), 20) */\n      swap1\n      pop\n        /* \"contracts/Buffer.sol\":8168:8329  function writeBytes20(buffer memory buf, uint off, bytes20 data) internal pure returns (buffer memory) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Buffer.sol\":2874:4256  function write(buffer memory buf, uint off, bytes memory data, uint len) internal pure returns(buffer memory) {... */\n    tag_47:\n        /* \"contracts/Buffer.sol\":2969:2982  buffer memory */\n      tag_88\n      tag_12\n      jump\t// in\n    tag_88:\n        /* \"contracts/Buffer.sol\":3009:3013  data */\n      dup3\n        /* \"contracts/Buffer.sol\":3009:3020  data.length */\n      mload\n        /* \"contracts/Buffer.sol\":3002:3005  len */\n      dup3\n        /* \"contracts/Buffer.sol\":3002:3020  len <= data.length */\n      gt\n      iszero\n        /* \"contracts/Buffer.sol\":2994:3021  require(len <= data.length) */\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n        /* \"contracts/Buffer.sol\":3048:3051  buf */\n      dup5\n        /* \"contracts/Buffer.sol\":3048:3060  buf.capacity */\n      0x20\n      add\n      mload\n        /* \"contracts/Buffer.sol\":3042:3045  len */\n      dup3\n        /* \"contracts/Buffer.sol\":3036:3039  off */\n      dup6\n        /* \"contracts/Buffer.sol\":3036:3045  off + len */\n      tag_91\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_91:\n        /* \"contracts/Buffer.sol\":3036:3060  off + len > buf.capacity */\n      gt\n        /* \"contracts/Buffer.sol\":3032:3132  if (off + len > buf.capacity) {... */\n      iszero\n      tag_92\n      jumpi\n        /* \"contracts/Buffer.sol\":3076:3121  resize(buf, max(buf.capacity, len + off) * 2) */\n      tag_93\n        /* \"contracts/Buffer.sol\":3083:3086  buf */\n      dup6\n        /* \"contracts/Buffer.sol\":3119:3120  2 */\n      0x02\n        /* \"contracts/Buffer.sol\":3088:3116  max(buf.capacity, len + off) */\n      tag_94\n        /* \"contracts/Buffer.sol\":3092:3095  buf */\n      dup9\n        /* \"contracts/Buffer.sol\":3092:3104  buf.capacity */\n      0x20\n      add\n      mload\n        /* \"contracts/Buffer.sol\":3112:3115  off */\n      dup9\n        /* \"contracts/Buffer.sol\":3106:3109  len */\n      dup8\n        /* \"contracts/Buffer.sol\":3106:3115  len + off */\n      tag_95\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_95:\n        /* \"contracts/Buffer.sol\":3088:3091  max */\n      tag_96\n        /* \"contracts/Buffer.sol\":3088:3116  max(buf.capacity, len + off) */\n      jump\t// in\n    tag_94:\n        /* \"contracts/Buffer.sol\":3088:3120  max(buf.capacity, len + off) * 2 */\n      tag_97\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n        /* \"contracts/Buffer.sol\":3076:3082  resize */\n      tag_99\n        /* \"contracts/Buffer.sol\":3076:3121  resize(buf, max(buf.capacity, len + off) * 2) */\n      jump\t// in\n    tag_93:\n        /* \"contracts/Buffer.sol\":3032:3132  if (off + len > buf.capacity) {... */\n    tag_92:\n        /* \"contracts/Buffer.sol\":3142:3151  uint dest */\n      0x00\n        /* \"contracts/Buffer.sol\":3161:3169  uint src */\n      dup1\n        /* \"contracts/Buffer.sol\":3271:3274  buf */\n      dup7\n        /* \"contracts/Buffer.sol\":3265:3275  mload(buf) */\n      mload\n        /* \"contracts/Buffer.sol\":3354:3360  bufptr */\n      dup1\n        /* \"contracts/Buffer.sol\":3348:3361  mload(bufptr) */\n      mload\n        /* \"contracts/Buffer.sol\":3482:3485  off */\n      dup8\n        /* \"contracts/Buffer.sol\":3477:3479  32 */\n      0x20\n        /* \"contracts/Buffer.sol\":3469:3475  bufptr */\n      dup4\n        /* \"contracts/Buffer.sol\":3465:3480  add(bufptr, 32) */\n      add\n        /* \"contracts/Buffer.sol\":3461:3486  add(add(bufptr, 32), off) */\n      add\n        /* \"contracts/Buffer.sol\":3453:3486  dest := add(add(bufptr, 32), off) */\n      swap4\n      pop\n        /* \"contracts/Buffer.sol\":3578:3584  buflen */\n      dup1\n        /* \"contracts/Buffer.sol\":3572:3575  off */\n      dup9\n        /* \"contracts/Buffer.sol\":3567:3570  len */\n      dup8\n        /* \"contracts/Buffer.sol\":3563:3576  add(len, off) */\n      add\n        /* \"contracts/Buffer.sol\":3560:3585  gt(add(len, off), buflen) */\n      gt\n        /* \"contracts/Buffer.sol\":3557:3647  if gt(add(len, off), buflen) {... */\n      iszero\n      tag_100\n      jumpi\n        /* \"contracts/Buffer.sol\":3628:3631  off */\n      dup8\n        /* \"contracts/Buffer.sol\":3623:3626  len */\n      dup7\n        /* \"contracts/Buffer.sol\":3619:3632  add(len, off) */\n      add\n        /* \"contracts/Buffer.sol\":3611:3617  bufptr */\n      dup3\n        /* \"contracts/Buffer.sol\":3604:3633  mstore(bufptr, add(len, off)) */\n      mstore\n        /* \"contracts/Buffer.sol\":3557:3647  if gt(add(len, off), buflen) {... */\n    tag_100:\n        /* \"contracts/Buffer.sol\":3677:3679  32 */\n      0x20\n        /* \"contracts/Buffer.sol\":3671:3675  data */\n      dup8\n        /* \"contracts/Buffer.sol\":3667:3680  add(data, 32) */\n      add\n        /* \"contracts/Buffer.sol\":3660:3680  src := add(data, 32) */\n      swap3\n      pop\n        /* \"contracts/Buffer.sol\":3188:3690  {... */\n      pop\n      pop\n        /* \"contracts/Buffer.sol\":3750:3915  for (; len >= 32; len -= 32) {... */\n    tag_101:\n        /* \"contracts/Buffer.sol\":3764:3766  32 */\n      0x20\n        /* \"contracts/Buffer.sol\":3757:3760  len */\n      dup5\n        /* \"contracts/Buffer.sol\":3757:3766  len >= 32 */\n      lt\n        /* \"contracts/Buffer.sol\":3750:3915  for (; len >= 32; len -= 32) {... */\n      tag_102\n      jumpi\n        /* \"contracts/Buffer.sol\":3839:3842  src */\n      dup1\n        /* \"contracts/Buffer.sol\":3833:3843  mload(src) */\n      mload\n        /* \"contracts/Buffer.sol\":3827:3831  dest */\n      dup3\n        /* \"contracts/Buffer.sol\":3820:3844  mstore(dest, mload(src)) */\n      mstore\n        /* \"contracts/Buffer.sol\":3879:3881  32 */\n      0x20\n        /* \"contracts/Buffer.sol\":3871:3881  dest += 32 */\n      dup3\n      tag_104\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_104:\n      swap2\n      pop\n        /* \"contracts/Buffer.sol\":3902:3904  32 */\n      0x20\n        /* \"contracts/Buffer.sol\":3895:3904  src += 32 */\n      dup2\n      tag_105\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_105:\n      swap1\n      pop\n        /* \"contracts/Buffer.sol\":3775:3777  32 */\n      0x20\n        /* \"contracts/Buffer.sol\":3768:3777  len -= 32 */\n      dup5\n      tag_106\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_106:\n      swap4\n      pop\n        /* \"contracts/Buffer.sol\":3750:3915  for (; len >= 32; len -= 32) {... */\n      jump(tag_101)\n    tag_102:\n        /* \"contracts/Buffer.sol\":3981:3990  uint mask */\n      0x00\n        /* \"contracts/Buffer.sol\":4015:4016  1 */\n      0x01\n        /* \"contracts/Buffer.sol\":4007:4010  len */\n      dup6\n        /* \"contracts/Buffer.sol\":4002:4004  32 */\n      0x20\n        /* \"contracts/Buffer.sol\":4002:4010  32 - len */\n      sub\n        /* \"contracts/Buffer.sol\":3994:3997  256 */\n      0x0100\n        /* \"contracts/Buffer.sol\":3994:4011  256 ** (32 - len) */\n      exp\n        /* \"contracts/Buffer.sol\":3993:4016  (256 ** (32 - len)) - 1 */\n      sub\n        /* \"contracts/Buffer.sol\":3981:4016  uint mask = (256 ** (32 - len)) - 1 */\n      swap1\n      pop\n        /* \"contracts/Buffer.sol\":4092:4096  mask */\n      dup1\n        /* \"contracts/Buffer.sol\":4088:4097  not(mask) */\n      not\n        /* \"contracts/Buffer.sol\":4082:4085  src */\n      dup3\n        /* \"contracts/Buffer.sol\":4076:4086  mload(src) */\n      mload\n        /* \"contracts/Buffer.sol\":4072:4098  and(mload(src), not(mask)) */\n      and\n        /* \"contracts/Buffer.sol\":4148:4152  mask */\n      dup2\n        /* \"contracts/Buffer.sol\":4141:4145  dest */\n      dup5\n        /* \"contracts/Buffer.sol\":4135:4146  mload(dest) */\n      mload\n        /* \"contracts/Buffer.sol\":4131:4153  and(mload(dest), mask) */\n      and\n        /* \"contracts/Buffer.sol\":4196:4203  srcpart */\n      dup2\n        /* \"contracts/Buffer.sol\":4186:4194  destpart */\n      dup2\n        /* \"contracts/Buffer.sol\":4183:4204  or(destpart, srcpart) */\n      or\n        /* \"contracts/Buffer.sol\":4177:4181  dest */\n      dup6\n        /* \"contracts/Buffer.sol\":4170:4205  mstore(dest, or(destpart, srcpart)) */\n      mstore\n        /* \"contracts/Buffer.sol\":4039:4219  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/Buffer.sol\":4246:4249  buf */\n      dup7\n        /* \"contracts/Buffer.sol\":4239:4249  return buf */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/Buffer.sol\":2874:4256  function write(buffer memory buf, uint off, bytes memory data, uint len) internal pure returns(buffer memory) {... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Buffer.sol\":6975:7862  function write(buffer memory buf, uint off, bytes32 data, uint len) private pure returns(buffer memory) {... */\n    tag_84:\n        /* \"contracts/Buffer.sol\":7064:7077  buffer memory */\n      tag_107\n      tag_12\n      jump\t// in\n    tag_107:\n        /* \"contracts/Buffer.sol\":7105:7108  buf */\n      dup5\n        /* \"contracts/Buffer.sol\":7105:7117  buf.capacity */\n      0x20\n      add\n      mload\n        /* \"contracts/Buffer.sol\":7099:7102  off */\n      dup5\n        /* \"contracts/Buffer.sol\":7093:7096  len */\n      dup4\n        /* \"contracts/Buffer.sol\":7093:7102  len + off */\n      tag_109\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_109:\n        /* \"contracts/Buffer.sol\":7093:7117  len + off > buf.capacity */\n      gt\n        /* \"contracts/Buffer.sol\":7089:7172  if (len + off > buf.capacity) {... */\n      iszero\n      tag_110\n      jumpi\n        /* \"contracts/Buffer.sol\":7133:7161  resize(buf, (len + off) * 2) */\n      tag_111\n        /* \"contracts/Buffer.sol\":7140:7143  buf */\n      dup6\n        /* \"contracts/Buffer.sol\":7159:7160  2 */\n      0x02\n        /* \"contracts/Buffer.sol\":7152:7155  off */\n      dup7\n        /* \"contracts/Buffer.sol\":7146:7149  len */\n      dup6\n        /* \"contracts/Buffer.sol\":7146:7155  len + off */\n      tag_112\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_112:\n        /* \"contracts/Buffer.sol\":7145:7160  (len + off) * 2 */\n      tag_113\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_113:\n        /* \"contracts/Buffer.sol\":7133:7139  resize */\n      tag_99\n        /* \"contracts/Buffer.sol\":7133:7161  resize(buf, (len + off) * 2) */\n      jump\t// in\n    tag_111:\n        /* \"contracts/Buffer.sol\":7089:7172  if (len + off > buf.capacity) {... */\n    tag_110:\n        /* \"contracts/Buffer.sol\":7206:7215  uint mask */\n      0x00\n        /* \"contracts/Buffer.sol\":7233:7234  1 */\n      0x01\n        /* \"contracts/Buffer.sol\":7226:7229  len */\n      dup4\n        /* \"contracts/Buffer.sol\":7219:7222  256 */\n      0x0100\n        /* \"contracts/Buffer.sol\":7219:7229  256 ** len */\n      exp\n        /* \"contracts/Buffer.sol\":7218:7234  (256 ** len) - 1 */\n      sub\n        /* \"contracts/Buffer.sol\":7206:7234  uint mask = (256 ** len) - 1 */\n      swap1\n      pop\n        /* \"contracts/Buffer.sol\":7306:7309  len */\n      dup3\n        /* \"contracts/Buffer.sol\":7301:7303  32 */\n      0x20\n        /* \"contracts/Buffer.sol\":7301:7309  32 - len */\n      sub\n        /* \"contracts/Buffer.sol\":7296:7297  8 */\n      0x08\n        /* \"contracts/Buffer.sol\":7296:7310  8 * (32 - len) */\n      mul\n        /* \"contracts/Buffer.sol\":7287:7291  data */\n      dup5\n        /* \"contracts/Buffer.sol\":7287:7311  data >> (8 * (32 - len)) */\n      swap1\n      shr\n        /* \"contracts/Buffer.sol\":7280:7311  data = data >> (8 * (32 - len)) */\n      swap4\n      pop\n        /* \"contracts/Buffer.sol\":7425:7428  buf */\n      dup6\n        /* \"contracts/Buffer.sol\":7419:7429  mload(buf) */\n      mload\n        /* \"contracts/Buffer.sol\":7560:7563  len */\n      dup4\n        /* \"contracts/Buffer.sol\":7554:7557  off */\n      dup7\n        /* \"contracts/Buffer.sol\":7546:7552  bufptr */\n      dup3\n        /* \"contracts/Buffer.sol\":7542:7558  add(bufptr, off) */\n      add\n        /* \"contracts/Buffer.sol\":7538:7564  add(add(bufptr, off), len) */\n      add\n        /* \"contracts/Buffer.sol\":7626:7630  data */\n      dup6\n        /* \"contracts/Buffer.sol\":7618:7622  mask */\n      dup4\n        /* \"contracts/Buffer.sol\":7614:7623  not(mask) */\n      not\n        /* \"contracts/Buffer.sol\":7607:7611  dest */\n      dup3\n        /* \"contracts/Buffer.sol\":7601:7612  mload(dest) */\n      mload\n        /* \"contracts/Buffer.sol\":7597:7624  and(mload(dest), not(mask)) */\n      and\n        /* \"contracts/Buffer.sol\":7594:7631  or(and(mload(dest), not(mask)), data) */\n      or\n        /* \"contracts/Buffer.sol\":7588:7592  dest */\n      dup2\n        /* \"contracts/Buffer.sol\":7581:7632  mstore(dest, or(and(mload(dest), not(mask)), data)) */\n      mstore\n        /* \"contracts/Buffer.sol\":7734:7740  bufptr */\n      dup2\n        /* \"contracts/Buffer.sol\":7728:7741  mload(bufptr) */\n      mload\n        /* \"contracts/Buffer.sol\":7722:7725  len */\n      dup6\n        /* \"contracts/Buffer.sol\":7717:7720  off */\n      dup9\n        /* \"contracts/Buffer.sol\":7713:7726  add(off, len) */\n      add\n        /* \"contracts/Buffer.sol\":7710:7742  gt(add(off, len), mload(bufptr)) */\n      gt\n        /* \"contracts/Buffer.sol\":7707:7812  if gt(add(off, len), mload(bufptr)) {... */\n      iszero\n      tag_114\n      jumpi\n        /* \"contracts/Buffer.sol\":7789:7792  len */\n      dup5\n        /* \"contracts/Buffer.sol\":7784:7787  off */\n      dup8\n        /* \"contracts/Buffer.sol\":7780:7793  add(off, len) */\n      add\n        /* \"contracts/Buffer.sol\":7772:7778  bufptr */\n      dup3\n        /* \"contracts/Buffer.sol\":7765:7794  mstore(bufptr, add(off, len)) */\n      mstore\n        /* \"contracts/Buffer.sol\":7707:7812  if gt(add(off, len), mload(bufptr)) {... */\n    tag_114:\n        /* \"contracts/Buffer.sol\":7334:7826  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/Buffer.sol\":7852:7855  buf */\n      dup5\n        /* \"contracts/Buffer.sol\":7845:7855  return buf */\n      swap1\n      pop\n        /* \"contracts/Buffer.sol\":6975:7862  function write(buffer memory buf, uint off, bytes32 data, uint len) private pure returns(buffer memory) {... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Buffer.sol\":2034:2168  function max(uint a, uint b) private pure returns(uint) {... */\n    tag_96:\n        /* \"contracts/Buffer.sol\":2084:2088  uint */\n      0x00\n        /* \"contracts/Buffer.sol\":2108:2109  b */\n      dup2\n        /* \"contracts/Buffer.sol\":2104:2105  a */\n      dup4\n        /* \"contracts/Buffer.sol\":2104:2109  a > b */\n      gt\n        /* \"contracts/Buffer.sol\":2100:2144  if (a > b) {... */\n      iszero\n      tag_116\n      jumpi\n        /* \"contracts/Buffer.sol\":2132:2133  a */\n      dup3\n        /* \"contracts/Buffer.sol\":2125:2133  return a */\n      swap1\n      pop\n      jump(tag_115)\n        /* \"contracts/Buffer.sol\":2100:2144  if (a > b) {... */\n    tag_116:\n        /* \"contracts/Buffer.sol\":2160:2161  b */\n      dup2\n        /* \"contracts/Buffer.sol\":2153:2161  return b */\n      swap1\n      pop\n        /* \"contracts/Buffer.sol\":2034:2168  function max(uint a, uint b) private pure returns(uint) {... */\n    tag_115:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Buffer.sol\":1861:2028  function resize(buffer memory buf, uint capacity) private pure {... */\n    tag_99:\n        /* \"contracts/Buffer.sol\":1934:1953  bytes memory oldbuf */\n      0x00\n        /* \"contracts/Buffer.sol\":1956:1959  buf */\n      dup3\n        /* \"contracts/Buffer.sol\":1956:1963  buf.buf */\n      0x00\n      add\n      mload\n        /* \"contracts/Buffer.sol\":1934:1963  bytes memory oldbuf = buf.buf */\n      swap1\n      pop\n        /* \"contracts/Buffer.sol\":1973:1992  init(buf, capacity) */\n      tag_118\n        /* \"contracts/Buffer.sol\":1978:1981  buf */\n      dup4\n        /* \"contracts/Buffer.sol\":1983:1991  capacity */\n      dup4\n        /* \"contracts/Buffer.sol\":1973:1977  init */\n      tag_17\n        /* \"contracts/Buffer.sol\":1973:1992  init(buf, capacity) */\n      jump\t// in\n    tag_118:\n      pop\n        /* \"contracts/Buffer.sol\":2002:2021  append(buf, oldbuf) */\n      tag_119\n        /* \"contracts/Buffer.sol\":2009:2012  buf */\n      dup4\n        /* \"contracts/Buffer.sol\":2014:2020  oldbuf */\n      dup3\n        /* \"contracts/Buffer.sol\":2002:2008  append */\n      tag_19\n        /* \"contracts/Buffer.sol\":2002:2021  append(buf, oldbuf) */\n      jump\t// in\n    tag_119:\n      pop\n        /* \"contracts/Buffer.sol\":1924:2028  {... */\n      pop\n        /* \"contracts/Buffer.sol\":1861:2028  function resize(buffer memory buf, uint capacity) private pure {... */\n      pop\n      pop\n      jump\t// out\n    tag_12:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x60\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_121:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_122:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:451   */\n    tag_123:\n        /* \"#utility.yul\":443:444   */\n      0x00\n        /* \"#utility.yul\":440:441   */\n      dup1\n        /* \"#utility.yul\":433:445   */\n      revert\n        /* \"#utility.yul\":457:574   */\n    tag_124:\n        /* \"#utility.yul\":566:567   */\n      0x00\n        /* \"#utility.yul\":563:564   */\n      dup1\n        /* \"#utility.yul\":556:568   */\n      revert\n        /* \"#utility.yul\":580:697   */\n    tag_125:\n        /* \"#utility.yul\":689:690   */\n      0x00\n        /* \"#utility.yul\":686:687   */\n      dup1\n        /* \"#utility.yul\":679:691   */\n      revert\n        /* \"#utility.yul\":716:1268   */\n    tag_126:\n        /* \"#utility.yul\":773:781   */\n      0x00\n        /* \"#utility.yul\":783:789   */\n      dup1\n        /* \"#utility.yul\":833:836   */\n      dup4\n        /* \"#utility.yul\":826:830   */\n      0x1f\n        /* \"#utility.yul\":818:824   */\n      dup5\n        /* \"#utility.yul\":814:831   */\n      add\n        /* \"#utility.yul\":810:837   */\n      slt\n        /* \"#utility.yul\":800:922   */\n      tag_142\n      jumpi\n        /* \"#utility.yul\":841:920   */\n      tag_143\n      tag_123\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":800:922   */\n    tag_142:\n        /* \"#utility.yul\":954:960   */\n      dup3\n        /* \"#utility.yul\":941:961   */\n      calldataload\n        /* \"#utility.yul\":931:961   */\n      swap1\n      pop\n        /* \"#utility.yul\":984:1002   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":976:982   */\n      dup2\n        /* \"#utility.yul\":973:1003   */\n      gt\n        /* \"#utility.yul\":970:1087   */\n      iszero\n      tag_144\n      jumpi\n        /* \"#utility.yul\":1006:1085   */\n      tag_145\n      tag_124\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":970:1087   */\n    tag_144:\n        /* \"#utility.yul\":1120:1124   */\n      0x20\n        /* \"#utility.yul\":1112:1118   */\n      dup4\n        /* \"#utility.yul\":1108:1125   */\n      add\n        /* \"#utility.yul\":1096:1125   */\n      swap2\n      pop\n        /* \"#utility.yul\":1174:1177   */\n      dup4\n        /* \"#utility.yul\":1166:1170   */\n      0x01\n        /* \"#utility.yul\":1158:1164   */\n      dup3\n        /* \"#utility.yul\":1154:1171   */\n      mul\n        /* \"#utility.yul\":1144:1152   */\n      dup4\n        /* \"#utility.yul\":1140:1172   */\n      add\n        /* \"#utility.yul\":1137:1178   */\n      gt\n        /* \"#utility.yul\":1134:1262   */\n      iszero\n      tag_146\n      jumpi\n        /* \"#utility.yul\":1181:1260   */\n      tag_147\n      tag_125\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":1134:1262   */\n    tag_146:\n        /* \"#utility.yul\":716:1268   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1274:1351   */\n    tag_127:\n        /* \"#utility.yul\":1311:1318   */\n      0x00\n        /* \"#utility.yul\":1340:1345   */\n      dup2\n        /* \"#utility.yul\":1329:1345   */\n      swap1\n      pop\n        /* \"#utility.yul\":1274:1351   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1357:1479   */\n    tag_128:\n        /* \"#utility.yul\":1430:1454   */\n      tag_150\n        /* \"#utility.yul\":1448:1453   */\n      dup2\n        /* \"#utility.yul\":1430:1454   */\n      tag_127\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":1423:1428   */\n      dup2\n        /* \"#utility.yul\":1420:1455   */\n      eq\n        /* \"#utility.yul\":1410:1473   */\n      tag_151\n      jumpi\n        /* \"#utility.yul\":1469:1470   */\n      0x00\n        /* \"#utility.yul\":1466:1467   */\n      dup1\n        /* \"#utility.yul\":1459:1471   */\n      revert\n        /* \"#utility.yul\":1410:1473   */\n    tag_151:\n        /* \"#utility.yul\":1357:1479   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1485:1624   */\n    tag_129:\n        /* \"#utility.yul\":1531:1536   */\n      0x00\n        /* \"#utility.yul\":1569:1575   */\n      dup2\n        /* \"#utility.yul\":1556:1576   */\n      calldataload\n        /* \"#utility.yul\":1547:1576   */\n      swap1\n      pop\n        /* \"#utility.yul\":1585:1618   */\n      tag_153\n        /* \"#utility.yul\":1612:1617   */\n      dup2\n        /* \"#utility.yul\":1585:1618   */\n      tag_128\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":1485:1624   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1630:2645   */\n    tag_6:\n        /* \"#utility.yul\":1729:1735   */\n      0x00\n        /* \"#utility.yul\":1737:1743   */\n      dup1\n        /* \"#utility.yul\":1745:1751   */\n      0x00\n        /* \"#utility.yul\":1753:1759   */\n      dup1\n        /* \"#utility.yul\":1761:1767   */\n      0x00\n        /* \"#utility.yul\":1810:1812   */\n      0x60\n        /* \"#utility.yul\":1798:1807   */\n      dup7\n        /* \"#utility.yul\":1789:1796   */\n      dup9\n        /* \"#utility.yul\":1785:1808   */\n      sub\n        /* \"#utility.yul\":1781:1813   */\n      slt\n        /* \"#utility.yul\":1778:1897   */\n      iszero\n      tag_155\n      jumpi\n        /* \"#utility.yul\":1816:1895   */\n      tag_156\n      tag_121\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":1778:1897   */\n    tag_155:\n        /* \"#utility.yul\":1964:1965   */\n      0x00\n        /* \"#utility.yul\":1953:1962   */\n      dup7\n        /* \"#utility.yul\":1949:1966   */\n      add\n        /* \"#utility.yul\":1936:1967   */\n      calldataload\n        /* \"#utility.yul\":1994:2012   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1986:1992   */\n      dup2\n        /* \"#utility.yul\":1983:2013   */\n      gt\n        /* \"#utility.yul\":1980:2097   */\n      iszero\n      tag_157\n      jumpi\n        /* \"#utility.yul\":2016:2095   */\n      tag_158\n      tag_122\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":1980:2097   */\n    tag_157:\n        /* \"#utility.yul\":2129:2193   */\n      tag_159\n        /* \"#utility.yul\":2185:2192   */\n      dup9\n        /* \"#utility.yul\":2176:2182   */\n      dup3\n        /* \"#utility.yul\":2165:2174   */\n      dup10\n        /* \"#utility.yul\":2161:2183   */\n      add\n        /* \"#utility.yul\":2129:2193   */\n      tag_126\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":2111:2193   */\n      swap6\n      pop\n      swap6\n      pop\n        /* \"#utility.yul\":1907:2203   */\n      pop\n        /* \"#utility.yul\":2270:2272   */\n      0x20\n        /* \"#utility.yul\":2259:2268   */\n      dup7\n        /* \"#utility.yul\":2255:2273   */\n      add\n        /* \"#utility.yul\":2242:2274   */\n      calldataload\n        /* \"#utility.yul\":2301:2319   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2293:2299   */\n      dup2\n        /* \"#utility.yul\":2290:2320   */\n      gt\n        /* \"#utility.yul\":2287:2404   */\n      iszero\n      tag_160\n      jumpi\n        /* \"#utility.yul\":2323:2402   */\n      tag_161\n      tag_122\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":2287:2404   */\n    tag_160:\n        /* \"#utility.yul\":2436:2500   */\n      tag_162\n        /* \"#utility.yul\":2492:2499   */\n      dup9\n        /* \"#utility.yul\":2483:2489   */\n      dup3\n        /* \"#utility.yul\":2472:2481   */\n      dup10\n        /* \"#utility.yul\":2468:2490   */\n      add\n        /* \"#utility.yul\":2436:2500   */\n      tag_126\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":2418:2500   */\n      swap4\n      pop\n      swap4\n      pop\n        /* \"#utility.yul\":2213:2510   */\n      pop\n        /* \"#utility.yul\":2549:2551   */\n      0x40\n        /* \"#utility.yul\":2575:2628   */\n      tag_163\n        /* \"#utility.yul\":2620:2627   */\n      dup9\n        /* \"#utility.yul\":2611:2617   */\n      dup3\n        /* \"#utility.yul\":2600:2609   */\n      dup10\n        /* \"#utility.yul\":2596:2618   */\n      add\n        /* \"#utility.yul\":2575:2628   */\n      tag_129\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":2565:2628   */\n      swap2\n      pop\n        /* \"#utility.yul\":2520:2638   */\n      pop\n        /* \"#utility.yul\":1630:2645   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2651:2728   */\n    tag_130:\n        /* \"#utility.yul\":2688:2695   */\n      0x00\n        /* \"#utility.yul\":2717:2722   */\n      dup2\n        /* \"#utility.yul\":2706:2722   */\n      swap1\n      pop\n        /* \"#utility.yul\":2651:2728   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2734:2852   */\n    tag_131:\n        /* \"#utility.yul\":2821:2845   */\n      tag_166\n        /* \"#utility.yul\":2839:2844   */\n      dup2\n        /* \"#utility.yul\":2821:2845   */\n      tag_130\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":2816:2819   */\n      dup3\n        /* \"#utility.yul\":2809:2846   */\n      mstore\n        /* \"#utility.yul\":2734:2852   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2858:3080   */\n    tag_9:\n        /* \"#utility.yul\":2951:2955   */\n      0x00\n        /* \"#utility.yul\":2989:2991   */\n      0x20\n        /* \"#utility.yul\":2978:2987   */\n      dup3\n        /* \"#utility.yul\":2974:2992   */\n      add\n        /* \"#utility.yul\":2966:2992   */\n      swap1\n      pop\n        /* \"#utility.yul\":3002:3073   */\n      tag_168\n        /* \"#utility.yul\":3070:3071   */\n      0x00\n        /* \"#utility.yul\":3059:3068   */\n      dup4\n        /* \"#utility.yul\":3055:3072   */\n      add\n        /* \"#utility.yul\":3046:3052   */\n      dup5\n        /* \"#utility.yul\":3002:3073   */\n      tag_131\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":2858:3080   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3086:3266   */\n    tag_132:\n        /* \"#utility.yul\":3134:3211   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3131:3132   */\n      0x00\n        /* \"#utility.yul\":3124:3212   */\n      mstore\n        /* \"#utility.yul\":3231:3235   */\n      0x11\n        /* \"#utility.yul\":3228:3229   */\n      0x04\n        /* \"#utility.yul\":3221:3236   */\n      mstore\n        /* \"#utility.yul\":3255:3259   */\n      0x24\n        /* \"#utility.yul\":3252:3253   */\n      0x00\n        /* \"#utility.yul\":3245:3260   */\n      revert\n        /* \"#utility.yul\":3272:3463   */\n    tag_15:\n        /* \"#utility.yul\":3312:3315   */\n      0x00\n        /* \"#utility.yul\":3331:3351   */\n      tag_171\n        /* \"#utility.yul\":3349:3350   */\n      dup3\n        /* \"#utility.yul\":3331:3351   */\n      tag_127\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":3326:3351   */\n      swap2\n      pop\n        /* \"#utility.yul\":3365:3385   */\n      tag_172\n        /* \"#utility.yul\":3383:3384   */\n      dup4\n        /* \"#utility.yul\":3365:3385   */\n      tag_127\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":3360:3385   */\n      swap3\n      pop\n        /* \"#utility.yul\":3408:3409   */\n      dup3\n        /* \"#utility.yul\":3405:3406   */\n      dup3\n        /* \"#utility.yul\":3401:3410   */\n      add\n        /* \"#utility.yul\":3394:3410   */\n      swap1\n      pop\n        /* \"#utility.yul\":3429:3432   */\n      dup1\n        /* \"#utility.yul\":3426:3427   */\n      dup3\n        /* \"#utility.yul\":3423:3433   */\n      gt\n        /* \"#utility.yul\":3420:3456   */\n      iszero\n      tag_173\n      jumpi\n        /* \"#utility.yul\":3436:3454   */\n      tag_174\n      tag_132\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":3420:3456   */\n    tag_173:\n        /* \"#utility.yul\":3272:3463   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3469:3649   */\n    tag_133:\n        /* \"#utility.yul\":3517:3594   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3514:3515   */\n      0x00\n        /* \"#utility.yul\":3507:3595   */\n      mstore\n        /* \"#utility.yul\":3614:3618   */\n      0x12\n        /* \"#utility.yul\":3611:3612   */\n      0x04\n        /* \"#utility.yul\":3604:3619   */\n      mstore\n        /* \"#utility.yul\":3638:3642   */\n      0x24\n        /* \"#utility.yul\":3635:3636   */\n      0x00\n        /* \"#utility.yul\":3628:3643   */\n      revert\n        /* \"#utility.yul\":3655:3831   */\n    tag_38:\n        /* \"#utility.yul\":3687:3688   */\n      0x00\n        /* \"#utility.yul\":3704:3724   */\n      tag_177\n        /* \"#utility.yul\":3722:3723   */\n      dup3\n        /* \"#utility.yul\":3704:3724   */\n      tag_127\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":3699:3724   */\n      swap2\n      pop\n        /* \"#utility.yul\":3738:3758   */\n      tag_178\n        /* \"#utility.yul\":3756:3757   */\n      dup4\n        /* \"#utility.yul\":3738:3758   */\n      tag_127\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":3733:3758   */\n      swap3\n      pop\n        /* \"#utility.yul\":3777:3778   */\n      dup3\n        /* \"#utility.yul\":3767:3802   */\n      tag_179\n      jumpi\n        /* \"#utility.yul\":3782:3800   */\n      tag_180\n      tag_133\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":3767:3802   */\n    tag_179:\n        /* \"#utility.yul\":3823:3824   */\n      dup3\n        /* \"#utility.yul\":3820:3821   */\n      dup3\n        /* \"#utility.yul\":3816:3825   */\n      mod\n        /* \"#utility.yul\":3811:3825   */\n      swap1\n      pop\n        /* \"#utility.yul\":3655:3831   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3837:4031   */\n    tag_42:\n        /* \"#utility.yul\":3877:3881   */\n      0x00\n        /* \"#utility.yul\":3897:3917   */\n      tag_182\n        /* \"#utility.yul\":3915:3916   */\n      dup3\n        /* \"#utility.yul\":3897:3917   */\n      tag_127\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":3892:3917   */\n      swap2\n      pop\n        /* \"#utility.yul\":3931:3951   */\n      tag_183\n        /* \"#utility.yul\":3949:3950   */\n      dup4\n        /* \"#utility.yul\":3931:3951   */\n      tag_127\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":3926:3951   */\n      swap3\n      pop\n        /* \"#utility.yul\":3975:3976   */\n      dup3\n        /* \"#utility.yul\":3972:3973   */\n      dup3\n        /* \"#utility.yul\":3968:3977   */\n      sub\n        /* \"#utility.yul\":3960:3977   */\n      swap1\n      pop\n        /* \"#utility.yul\":3999:4000   */\n      dup2\n        /* \"#utility.yul\":3993:3997   */\n      dup2\n        /* \"#utility.yul\":3990:4001   */\n      gt\n        /* \"#utility.yul\":3987:4024   */\n      iszero\n      tag_184\n      jumpi\n        /* \"#utility.yul\":4004:4022   */\n      tag_185\n      tag_132\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":3987:4024   */\n    tag_184:\n        /* \"#utility.yul\":3837:4031   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4037:4447   */\n    tag_98:\n        /* \"#utility.yul\":4077:4084   */\n      0x00\n        /* \"#utility.yul\":4100:4120   */\n      tag_187\n        /* \"#utility.yul\":4118:4119   */\n      dup3\n        /* \"#utility.yul\":4100:4120   */\n      tag_127\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":4095:4120   */\n      swap2\n      pop\n        /* \"#utility.yul\":4134:4154   */\n      tag_188\n        /* \"#utility.yul\":4152:4153   */\n      dup4\n        /* \"#utility.yul\":4134:4154   */\n      tag_127\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":4129:4154   */\n      swap3\n      pop\n        /* \"#utility.yul\":4189:4190   */\n      dup3\n        /* \"#utility.yul\":4186:4187   */\n      dup3\n        /* \"#utility.yul\":4182:4191   */\n      mul\n        /* \"#utility.yul\":4211:4241   */\n      tag_189\n        /* \"#utility.yul\":4229:4240   */\n      dup2\n        /* \"#utility.yul\":4211:4241   */\n      tag_127\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":4200:4241   */\n      swap2\n      pop\n        /* \"#utility.yul\":4390:4391   */\n      dup3\n        /* \"#utility.yul\":4381:4388   */\n      dup3\n        /* \"#utility.yul\":4377:4392   */\n      div\n        /* \"#utility.yul\":4374:4375   */\n      dup5\n        /* \"#utility.yul\":4371:4393   */\n      eq\n        /* \"#utility.yul\":4351:4352   */\n      dup4\n        /* \"#utility.yul\":4344:4353   */\n      iszero\n        /* \"#utility.yul\":4324:4407   */\n      or\n        /* \"#utility.yul\":4301:4440   */\n      tag_190\n      jumpi\n        /* \"#utility.yul\":4420:4438   */\n      tag_191\n      tag_132\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":4301:4440   */\n    tag_190:\n        /* \"#utility.yul\":4085:4447   */\n      pop\n        /* \"#utility.yul\":4037:4447   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122079f3da78405e5c1155b2bec553f77db43202c89576aeab1f40f245f3a788a0d364736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50610cc18061001d5f395ff3fe608060405234801561000f575f80fd5b5060043610610029575f3560e01c806368f9dab21461002d575b5f80fd5b61004760048036038101906100429190610a98565b61005d565b6040516100549190610b41565b60405180910390f35b5f6100666109e3565b6100966010868690508989905061007d9190610b87565b6100879190610b87565b8261022e90919063ffffffff16565b506100ed85858080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f820116905080830192505050505050508261029690919063ffffffff16565b5061014487878080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f820116905080830192505050505050508261029690919063ffffffff16565b505f610152825f01516102b7565b90505f84111561021157610165826107c0565b5061017c5f60601b836107d690919063ffffffff16565b506101d388888080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f820116905080830192505050505050508361029690919063ffffffff16565b505f5b8481101561020f576101f35f83856108069092919063ffffffff16565b50610200835f01516102b7565b915080806001019150506101d6565b505b806bffffffffffffffffffffffff19169250505095945050505050565b6102366109e3565b5f6020836102449190610be7565b14610270576020826102569190610be7565b60206102629190610c17565b8261026d9190610b87565b91505b818360200181815250506040518084525f81528281016020016040525082905092915050565b61029e6109e3565b6102af83845f015151848551610833565b905092915050565b5f6040518251602084019350604067ffffffffffffffc0600183011601600982820310600181036102e9576040820191505b50776745230100efcdab890098badcfe001032547600c3d2e1f0610340565b5f838310156103395782820151905082840393506020841015610338576001846020036101000a03198082169150505b5b9392505050565b5f5b8281101561074057610355848289610308565b8552610365846020830189610308565b6020860152604081850310600181036103815760808286038701535b50604083038114600181036103a0576008850260208701511760208701525b5060405b608081101561042c5760408103860151603882038701511860208203870151600c830388015118187c010000000100000001000000010000000100000001000000010000000163800000008204167ffffffffefffffffefffffffefffffffefffffffefffffffefffffffefffffffe6002830216179050808288015250600c810190506103a4565b5060805b6101408110156104b957608081038601516070820387015118604082038701516018830388015118187c030000000300000003000000030000000300000003000000030000000363400000008204167ffffffffcfffffffcfffffffcfffffffcfffffffcfffffffcfffffffcfffffffc6004830216179050808288015250601881019050610430565b50815f805f5b605081101561071257601481045f81146104f0576001811461053a576002811461057757600381146105da57610613565b6501000000000085046a01000000000000000000008604189350836f01000000000000000000000000000000860416935083650100000000008604189350635a8279999250610613565b6a010000000000000000000085046f01000000000000000000000000000000860418935083650100000000008604189350636ed9eba19250610613565b6a010000000000000000000085046f01000000000000000000000000000000860417935083650100000000008604169350836a010000000000000000000086046f01000000000000000000000000000000870416179350638f1bbcdc9250610613565b6a010000000000000000000085046f0100000000000000000000000000000086041893508365010000000000860418935063ca62c1d692505b50601f770800000000000000000000000000000000000000000000008504168063ffffffe073080000000000000000000000000000000000000087041617905080840190508063ffffffff86160190508083019050807c0100000000000000000000000000000000000000000000000000000000600484028c0151040190507401000000000000000000000000000000000000000081026501000000000086041794506a0100000000000000000000633fffffff6a040000000000000000000087041663c00000006604000000000000880416170277ffffffff00ffffffff000000000000ffffffff00ffffffff8616179450506001810190506104bf565b5077ffffffff00ffffffff00ffffffff00ffffffff00ffffffff838601169450505050604081019050610342565b506c0100000000000000000000000063ffffffff821667ffffffff000000006101008404166bffffffff0000000000000000620100008504166fffffffff000000000000000000000000630100000086041673ffffffff000000000000000000000000000000006401000000008704161717171702945050505050919050565b6107c86109e3565b81515f815250819050919050565b6107de6109e3565b6107fe83845f015151846bffffffffffffffffffffffff1916601461091f565b905092915050565b61080e6109e3565b61082a8484846bffffffffffffffffffffffff1916601461091f565b90509392505050565b61083b6109e3565b8251821115610848575f80fd5b846020015182856108599190610b87565b111561088e5761088d85600261087e886020015188876108799190610b87565b6109a6565b6108889190610c4a565b6109c1565b5b5f808651805187602083010193508088870111156108ac5787860182525b60208701925050505b602084106108f357805182526020826108ce9190610b87565b91506020816108dd9190610b87565b90506020846108ec9190610c17565b93506108b5565b5f6001856020036101000a03905080198251168184511681811785525050508692505050949350505050565b6109276109e3565b846020015184836109389190610b87565b11156109605761095f85600286856109509190610b87565b61095a9190610c4a565b6109c1565b5b5f6001836101000a0390508260200360080284901c935085518386820101858319825116178152815185880111156109985784870182525b505050849050949350505050565b5f818311156109b7578290506109bb565b8190505b92915050565b5f825f015190506109d2838361022e565b506109dd8382610296565b50505050565b6040518060400160405280606081526020015f81525090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f8083601f840112610a2557610a24610a04565b5b8235905067ffffffffffffffff811115610a4257610a41610a08565b5b602083019150836001820283011115610a5e57610a5d610a0c565b5b9250929050565b5f819050919050565b610a7781610a65565b8114610a81575f80fd5b50565b5f81359050610a9281610a6e565b92915050565b5f805f805f60608688031215610ab157610ab06109fc565b5b5f86013567ffffffffffffffff811115610ace57610acd610a00565b5b610ada88828901610a10565b9550955050602086013567ffffffffffffffff811115610afd57610afc610a00565b5b610b0988828901610a10565b93509350506040610b1c88828901610a84565b9150509295509295909350565b5f819050919050565b610b3b81610b29565b82525050565b5f602082019050610b545f830184610b32565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610b9182610a65565b9150610b9c83610a65565b9250828201905080821115610bb457610bb3610b5a565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610bf182610a65565b9150610bfc83610a65565b925082610c0c57610c0b610bba565b5b828206905092915050565b5f610c2182610a65565b9150610c2c83610a65565b9250828203905081811115610c4457610c43610b5a565b5b92915050565b5f610c5482610a65565b9150610c5f83610a65565b9250828202610c6d81610a65565b91508282048414831517610c8457610c83610b5a565b5b509291505056fea264697066735822122079f3da78405e5c1155b2bec553f77db43202c89576aeab1f40f245f3a788a0d364736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xCC1 DUP1 PUSH2 0x1D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x68F9DAB2 EQ PUSH2 0x2D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x47 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42 SWAP2 SWAP1 PUSH2 0xA98 JUMP JUMPDEST PUSH2 0x5D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54 SWAP2 SWAP1 PUSH2 0xB41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH2 0x66 PUSH2 0x9E3 JUMP JUMPDEST PUSH2 0x96 PUSH1 0x10 DUP7 DUP7 SWAP1 POP DUP10 DUP10 SWAP1 POP PUSH2 0x7D SWAP2 SWAP1 PUSH2 0xB87 JUMP JUMPDEST PUSH2 0x87 SWAP2 SWAP1 PUSH2 0xB87 JUMP JUMPDEST DUP3 PUSH2 0x22E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH2 0xED DUP6 DUP6 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP3 PUSH2 0x296 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH2 0x144 DUP8 DUP8 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP3 PUSH2 0x296 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH0 PUSH2 0x152 DUP3 PUSH0 ADD MLOAD PUSH2 0x2B7 JUMP JUMPDEST SWAP1 POP PUSH0 DUP5 GT ISZERO PUSH2 0x211 JUMPI PUSH2 0x165 DUP3 PUSH2 0x7C0 JUMP JUMPDEST POP PUSH2 0x17C PUSH0 PUSH1 0x60 SHL DUP4 PUSH2 0x7D6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH2 0x1D3 DUP9 DUP9 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP4 PUSH2 0x296 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x20F JUMPI PUSH2 0x1F3 PUSH0 DUP4 DUP6 PUSH2 0x806 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH2 0x200 DUP4 PUSH0 ADD MLOAD PUSH2 0x2B7 JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1D6 JUMP JUMPDEST POP JUMPDEST DUP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP3 POP POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x236 PUSH2 0x9E3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP4 PUSH2 0x244 SWAP2 SWAP1 PUSH2 0xBE7 JUMP JUMPDEST EQ PUSH2 0x270 JUMPI PUSH1 0x20 DUP3 PUSH2 0x256 SWAP2 SWAP1 PUSH2 0xBE7 JUMP JUMPDEST PUSH1 0x20 PUSH2 0x262 SWAP2 SWAP1 PUSH2 0xC17 JUMP JUMPDEST DUP3 PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xB87 JUMP JUMPDEST SWAP2 POP JUMPDEST DUP2 DUP4 PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x40 MLOAD DUP1 DUP5 MSTORE PUSH0 DUP2 MSTORE DUP3 DUP2 ADD PUSH1 0x20 ADD PUSH1 0x40 MSTORE POP DUP3 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x29E PUSH2 0x9E3 JUMP JUMPDEST PUSH2 0x2AF DUP4 DUP5 PUSH0 ADD MLOAD MLOAD DUP5 DUP6 MLOAD PUSH2 0x833 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP3 MLOAD PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x40 PUSH8 0xFFFFFFFFFFFFFFC0 PUSH1 0x1 DUP4 ADD AND ADD PUSH1 0x9 DUP3 DUP3 SUB LT PUSH1 0x1 DUP2 SUB PUSH2 0x2E9 JUMPI PUSH1 0x40 DUP3 ADD SWAP2 POP JUMPDEST POP PUSH24 0x6745230100EFCDAB890098BADCFE001032547600C3D2E1F0 PUSH2 0x340 JUMP JUMPDEST PUSH0 DUP4 DUP4 LT ISZERO PUSH2 0x339 JUMPI DUP3 DUP3 ADD MLOAD SWAP1 POP DUP3 DUP5 SUB SWAP4 POP PUSH1 0x20 DUP5 LT ISZERO PUSH2 0x338 JUMPI PUSH1 0x1 DUP5 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT DUP1 DUP3 AND SWAP2 POP POP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x740 JUMPI PUSH2 0x355 DUP5 DUP3 DUP10 PUSH2 0x308 JUMP JUMPDEST DUP6 MSTORE PUSH2 0x365 DUP5 PUSH1 0x20 DUP4 ADD DUP10 PUSH2 0x308 JUMP JUMPDEST PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP2 DUP6 SUB LT PUSH1 0x1 DUP2 SUB PUSH2 0x381 JUMPI PUSH1 0x80 DUP3 DUP7 SUB DUP8 ADD MSTORE8 JUMPDEST POP PUSH1 0x40 DUP4 SUB DUP2 EQ PUSH1 0x1 DUP2 SUB PUSH2 0x3A0 JUMPI PUSH1 0x8 DUP6 MUL PUSH1 0x20 DUP8 ADD MLOAD OR PUSH1 0x20 DUP8 ADD MSTORE JUMPDEST POP PUSH1 0x40 JUMPDEST PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x42C JUMPI PUSH1 0x40 DUP2 SUB DUP7 ADD MLOAD PUSH1 0x38 DUP3 SUB DUP8 ADD MLOAD XOR PUSH1 0x20 DUP3 SUB DUP8 ADD MLOAD PUSH1 0xC DUP4 SUB DUP9 ADD MLOAD XOR XOR PUSH29 0x100000001000000010000000100000001000000010000000100000001 PUSH4 0x80000000 DUP3 DIV AND PUSH32 0xFFFFFFFEFFFFFFFEFFFFFFFEFFFFFFFEFFFFFFFEFFFFFFFEFFFFFFFEFFFFFFFE PUSH1 0x2 DUP4 MUL AND OR SWAP1 POP DUP1 DUP3 DUP9 ADD MSTORE POP PUSH1 0xC DUP2 ADD SWAP1 POP PUSH2 0x3A4 JUMP JUMPDEST POP PUSH1 0x80 JUMPDEST PUSH2 0x140 DUP2 LT ISZERO PUSH2 0x4B9 JUMPI PUSH1 0x80 DUP2 SUB DUP7 ADD MLOAD PUSH1 0x70 DUP3 SUB DUP8 ADD MLOAD XOR PUSH1 0x40 DUP3 SUB DUP8 ADD MLOAD PUSH1 0x18 DUP4 SUB DUP9 ADD MLOAD XOR XOR PUSH29 0x300000003000000030000000300000003000000030000000300000003 PUSH4 0x40000000 DUP3 DIV AND PUSH32 0xFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFC PUSH1 0x4 DUP4 MUL AND OR SWAP1 POP DUP1 DUP3 DUP9 ADD MSTORE POP PUSH1 0x18 DUP2 ADD SWAP1 POP PUSH2 0x430 JUMP JUMPDEST POP DUP2 PUSH0 DUP1 PUSH0 JUMPDEST PUSH1 0x50 DUP2 LT ISZERO PUSH2 0x712 JUMPI PUSH1 0x14 DUP2 DIV PUSH0 DUP2 EQ PUSH2 0x4F0 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x53A JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x577 JUMPI PUSH1 0x3 DUP2 EQ PUSH2 0x5DA JUMPI PUSH2 0x613 JUMP JUMPDEST PUSH6 0x10000000000 DUP6 DIV PUSH11 0x100000000000000000000 DUP7 DIV XOR SWAP4 POP DUP4 PUSH16 0x1000000000000000000000000000000 DUP7 DIV AND SWAP4 POP DUP4 PUSH6 0x10000000000 DUP7 DIV XOR SWAP4 POP PUSH4 0x5A827999 SWAP3 POP PUSH2 0x613 JUMP JUMPDEST PUSH11 0x100000000000000000000 DUP6 DIV PUSH16 0x1000000000000000000000000000000 DUP7 DIV XOR SWAP4 POP DUP4 PUSH6 0x10000000000 DUP7 DIV XOR SWAP4 POP PUSH4 0x6ED9EBA1 SWAP3 POP PUSH2 0x613 JUMP JUMPDEST PUSH11 0x100000000000000000000 DUP6 DIV PUSH16 0x1000000000000000000000000000000 DUP7 DIV OR SWAP4 POP DUP4 PUSH6 0x10000000000 DUP7 DIV AND SWAP4 POP DUP4 PUSH11 0x100000000000000000000 DUP7 DIV PUSH16 0x1000000000000000000000000000000 DUP8 DIV AND OR SWAP4 POP PUSH4 0x8F1BBCDC SWAP3 POP PUSH2 0x613 JUMP JUMPDEST PUSH11 0x100000000000000000000 DUP6 DIV PUSH16 0x1000000000000000000000000000000 DUP7 DIV XOR SWAP4 POP DUP4 PUSH6 0x10000000000 DUP7 DIV XOR SWAP4 POP PUSH4 0xCA62C1D6 SWAP3 POP JUMPDEST POP PUSH1 0x1F PUSH24 0x80000000000000000000000000000000000000000000000 DUP6 DIV AND DUP1 PUSH4 0xFFFFFFE0 PUSH20 0x800000000000000000000000000000000000000 DUP8 DIV AND OR SWAP1 POP DUP1 DUP5 ADD SWAP1 POP DUP1 PUSH4 0xFFFFFFFF DUP7 AND ADD SWAP1 POP DUP1 DUP4 ADD SWAP1 POP DUP1 PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP5 MUL DUP13 ADD MLOAD DIV ADD SWAP1 POP PUSH21 0x10000000000000000000000000000000000000000 DUP2 MUL PUSH6 0x10000000000 DUP7 DIV OR SWAP5 POP PUSH11 0x100000000000000000000 PUSH4 0x3FFFFFFF PUSH11 0x400000000000000000000 DUP8 DIV AND PUSH4 0xC0000000 PUSH7 0x4000000000000 DUP9 DIV AND OR MUL PUSH24 0xFFFFFFFF00FFFFFFFF000000000000FFFFFFFF00FFFFFFFF DUP7 AND OR SWAP5 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x4BF JUMP JUMPDEST POP PUSH24 0xFFFFFFFF00FFFFFFFF00FFFFFFFF00FFFFFFFF00FFFFFFFF DUP4 DUP7 ADD AND SWAP5 POP POP POP POP PUSH1 0x40 DUP2 ADD SWAP1 POP PUSH2 0x342 JUMP JUMPDEST POP PUSH13 0x1000000000000000000000000 PUSH4 0xFFFFFFFF DUP3 AND PUSH8 0xFFFFFFFF00000000 PUSH2 0x100 DUP5 DIV AND PUSH12 0xFFFFFFFF0000000000000000 PUSH3 0x10000 DUP6 DIV AND PUSH16 0xFFFFFFFF000000000000000000000000 PUSH4 0x1000000 DUP7 DIV AND PUSH20 0xFFFFFFFF00000000000000000000000000000000 PUSH5 0x100000000 DUP8 DIV AND OR OR OR OR MUL SWAP5 POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7C8 PUSH2 0x9E3 JUMP JUMPDEST DUP2 MLOAD PUSH0 DUP2 MSTORE POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7DE PUSH2 0x9E3 JUMP JUMPDEST PUSH2 0x7FE DUP4 DUP5 PUSH0 ADD MLOAD MLOAD DUP5 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x14 PUSH2 0x91F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x80E PUSH2 0x9E3 JUMP JUMPDEST PUSH2 0x82A DUP5 DUP5 DUP5 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x14 PUSH2 0x91F JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x83B PUSH2 0x9E3 JUMP JUMPDEST DUP3 MLOAD DUP3 GT ISZERO PUSH2 0x848 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 PUSH1 0x20 ADD MLOAD DUP3 DUP6 PUSH2 0x859 SWAP2 SWAP1 PUSH2 0xB87 JUMP JUMPDEST GT ISZERO PUSH2 0x88E JUMPI PUSH2 0x88D DUP6 PUSH1 0x2 PUSH2 0x87E DUP9 PUSH1 0x20 ADD MLOAD DUP9 DUP8 PUSH2 0x879 SWAP2 SWAP1 PUSH2 0xB87 JUMP JUMPDEST PUSH2 0x9A6 JUMP JUMPDEST PUSH2 0x888 SWAP2 SWAP1 PUSH2 0xC4A JUMP JUMPDEST PUSH2 0x9C1 JUMP JUMPDEST JUMPDEST PUSH0 DUP1 DUP7 MLOAD DUP1 MLOAD DUP8 PUSH1 0x20 DUP4 ADD ADD SWAP4 POP DUP1 DUP9 DUP8 ADD GT ISZERO PUSH2 0x8AC JUMPI DUP8 DUP7 ADD DUP3 MSTORE JUMPDEST PUSH1 0x20 DUP8 ADD SWAP3 POP POP POP JUMPDEST PUSH1 0x20 DUP5 LT PUSH2 0x8F3 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 PUSH2 0x8CE SWAP2 SWAP1 PUSH2 0xB87 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP2 PUSH2 0x8DD SWAP2 SWAP1 PUSH2 0xB87 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP5 PUSH2 0x8EC SWAP2 SWAP1 PUSH2 0xC17 JUMP JUMPDEST SWAP4 POP PUSH2 0x8B5 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP6 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB SWAP1 POP DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP2 DUP2 OR DUP6 MSTORE POP POP POP DUP7 SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x927 PUSH2 0x9E3 JUMP JUMPDEST DUP5 PUSH1 0x20 ADD MLOAD DUP5 DUP4 PUSH2 0x938 SWAP2 SWAP1 PUSH2 0xB87 JUMP JUMPDEST GT ISZERO PUSH2 0x960 JUMPI PUSH2 0x95F DUP6 PUSH1 0x2 DUP7 DUP6 PUSH2 0x950 SWAP2 SWAP1 PUSH2 0xB87 JUMP JUMPDEST PUSH2 0x95A SWAP2 SWAP1 PUSH2 0xC4A JUMP JUMPDEST PUSH2 0x9C1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH1 0x1 DUP4 PUSH2 0x100 EXP SUB SWAP1 POP DUP3 PUSH1 0x20 SUB PUSH1 0x8 MUL DUP5 SWAP1 SHR SWAP4 POP DUP6 MLOAD DUP4 DUP7 DUP3 ADD ADD DUP6 DUP4 NOT DUP3 MLOAD AND OR DUP2 MSTORE DUP2 MLOAD DUP6 DUP9 ADD GT ISZERO PUSH2 0x998 JUMPI DUP5 DUP8 ADD DUP3 MSTORE JUMPDEST POP POP POP DUP5 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 GT ISZERO PUSH2 0x9B7 JUMPI DUP3 SWAP1 POP PUSH2 0x9BB JUMP JUMPDEST DUP2 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH0 ADD MLOAD SWAP1 POP PUSH2 0x9D2 DUP4 DUP4 PUSH2 0x22E JUMP JUMPDEST POP PUSH2 0x9DD DUP4 DUP3 PUSH2 0x296 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xA25 JUMPI PUSH2 0xA24 PUSH2 0xA04 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA42 JUMPI PUSH2 0xA41 PUSH2 0xA08 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xA5E JUMPI PUSH2 0xA5D PUSH2 0xA0C JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA77 DUP2 PUSH2 0xA65 JUMP JUMPDEST DUP2 EQ PUSH2 0xA81 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA92 DUP2 PUSH2 0xA6E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xAB1 JUMPI PUSH2 0xAB0 PUSH2 0x9FC JUMP JUMPDEST JUMPDEST PUSH0 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xACE JUMPI PUSH2 0xACD PUSH2 0xA00 JUMP JUMPDEST JUMPDEST PUSH2 0xADA DUP9 DUP3 DUP10 ADD PUSH2 0xA10 JUMP JUMPDEST SWAP6 POP SWAP6 POP POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xAFD JUMPI PUSH2 0xAFC PUSH2 0xA00 JUMP JUMPDEST JUMPDEST PUSH2 0xB09 DUP9 DUP3 DUP10 ADD PUSH2 0xA10 JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0x40 PUSH2 0xB1C DUP9 DUP3 DUP10 ADD PUSH2 0xA84 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB3B DUP2 PUSH2 0xB29 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB54 PUSH0 DUP4 ADD DUP5 PUSH2 0xB32 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xB91 DUP3 PUSH2 0xA65 JUMP JUMPDEST SWAP2 POP PUSH2 0xB9C DUP4 PUSH2 0xA65 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xBB4 JUMPI PUSH2 0xBB3 PUSH2 0xB5A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xBF1 DUP3 PUSH2 0xA65 JUMP JUMPDEST SWAP2 POP PUSH2 0xBFC DUP4 PUSH2 0xA65 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xC0C JUMPI PUSH2 0xC0B PUSH2 0xBBA JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC21 DUP3 PUSH2 0xA65 JUMP JUMPDEST SWAP2 POP PUSH2 0xC2C DUP4 PUSH2 0xA65 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xC44 JUMPI PUSH2 0xC43 PUSH2 0xB5A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC54 DUP3 PUSH2 0xA65 JUMP JUMPDEST SWAP2 POP PUSH2 0xC5F DUP4 PUSH2 0xA65 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xC6D DUP2 PUSH2 0xA65 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xC84 JUMPI PUSH2 0xC83 PUSH2 0xB5A JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0xF3DA78405E5C1155B2BEC553F77DB43202C89576AEAB1F40F245 RETURN 0xA7 DUP9 LOG0 0xD3 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "183:699:3:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@appendBytes20_428": {
									"entryPoint": 2006,
									"id": 428,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@append_265": {
									"entryPoint": 662,
									"id": 265,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@hash_674": {
									"entryPoint": 93,
									"id": 674,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@init_46": {
									"entryPoint": 558,
									"id": 46,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@max_118": {
									"entryPoint": 2470,
									"id": 118,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@resize_99": {
									"entryPoint": 2497,
									"id": 99,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@sha1_537": {
									"entryPoint": 695,
									"id": 537,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@truncate_132": {
									"entryPoint": 1984,
									"id": 132,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@writeBytes20_403": {
									"entryPoint": 2054,
									"id": 403,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@write_218": {
									"entryPoint": 2099,
									"id": 218,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@write_378": {
									"entryPoint": 2335,
									"id": 378,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_calldata_ptr": {
									"entryPoint": 2576,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2692,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes_calldata_ptrt_bytes_calldata_ptrt_uint256": {
									"entryPoint": 2712,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 2866,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 2881,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2951,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3146,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3095,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 2857,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2661,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 3047,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2906,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 3002,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 2568,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 2564,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 2572,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 2560,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2556,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2670,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4450:4",
										"nodeType": "YulBlock",
										"src": "0:4450:4",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:4",
													"nodeType": "YulBlock",
													"src": "47:35:4",
													"statements": [
														{
															"nativeSrc": "57:19:4",
															"nodeType": "YulAssignment",
															"src": "57:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:4",
																		"nodeType": "YulLiteral",
																		"src": "73:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:4"
																},
																"nativeSrc": "67:9:4",
																"nodeType": "YulFunctionCall",
																"src": "67:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:4",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:4",
														"nodeType": "YulTypedName",
														"src": "40:6:4",
														"type": ""
													}
												],
												"src": "7:75:4"
											},
											{
												"body": {
													"nativeSrc": "177:28:4",
													"nodeType": "YulBlock",
													"src": "177:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:4",
																		"nodeType": "YulLiteral",
																		"src": "194:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:4",
																		"nodeType": "YulLiteral",
																		"src": "197:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:4"
																},
																"nativeSrc": "187:12:4",
																"nodeType": "YulFunctionCall",
																"src": "187:12:4"
															},
															"nativeSrc": "187:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:4"
											},
											{
												"body": {
													"nativeSrc": "300:28:4",
													"nodeType": "YulBlock",
													"src": "300:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:4",
																		"nodeType": "YulLiteral",
																		"src": "317:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:4",
																		"nodeType": "YulLiteral",
																		"src": "320:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:4"
																},
																"nativeSrc": "310:12:4",
																"nodeType": "YulFunctionCall",
																"src": "310:12:4"
															},
															"nativeSrc": "310:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:4"
											},
											{
												"body": {
													"nativeSrc": "423:28:4",
													"nodeType": "YulBlock",
													"src": "423:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:4",
																		"nodeType": "YulLiteral",
																		"src": "440:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:4",
																		"nodeType": "YulLiteral",
																		"src": "443:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:4"
																},
																"nativeSrc": "433:12:4",
																"nodeType": "YulFunctionCall",
																"src": "433:12:4"
															},
															"nativeSrc": "433:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:4"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:4"
											},
											{
												"body": {
													"nativeSrc": "546:28:4",
													"nodeType": "YulBlock",
													"src": "546:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:4",
																		"nodeType": "YulLiteral",
																		"src": "563:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:4",
																		"nodeType": "YulLiteral",
																		"src": "566:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:4"
																},
																"nativeSrc": "556:12:4",
																"nodeType": "YulFunctionCall",
																"src": "556:12:4"
															},
															"nativeSrc": "556:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:4"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nativeSrc": "457:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:4"
											},
											{
												"body": {
													"nativeSrc": "669:28:4",
													"nodeType": "YulBlock",
													"src": "669:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "686:1:4",
																		"nodeType": "YulLiteral",
																		"src": "686:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "689:1:4",
																		"nodeType": "YulLiteral",
																		"src": "689:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "679:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "679:6:4"
																},
																"nativeSrc": "679:12:4",
																"nodeType": "YulFunctionCall",
																"src": "679:12:4"
															},
															"nativeSrc": "679:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "679:12:4"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "580:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "580:117:4"
											},
											{
												"body": {
													"nativeSrc": "790:478:4",
													"nodeType": "YulBlock",
													"src": "790:478:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "839:83:4",
																"nodeType": "YulBlock",
																"src": "839:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "841:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "841:77:4"
																			},
																			"nativeSrc": "841:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "841:79:4"
																		},
																		"nativeSrc": "841:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "841:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "818:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "818:6:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "826:4:4",
																						"nodeType": "YulLiteral",
																						"src": "826:4:4",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "814:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "814:3:4"
																				},
																				"nativeSrc": "814:17:4",
																				"nodeType": "YulFunctionCall",
																				"src": "814:17:4"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "833:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "833:3:4"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "810:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "810:3:4"
																		},
																		"nativeSrc": "810:27:4",
																		"nodeType": "YulFunctionCall",
																		"src": "810:27:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "803:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "803:6:4"
																},
																"nativeSrc": "803:35:4",
																"nodeType": "YulFunctionCall",
																"src": "803:35:4"
															},
															"nativeSrc": "800:122:4",
															"nodeType": "YulIf",
															"src": "800:122:4"
														},
														{
															"nativeSrc": "931:30:4",
															"nodeType": "YulAssignment",
															"src": "931:30:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "954:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "954:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "941:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "941:12:4"
																},
																"nativeSrc": "941:20:4",
																"nodeType": "YulFunctionCall",
																"src": "941:20:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "931:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "931:6:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1004:83:4",
																"nodeType": "YulBlock",
																"src": "1004:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "1006:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "1006:77:4"
																			},
																			"nativeSrc": "1006:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1006:79:4"
																		},
																		"nativeSrc": "1006:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1006:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "976:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "976:6:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "984:18:4",
																		"nodeType": "YulLiteral",
																		"src": "984:18:4",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "973:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "973:2:4"
																},
																"nativeSrc": "973:30:4",
																"nodeType": "YulFunctionCall",
																"src": "973:30:4"
															},
															"nativeSrc": "970:117:4",
															"nodeType": "YulIf",
															"src": "970:117:4"
														},
														{
															"nativeSrc": "1096:29:4",
															"nodeType": "YulAssignment",
															"src": "1096:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1112:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1112:6:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1120:4:4",
																		"nodeType": "YulLiteral",
																		"src": "1120:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1108:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1108:3:4"
																},
																"nativeSrc": "1108:17:4",
																"nodeType": "YulFunctionCall",
																"src": "1108:17:4"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "1096:8:4",
																	"nodeType": "YulIdentifier",
																	"src": "1096:8:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1179:83:4",
																"nodeType": "YulBlock",
																"src": "1179:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "1181:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "1181:77:4"
																			},
																			"nativeSrc": "1181:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1181:79:4"
																		},
																		"nativeSrc": "1181:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1181:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "1144:8:4",
																				"nodeType": "YulIdentifier",
																				"src": "1144:8:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "1158:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "1158:6:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1166:4:4",
																						"nodeType": "YulLiteral",
																						"src": "1166:4:4",
																						"type": "",
																						"value": "0x01"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "1154:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "1154:3:4"
																				},
																				"nativeSrc": "1154:17:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1154:17:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1140:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1140:3:4"
																		},
																		"nativeSrc": "1140:32:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1140:32:4"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "1174:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "1174:3:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1137:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "1137:2:4"
																},
																"nativeSrc": "1137:41:4",
																"nodeType": "YulFunctionCall",
																"src": "1137:41:4"
															},
															"nativeSrc": "1134:128:4",
															"nodeType": "YulIf",
															"src": "1134:128:4"
														}
													]
												},
												"name": "abi_decode_t_bytes_calldata_ptr",
												"nativeSrc": "716:552:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "757:6:4",
														"nodeType": "YulTypedName",
														"src": "757:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "765:3:4",
														"nodeType": "YulTypedName",
														"src": "765:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "773:8:4",
														"nodeType": "YulTypedName",
														"src": "773:8:4",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "783:6:4",
														"nodeType": "YulTypedName",
														"src": "783:6:4",
														"type": ""
													}
												],
												"src": "716:552:4"
											},
											{
												"body": {
													"nativeSrc": "1319:32:4",
													"nodeType": "YulBlock",
													"src": "1319:32:4",
													"statements": [
														{
															"nativeSrc": "1329:16:4",
															"nodeType": "YulAssignment",
															"src": "1329:16:4",
															"value": {
																"name": "value",
																"nativeSrc": "1340:5:4",
																"nodeType": "YulIdentifier",
																"src": "1340:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1329:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "1329:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1274:77:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1301:5:4",
														"nodeType": "YulTypedName",
														"src": "1301:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1311:7:4",
														"nodeType": "YulTypedName",
														"src": "1311:7:4",
														"type": ""
													}
												],
												"src": "1274:77:4"
											},
											{
												"body": {
													"nativeSrc": "1400:79:4",
													"nodeType": "YulBlock",
													"src": "1400:79:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "1457:16:4",
																"nodeType": "YulBlock",
																"src": "1457:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1466:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1466:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1469:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1469:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1459:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1459:6:4"
																			},
																			"nativeSrc": "1459:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1459:12:4"
																		},
																		"nativeSrc": "1459:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1459:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1423:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "1423:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1448:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "1448:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1430:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "1430:17:4"
																				},
																				"nativeSrc": "1430:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1430:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1420:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "1420:2:4"
																		},
																		"nativeSrc": "1420:35:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1420:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1413:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1413:6:4"
																},
																"nativeSrc": "1413:43:4",
																"nodeType": "YulFunctionCall",
																"src": "1413:43:4"
															},
															"nativeSrc": "1410:63:4",
															"nodeType": "YulIf",
															"src": "1410:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1357:122:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1393:5:4",
														"nodeType": "YulTypedName",
														"src": "1393:5:4",
														"type": ""
													}
												],
												"src": "1357:122:4"
											},
											{
												"body": {
													"nativeSrc": "1537:87:4",
													"nodeType": "YulBlock",
													"src": "1537:87:4",
													"statements": [
														{
															"nativeSrc": "1547:29:4",
															"nodeType": "YulAssignment",
															"src": "1547:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1569:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1569:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1556:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "1556:12:4"
																},
																"nativeSrc": "1556:20:4",
																"nodeType": "YulFunctionCall",
																"src": "1556:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1547:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "1547:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1612:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "1612:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1585:26:4",
																	"nodeType": "YulIdentifier",
																	"src": "1585:26:4"
																},
																"nativeSrc": "1585:33:4",
																"nodeType": "YulFunctionCall",
																"src": "1585:33:4"
															},
															"nativeSrc": "1585:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "1585:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1485:139:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1515:6:4",
														"nodeType": "YulTypedName",
														"src": "1515:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1523:3:4",
														"nodeType": "YulTypedName",
														"src": "1523:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1531:5:4",
														"nodeType": "YulTypedName",
														"src": "1531:5:4",
														"type": ""
													}
												],
												"src": "1485:139:4"
											},
											{
												"body": {
													"nativeSrc": "1768:877:4",
													"nodeType": "YulBlock",
													"src": "1768:877:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "1814:83:4",
																"nodeType": "YulBlock",
																"src": "1814:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1816:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "1816:77:4"
																			},
																			"nativeSrc": "1816:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1816:79:4"
																		},
																		"nativeSrc": "1816:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1816:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1789:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1789:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1798:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1798:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1785:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1785:3:4"
																		},
																		"nativeSrc": "1785:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1785:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1810:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1810:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1781:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1781:3:4"
																},
																"nativeSrc": "1781:32:4",
																"nodeType": "YulFunctionCall",
																"src": "1781:32:4"
															},
															"nativeSrc": "1778:119:4",
															"nodeType": "YulIf",
															"src": "1778:119:4"
														},
														{
															"nativeSrc": "1907:296:4",
															"nodeType": "YulBlock",
															"src": "1907:296:4",
															"statements": [
																{
																	"nativeSrc": "1922:45:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1922:45:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1953:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "1953:9:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1964:1:4",
																						"nodeType": "YulLiteral",
																						"src": "1964:1:4",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1949:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "1949:3:4"
																				},
																				"nativeSrc": "1949:17:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1949:17:4"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "1936:12:4",
																			"nodeType": "YulIdentifier",
																			"src": "1936:12:4"
																		},
																		"nativeSrc": "1936:31:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1936:31:4"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1926:6:4",
																			"nodeType": "YulTypedName",
																			"src": "1926:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "2014:83:4",
																		"nodeType": "YulBlock",
																		"src": "2014:83:4",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "2016:77:4",
																						"nodeType": "YulIdentifier",
																						"src": "2016:77:4"
																					},
																					"nativeSrc": "2016:79:4",
																					"nodeType": "YulFunctionCall",
																					"src": "2016:79:4"
																				},
																				"nativeSrc": "2016:79:4",
																				"nodeType": "YulExpressionStatement",
																				"src": "2016:79:4"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "1986:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1986:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1994:18:4",
																				"nodeType": "YulLiteral",
																				"src": "1994:18:4",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1983:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "1983:2:4"
																		},
																		"nativeSrc": "1983:30:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1983:30:4"
																	},
																	"nativeSrc": "1980:117:4",
																	"nodeType": "YulIf",
																	"src": "1980:117:4"
																},
																{
																	"nativeSrc": "2111:82:4",
																	"nodeType": "YulAssignment",
																	"src": "2111:82:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2165:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "2165:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2176:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "2176:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2161:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "2161:3:4"
																				},
																				"nativeSrc": "2161:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "2161:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2185:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "2185:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_calldata_ptr",
																			"nativeSrc": "2129:31:4",
																			"nodeType": "YulIdentifier",
																			"src": "2129:31:4"
																		},
																		"nativeSrc": "2129:64:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2129:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2111:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "2111:6:4"
																		},
																		{
																			"name": "value1",
																			"nativeSrc": "2119:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "2119:6:4"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2213:297:4",
															"nodeType": "YulBlock",
															"src": "2213:297:4",
															"statements": [
																{
																	"nativeSrc": "2228:46:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2228:46:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2259:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "2259:9:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2270:2:4",
																						"nodeType": "YulLiteral",
																						"src": "2270:2:4",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2255:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "2255:3:4"
																				},
																				"nativeSrc": "2255:18:4",
																				"nodeType": "YulFunctionCall",
																				"src": "2255:18:4"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "2242:12:4",
																			"nodeType": "YulIdentifier",
																			"src": "2242:12:4"
																		},
																		"nativeSrc": "2242:32:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2242:32:4"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2232:6:4",
																			"nodeType": "YulTypedName",
																			"src": "2232:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "2321:83:4",
																		"nodeType": "YulBlock",
																		"src": "2321:83:4",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "2323:77:4",
																						"nodeType": "YulIdentifier",
																						"src": "2323:77:4"
																					},
																					"nativeSrc": "2323:79:4",
																					"nodeType": "YulFunctionCall",
																					"src": "2323:79:4"
																				},
																				"nativeSrc": "2323:79:4",
																				"nodeType": "YulExpressionStatement",
																				"src": "2323:79:4"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2293:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "2293:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2301:18:4",
																				"nodeType": "YulLiteral",
																				"src": "2301:18:4",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "2290:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "2290:2:4"
																		},
																		"nativeSrc": "2290:30:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2290:30:4"
																	},
																	"nativeSrc": "2287:117:4",
																	"nodeType": "YulIf",
																	"src": "2287:117:4"
																},
																{
																	"nativeSrc": "2418:82:4",
																	"nodeType": "YulAssignment",
																	"src": "2418:82:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2472:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "2472:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2483:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "2483:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2468:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "2468:3:4"
																				},
																				"nativeSrc": "2468:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "2468:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2492:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "2492:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_calldata_ptr",
																			"nativeSrc": "2436:31:4",
																			"nodeType": "YulIdentifier",
																			"src": "2436:31:4"
																		},
																		"nativeSrc": "2436:64:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2436:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "2418:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "2418:6:4"
																		},
																		{
																			"name": "value3",
																			"nativeSrc": "2426:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "2426:6:4"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2520:118:4",
															"nodeType": "YulBlock",
															"src": "2520:118:4",
															"statements": [
																{
																	"nativeSrc": "2535:16:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2535:16:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2549:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2549:2:4",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2539:6:4",
																			"nodeType": "YulTypedName",
																			"src": "2539:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2565:63:4",
																	"nodeType": "YulAssignment",
																	"src": "2565:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2600:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "2600:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2611:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "2611:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2596:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "2596:3:4"
																				},
																				"nativeSrc": "2596:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "2596:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2620:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "2620:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2575:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "2575:20:4"
																		},
																		"nativeSrc": "2575:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2575:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "2565:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "2565:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes_calldata_ptrt_bytes_calldata_ptrt_uint256",
												"nativeSrc": "1630:1015:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1706:9:4",
														"nodeType": "YulTypedName",
														"src": "1706:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1717:7:4",
														"nodeType": "YulTypedName",
														"src": "1717:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1729:6:4",
														"nodeType": "YulTypedName",
														"src": "1729:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1737:6:4",
														"nodeType": "YulTypedName",
														"src": "1737:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1745:6:4",
														"nodeType": "YulTypedName",
														"src": "1745:6:4",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1753:6:4",
														"nodeType": "YulTypedName",
														"src": "1753:6:4",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "1761:6:4",
														"nodeType": "YulTypedName",
														"src": "1761:6:4",
														"type": ""
													}
												],
												"src": "1630:1015:4"
											},
											{
												"body": {
													"nativeSrc": "2696:32:4",
													"nodeType": "YulBlock",
													"src": "2696:32:4",
													"statements": [
														{
															"nativeSrc": "2706:16:4",
															"nodeType": "YulAssignment",
															"src": "2706:16:4",
															"value": {
																"name": "value",
																"nativeSrc": "2717:5:4",
																"nodeType": "YulIdentifier",
																"src": "2717:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2706:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "2706:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "2651:77:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2678:5:4",
														"nodeType": "YulTypedName",
														"src": "2678:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2688:7:4",
														"nodeType": "YulTypedName",
														"src": "2688:7:4",
														"type": ""
													}
												],
												"src": "2651:77:4"
											},
											{
												"body": {
													"nativeSrc": "2799:53:4",
													"nodeType": "YulBlock",
													"src": "2799:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2816:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "2816:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2839:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "2839:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "2821:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "2821:17:4"
																		},
																		"nativeSrc": "2821:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2821:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2809:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2809:6:4"
																},
																"nativeSrc": "2809:37:4",
																"nodeType": "YulFunctionCall",
																"src": "2809:37:4"
															},
															"nativeSrc": "2809:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "2809:37:4"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "2734:118:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2787:5:4",
														"nodeType": "YulTypedName",
														"src": "2787:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2794:3:4",
														"nodeType": "YulTypedName",
														"src": "2794:3:4",
														"type": ""
													}
												],
												"src": "2734:118:4"
											},
											{
												"body": {
													"nativeSrc": "2956:124:4",
													"nodeType": "YulBlock",
													"src": "2956:124:4",
													"statements": [
														{
															"nativeSrc": "2966:26:4",
															"nodeType": "YulAssignment",
															"src": "2966:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2978:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2978:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2989:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2989:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2974:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2974:3:4"
																},
																"nativeSrc": "2974:18:4",
																"nodeType": "YulFunctionCall",
																"src": "2974:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2966:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "2966:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3046:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "3046:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3059:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3059:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3070:1:4",
																				"nodeType": "YulLiteral",
																				"src": "3070:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3055:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3055:3:4"
																		},
																		"nativeSrc": "3055:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3055:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "3002:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "3002:43:4"
																},
																"nativeSrc": "3002:71:4",
																"nodeType": "YulFunctionCall",
																"src": "3002:71:4"
															},
															"nativeSrc": "3002:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "3002:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "2858:222:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2928:9:4",
														"nodeType": "YulTypedName",
														"src": "2928:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2940:6:4",
														"nodeType": "YulTypedName",
														"src": "2940:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2951:4:4",
														"nodeType": "YulTypedName",
														"src": "2951:4:4",
														"type": ""
													}
												],
												"src": "2858:222:4"
											},
											{
												"body": {
													"nativeSrc": "3114:152:4",
													"nodeType": "YulBlock",
													"src": "3114:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3131:1:4",
																		"nodeType": "YulLiteral",
																		"src": "3131:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3134:77:4",
																		"nodeType": "YulLiteral",
																		"src": "3134:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3124:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3124:6:4"
																},
																"nativeSrc": "3124:88:4",
																"nodeType": "YulFunctionCall",
																"src": "3124:88:4"
															},
															"nativeSrc": "3124:88:4",
															"nodeType": "YulExpressionStatement",
															"src": "3124:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3228:1:4",
																		"nodeType": "YulLiteral",
																		"src": "3228:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3231:4:4",
																		"nodeType": "YulLiteral",
																		"src": "3231:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3221:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3221:6:4"
																},
																"nativeSrc": "3221:15:4",
																"nodeType": "YulFunctionCall",
																"src": "3221:15:4"
															},
															"nativeSrc": "3221:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "3221:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3252:1:4",
																		"nodeType": "YulLiteral",
																		"src": "3252:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3255:4:4",
																		"nodeType": "YulLiteral",
																		"src": "3255:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3245:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3245:6:4"
																},
																"nativeSrc": "3245:15:4",
																"nodeType": "YulFunctionCall",
																"src": "3245:15:4"
															},
															"nativeSrc": "3245:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "3245:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "3086:180:4",
												"nodeType": "YulFunctionDefinition",
												"src": "3086:180:4"
											},
											{
												"body": {
													"nativeSrc": "3316:147:4",
													"nodeType": "YulBlock",
													"src": "3316:147:4",
													"statements": [
														{
															"nativeSrc": "3326:25:4",
															"nodeType": "YulAssignment",
															"src": "3326:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3349:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "3349:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3331:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "3331:17:4"
																},
																"nativeSrc": "3331:20:4",
																"nodeType": "YulFunctionCall",
																"src": "3331:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "3326:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "3326:1:4"
																}
															]
														},
														{
															"nativeSrc": "3360:25:4",
															"nodeType": "YulAssignment",
															"src": "3360:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "3383:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "3383:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3365:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "3365:17:4"
																},
																"nativeSrc": "3365:20:4",
																"nodeType": "YulFunctionCall",
																"src": "3365:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "3360:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "3360:1:4"
																}
															]
														},
														{
															"nativeSrc": "3394:16:4",
															"nodeType": "YulAssignment",
															"src": "3394:16:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3405:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "3405:1:4"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3408:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "3408:1:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3401:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3401:3:4"
																},
																"nativeSrc": "3401:9:4",
																"nodeType": "YulFunctionCall",
																"src": "3401:9:4"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3394:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3394:3:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3434:22:4",
																"nodeType": "YulBlock",
																"src": "3434:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3436:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "3436:16:4"
																			},
																			"nativeSrc": "3436:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "3436:18:4"
																		},
																		"nativeSrc": "3436:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "3436:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3426:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "3426:1:4"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "3429:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "3429:3:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3423:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "3423:2:4"
																},
																"nativeSrc": "3423:10:4",
																"nodeType": "YulFunctionCall",
																"src": "3423:10:4"
															},
															"nativeSrc": "3420:36:4",
															"nodeType": "YulIf",
															"src": "3420:36:4"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "3272:191:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3303:1:4",
														"nodeType": "YulTypedName",
														"src": "3303:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3306:1:4",
														"nodeType": "YulTypedName",
														"src": "3306:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "3312:3:4",
														"nodeType": "YulTypedName",
														"src": "3312:3:4",
														"type": ""
													}
												],
												"src": "3272:191:4"
											},
											{
												"body": {
													"nativeSrc": "3497:152:4",
													"nodeType": "YulBlock",
													"src": "3497:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3514:1:4",
																		"nodeType": "YulLiteral",
																		"src": "3514:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3517:77:4",
																		"nodeType": "YulLiteral",
																		"src": "3517:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3507:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3507:6:4"
																},
																"nativeSrc": "3507:88:4",
																"nodeType": "YulFunctionCall",
																"src": "3507:88:4"
															},
															"nativeSrc": "3507:88:4",
															"nodeType": "YulExpressionStatement",
															"src": "3507:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3611:1:4",
																		"nodeType": "YulLiteral",
																		"src": "3611:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3614:4:4",
																		"nodeType": "YulLiteral",
																		"src": "3614:4:4",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3604:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3604:6:4"
																},
																"nativeSrc": "3604:15:4",
																"nodeType": "YulFunctionCall",
																"src": "3604:15:4"
															},
															"nativeSrc": "3604:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "3604:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3635:1:4",
																		"nodeType": "YulLiteral",
																		"src": "3635:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3638:4:4",
																		"nodeType": "YulLiteral",
																		"src": "3638:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3628:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3628:6:4"
																},
																"nativeSrc": "3628:15:4",
																"nodeType": "YulFunctionCall",
																"src": "3628:15:4"
															},
															"nativeSrc": "3628:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "3628:15:4"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "3469:180:4",
												"nodeType": "YulFunctionDefinition",
												"src": "3469:180:4"
											},
											{
												"body": {
													"nativeSrc": "3689:142:4",
													"nodeType": "YulBlock",
													"src": "3689:142:4",
													"statements": [
														{
															"nativeSrc": "3699:25:4",
															"nodeType": "YulAssignment",
															"src": "3699:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3722:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "3722:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3704:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "3704:17:4"
																},
																"nativeSrc": "3704:20:4",
																"nodeType": "YulFunctionCall",
																"src": "3704:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "3699:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "3699:1:4"
																}
															]
														},
														{
															"nativeSrc": "3733:25:4",
															"nodeType": "YulAssignment",
															"src": "3733:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "3756:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "3756:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3738:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "3738:17:4"
																},
																"nativeSrc": "3738:20:4",
																"nodeType": "YulFunctionCall",
																"src": "3738:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "3733:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "3733:1:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3780:22:4",
																"nodeType": "YulBlock",
																"src": "3780:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "3782:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "3782:16:4"
																			},
																			"nativeSrc": "3782:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "3782:18:4"
																		},
																		"nativeSrc": "3782:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "3782:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "3777:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "3777:1:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3770:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3770:6:4"
																},
																"nativeSrc": "3770:9:4",
																"nodeType": "YulFunctionCall",
																"src": "3770:9:4"
															},
															"nativeSrc": "3767:35:4",
															"nodeType": "YulIf",
															"src": "3767:35:4"
														},
														{
															"nativeSrc": "3811:14:4",
															"nodeType": "YulAssignment",
															"src": "3811:14:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3820:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "3820:1:4"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3823:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "3823:1:4"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nativeSrc": "3816:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3816:3:4"
																},
																"nativeSrc": "3816:9:4",
																"nodeType": "YulFunctionCall",
																"src": "3816:9:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "3811:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "3811:1:4"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nativeSrc": "3655:176:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3678:1:4",
														"nodeType": "YulTypedName",
														"src": "3678:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3681:1:4",
														"nodeType": "YulTypedName",
														"src": "3681:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "3687:1:4",
														"nodeType": "YulTypedName",
														"src": "3687:1:4",
														"type": ""
													}
												],
												"src": "3655:176:4"
											},
											{
												"body": {
													"nativeSrc": "3882:149:4",
													"nodeType": "YulBlock",
													"src": "3882:149:4",
													"statements": [
														{
															"nativeSrc": "3892:25:4",
															"nodeType": "YulAssignment",
															"src": "3892:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3915:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "3915:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3897:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "3897:17:4"
																},
																"nativeSrc": "3897:20:4",
																"nodeType": "YulFunctionCall",
																"src": "3897:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "3892:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "3892:1:4"
																}
															]
														},
														{
															"nativeSrc": "3926:25:4",
															"nodeType": "YulAssignment",
															"src": "3926:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "3949:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "3949:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3931:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "3931:17:4"
																},
																"nativeSrc": "3931:20:4",
																"nodeType": "YulFunctionCall",
																"src": "3931:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "3926:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "3926:1:4"
																}
															]
														},
														{
															"nativeSrc": "3960:17:4",
															"nodeType": "YulAssignment",
															"src": "3960:17:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3972:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "3972:1:4"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3975:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "3975:1:4"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "3968:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3968:3:4"
																},
																"nativeSrc": "3968:9:4",
																"nodeType": "YulFunctionCall",
																"src": "3968:9:4"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "3960:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "3960:4:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4002:22:4",
																"nodeType": "YulBlock",
																"src": "4002:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4004:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "4004:16:4"
																			},
																			"nativeSrc": "4004:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "4004:18:4"
																		},
																		"nativeSrc": "4004:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "4004:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "3993:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "3993:4:4"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "3999:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "3999:1:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3990:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "3990:2:4"
																},
																"nativeSrc": "3990:11:4",
																"nodeType": "YulFunctionCall",
																"src": "3990:11:4"
															},
															"nativeSrc": "3987:37:4",
															"nodeType": "YulIf",
															"src": "3987:37:4"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "3837:194:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3868:1:4",
														"nodeType": "YulTypedName",
														"src": "3868:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3871:1:4",
														"nodeType": "YulTypedName",
														"src": "3871:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "3877:4:4",
														"nodeType": "YulTypedName",
														"src": "3877:4:4",
														"type": ""
													}
												],
												"src": "3837:194:4"
											},
											{
												"body": {
													"nativeSrc": "4085:362:4",
													"nodeType": "YulBlock",
													"src": "4085:362:4",
													"statements": [
														{
															"nativeSrc": "4095:25:4",
															"nodeType": "YulAssignment",
															"src": "4095:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4118:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "4118:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4100:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "4100:17:4"
																},
																"nativeSrc": "4100:20:4",
																"nodeType": "YulFunctionCall",
																"src": "4100:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "4095:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "4095:1:4"
																}
															]
														},
														{
															"nativeSrc": "4129:25:4",
															"nodeType": "YulAssignment",
															"src": "4129:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4152:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "4152:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4134:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "4134:17:4"
																},
																"nativeSrc": "4134:20:4",
																"nodeType": "YulFunctionCall",
																"src": "4134:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "4129:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "4129:1:4"
																}
															]
														},
														{
															"nativeSrc": "4163:28:4",
															"nodeType": "YulVariableDeclaration",
															"src": "4163:28:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4186:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "4186:1:4"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4189:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "4189:1:4"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4182:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4182:3:4"
																},
																"nativeSrc": "4182:9:4",
																"nodeType": "YulFunctionCall",
																"src": "4182:9:4"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "4167:11:4",
																	"nodeType": "YulTypedName",
																	"src": "4167:11:4",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4200:41:4",
															"nodeType": "YulAssignment",
															"src": "4200:41:4",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "4229:11:4",
																		"nodeType": "YulIdentifier",
																		"src": "4229:11:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4211:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "4211:17:4"
																},
																"nativeSrc": "4211:30:4",
																"nodeType": "YulFunctionCall",
																"src": "4211:30:4"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "4200:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "4200:7:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4418:22:4",
																"nodeType": "YulBlock",
																"src": "4418:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4420:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "4420:16:4"
																			},
																			"nativeSrc": "4420:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "4420:18:4"
																		},
																		"nativeSrc": "4420:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "4420:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "4351:1:4",
																						"nodeType": "YulIdentifier",
																						"src": "4351:1:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "4344:6:4",
																					"nodeType": "YulIdentifier",
																					"src": "4344:6:4"
																				},
																				"nativeSrc": "4344:9:4",
																				"nodeType": "YulFunctionCall",
																				"src": "4344:9:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "4374:1:4",
																						"nodeType": "YulIdentifier",
																						"src": "4374:1:4"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "4381:7:4",
																								"nodeType": "YulIdentifier",
																								"src": "4381:7:4"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "4390:1:4",
																								"nodeType": "YulIdentifier",
																								"src": "4390:1:4"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "4377:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "4377:3:4"
																						},
																						"nativeSrc": "4377:15:4",
																						"nodeType": "YulFunctionCall",
																						"src": "4377:15:4"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "4371:2:4",
																					"nodeType": "YulIdentifier",
																					"src": "4371:2:4"
																				},
																				"nativeSrc": "4371:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "4371:22:4"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "4324:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "4324:2:4"
																		},
																		"nativeSrc": "4324:83:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4324:83:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4304:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4304:6:4"
																},
																"nativeSrc": "4304:113:4",
																"nodeType": "YulFunctionCall",
																"src": "4304:113:4"
															},
															"nativeSrc": "4301:139:4",
															"nodeType": "YulIf",
															"src": "4301:139:4"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "4037:410:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4068:1:4",
														"nodeType": "YulTypedName",
														"src": "4068:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4071:1:4",
														"nodeType": "YulTypedName",
														"src": "4071:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "4077:7:4",
														"nodeType": "YulTypedName",
														"src": "4077:7:4",
														"type": ""
													}
												],
												"src": "4037:410:4"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_bytes_calldata_ptrt_bytes_calldata_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610029575f3560e01c806368f9dab21461002d575b5f80fd5b61004760048036038101906100429190610a98565b61005d565b6040516100549190610b41565b60405180910390f35b5f6100666109e3565b6100966010868690508989905061007d9190610b87565b6100879190610b87565b8261022e90919063ffffffff16565b506100ed85858080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f820116905080830192505050505050508261029690919063ffffffff16565b5061014487878080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f820116905080830192505050505050508261029690919063ffffffff16565b505f610152825f01516102b7565b90505f84111561021157610165826107c0565b5061017c5f60601b836107d690919063ffffffff16565b506101d388888080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f820116905080830192505050505050508361029690919063ffffffff16565b505f5b8481101561020f576101f35f83856108069092919063ffffffff16565b50610200835f01516102b7565b915080806001019150506101d6565b505b806bffffffffffffffffffffffff19169250505095945050505050565b6102366109e3565b5f6020836102449190610be7565b14610270576020826102569190610be7565b60206102629190610c17565b8261026d9190610b87565b91505b818360200181815250506040518084525f81528281016020016040525082905092915050565b61029e6109e3565b6102af83845f015151848551610833565b905092915050565b5f6040518251602084019350604067ffffffffffffffc0600183011601600982820310600181036102e9576040820191505b50776745230100efcdab890098badcfe001032547600c3d2e1f0610340565b5f838310156103395782820151905082840393506020841015610338576001846020036101000a03198082169150505b5b9392505050565b5f5b8281101561074057610355848289610308565b8552610365846020830189610308565b6020860152604081850310600181036103815760808286038701535b50604083038114600181036103a0576008850260208701511760208701525b5060405b608081101561042c5760408103860151603882038701511860208203870151600c830388015118187c010000000100000001000000010000000100000001000000010000000163800000008204167ffffffffefffffffefffffffefffffffefffffffefffffffefffffffefffffffe6002830216179050808288015250600c810190506103a4565b5060805b6101408110156104b957608081038601516070820387015118604082038701516018830388015118187c030000000300000003000000030000000300000003000000030000000363400000008204167ffffffffcfffffffcfffffffcfffffffcfffffffcfffffffcfffffffcfffffffc6004830216179050808288015250601881019050610430565b50815f805f5b605081101561071257601481045f81146104f0576001811461053a576002811461057757600381146105da57610613565b6501000000000085046a01000000000000000000008604189350836f01000000000000000000000000000000860416935083650100000000008604189350635a8279999250610613565b6a010000000000000000000085046f01000000000000000000000000000000860418935083650100000000008604189350636ed9eba19250610613565b6a010000000000000000000085046f01000000000000000000000000000000860417935083650100000000008604169350836a010000000000000000000086046f01000000000000000000000000000000870416179350638f1bbcdc9250610613565b6a010000000000000000000085046f0100000000000000000000000000000086041893508365010000000000860418935063ca62c1d692505b50601f770800000000000000000000000000000000000000000000008504168063ffffffe073080000000000000000000000000000000000000087041617905080840190508063ffffffff86160190508083019050807c0100000000000000000000000000000000000000000000000000000000600484028c0151040190507401000000000000000000000000000000000000000081026501000000000086041794506a0100000000000000000000633fffffff6a040000000000000000000087041663c00000006604000000000000880416170277ffffffff00ffffffff000000000000ffffffff00ffffffff8616179450506001810190506104bf565b5077ffffffff00ffffffff00ffffffff00ffffffff00ffffffff838601169450505050604081019050610342565b506c0100000000000000000000000063ffffffff821667ffffffff000000006101008404166bffffffff0000000000000000620100008504166fffffffff000000000000000000000000630100000086041673ffffffff000000000000000000000000000000006401000000008704161717171702945050505050919050565b6107c86109e3565b81515f815250819050919050565b6107de6109e3565b6107fe83845f015151846bffffffffffffffffffffffff1916601461091f565b905092915050565b61080e6109e3565b61082a8484846bffffffffffffffffffffffff1916601461091f565b90509392505050565b61083b6109e3565b8251821115610848575f80fd5b846020015182856108599190610b87565b111561088e5761088d85600261087e886020015188876108799190610b87565b6109a6565b6108889190610c4a565b6109c1565b5b5f808651805187602083010193508088870111156108ac5787860182525b60208701925050505b602084106108f357805182526020826108ce9190610b87565b91506020816108dd9190610b87565b90506020846108ec9190610c17565b93506108b5565b5f6001856020036101000a03905080198251168184511681811785525050508692505050949350505050565b6109276109e3565b846020015184836109389190610b87565b11156109605761095f85600286856109509190610b87565b61095a9190610c4a565b6109c1565b5b5f6001836101000a0390508260200360080284901c935085518386820101858319825116178152815185880111156109985784870182525b505050849050949350505050565b5f818311156109b7578290506109bb565b8190505b92915050565b5f825f015190506109d2838361022e565b506109dd8382610296565b50505050565b6040518060400160405280606081526020015f81525090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f8083601f840112610a2557610a24610a04565b5b8235905067ffffffffffffffff811115610a4257610a41610a08565b5b602083019150836001820283011115610a5e57610a5d610a0c565b5b9250929050565b5f819050919050565b610a7781610a65565b8114610a81575f80fd5b50565b5f81359050610a9281610a6e565b92915050565b5f805f805f60608688031215610ab157610ab06109fc565b5b5f86013567ffffffffffffffff811115610ace57610acd610a00565b5b610ada88828901610a10565b9550955050602086013567ffffffffffffffff811115610afd57610afc610a00565b5b610b0988828901610a10565b93509350506040610b1c88828901610a84565b9150509295509295909350565b5f819050919050565b610b3b81610b29565b82525050565b5f602082019050610b545f830184610b32565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610b9182610a65565b9150610b9c83610a65565b9250828201905080821115610bb457610bb3610b5a565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610bf182610a65565b9150610bfc83610a65565b925082610c0c57610c0b610bba565b5b828206905092915050565b5f610c2182610a65565b9150610c2c83610a65565b9250828203905081811115610c4457610c43610b5a565b5b92915050565b5f610c5482610a65565b9150610c5f83610a65565b9250828202610c6d81610a65565b91508282048414831517610c8457610c83610b5a565b5b509291505056fea264697066735822122079f3da78405e5c1155b2bec553f77db43202c89576aeab1f40f245f3a788a0d364736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x68F9DAB2 EQ PUSH2 0x2D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x47 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42 SWAP2 SWAP1 PUSH2 0xA98 JUMP JUMPDEST PUSH2 0x5D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54 SWAP2 SWAP1 PUSH2 0xB41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH2 0x66 PUSH2 0x9E3 JUMP JUMPDEST PUSH2 0x96 PUSH1 0x10 DUP7 DUP7 SWAP1 POP DUP10 DUP10 SWAP1 POP PUSH2 0x7D SWAP2 SWAP1 PUSH2 0xB87 JUMP JUMPDEST PUSH2 0x87 SWAP2 SWAP1 PUSH2 0xB87 JUMP JUMPDEST DUP3 PUSH2 0x22E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH2 0xED DUP6 DUP6 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP3 PUSH2 0x296 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH2 0x144 DUP8 DUP8 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP3 PUSH2 0x296 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH0 PUSH2 0x152 DUP3 PUSH0 ADD MLOAD PUSH2 0x2B7 JUMP JUMPDEST SWAP1 POP PUSH0 DUP5 GT ISZERO PUSH2 0x211 JUMPI PUSH2 0x165 DUP3 PUSH2 0x7C0 JUMP JUMPDEST POP PUSH2 0x17C PUSH0 PUSH1 0x60 SHL DUP4 PUSH2 0x7D6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH2 0x1D3 DUP9 DUP9 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP4 PUSH2 0x296 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x20F JUMPI PUSH2 0x1F3 PUSH0 DUP4 DUP6 PUSH2 0x806 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH2 0x200 DUP4 PUSH0 ADD MLOAD PUSH2 0x2B7 JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1D6 JUMP JUMPDEST POP JUMPDEST DUP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP3 POP POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x236 PUSH2 0x9E3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP4 PUSH2 0x244 SWAP2 SWAP1 PUSH2 0xBE7 JUMP JUMPDEST EQ PUSH2 0x270 JUMPI PUSH1 0x20 DUP3 PUSH2 0x256 SWAP2 SWAP1 PUSH2 0xBE7 JUMP JUMPDEST PUSH1 0x20 PUSH2 0x262 SWAP2 SWAP1 PUSH2 0xC17 JUMP JUMPDEST DUP3 PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xB87 JUMP JUMPDEST SWAP2 POP JUMPDEST DUP2 DUP4 PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x40 MLOAD DUP1 DUP5 MSTORE PUSH0 DUP2 MSTORE DUP3 DUP2 ADD PUSH1 0x20 ADD PUSH1 0x40 MSTORE POP DUP3 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x29E PUSH2 0x9E3 JUMP JUMPDEST PUSH2 0x2AF DUP4 DUP5 PUSH0 ADD MLOAD MLOAD DUP5 DUP6 MLOAD PUSH2 0x833 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP3 MLOAD PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x40 PUSH8 0xFFFFFFFFFFFFFFC0 PUSH1 0x1 DUP4 ADD AND ADD PUSH1 0x9 DUP3 DUP3 SUB LT PUSH1 0x1 DUP2 SUB PUSH2 0x2E9 JUMPI PUSH1 0x40 DUP3 ADD SWAP2 POP JUMPDEST POP PUSH24 0x6745230100EFCDAB890098BADCFE001032547600C3D2E1F0 PUSH2 0x340 JUMP JUMPDEST PUSH0 DUP4 DUP4 LT ISZERO PUSH2 0x339 JUMPI DUP3 DUP3 ADD MLOAD SWAP1 POP DUP3 DUP5 SUB SWAP4 POP PUSH1 0x20 DUP5 LT ISZERO PUSH2 0x338 JUMPI PUSH1 0x1 DUP5 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT DUP1 DUP3 AND SWAP2 POP POP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x740 JUMPI PUSH2 0x355 DUP5 DUP3 DUP10 PUSH2 0x308 JUMP JUMPDEST DUP6 MSTORE PUSH2 0x365 DUP5 PUSH1 0x20 DUP4 ADD DUP10 PUSH2 0x308 JUMP JUMPDEST PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP2 DUP6 SUB LT PUSH1 0x1 DUP2 SUB PUSH2 0x381 JUMPI PUSH1 0x80 DUP3 DUP7 SUB DUP8 ADD MSTORE8 JUMPDEST POP PUSH1 0x40 DUP4 SUB DUP2 EQ PUSH1 0x1 DUP2 SUB PUSH2 0x3A0 JUMPI PUSH1 0x8 DUP6 MUL PUSH1 0x20 DUP8 ADD MLOAD OR PUSH1 0x20 DUP8 ADD MSTORE JUMPDEST POP PUSH1 0x40 JUMPDEST PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x42C JUMPI PUSH1 0x40 DUP2 SUB DUP7 ADD MLOAD PUSH1 0x38 DUP3 SUB DUP8 ADD MLOAD XOR PUSH1 0x20 DUP3 SUB DUP8 ADD MLOAD PUSH1 0xC DUP4 SUB DUP9 ADD MLOAD XOR XOR PUSH29 0x100000001000000010000000100000001000000010000000100000001 PUSH4 0x80000000 DUP3 DIV AND PUSH32 0xFFFFFFFEFFFFFFFEFFFFFFFEFFFFFFFEFFFFFFFEFFFFFFFEFFFFFFFEFFFFFFFE PUSH1 0x2 DUP4 MUL AND OR SWAP1 POP DUP1 DUP3 DUP9 ADD MSTORE POP PUSH1 0xC DUP2 ADD SWAP1 POP PUSH2 0x3A4 JUMP JUMPDEST POP PUSH1 0x80 JUMPDEST PUSH2 0x140 DUP2 LT ISZERO PUSH2 0x4B9 JUMPI PUSH1 0x80 DUP2 SUB DUP7 ADD MLOAD PUSH1 0x70 DUP3 SUB DUP8 ADD MLOAD XOR PUSH1 0x40 DUP3 SUB DUP8 ADD MLOAD PUSH1 0x18 DUP4 SUB DUP9 ADD MLOAD XOR XOR PUSH29 0x300000003000000030000000300000003000000030000000300000003 PUSH4 0x40000000 DUP3 DIV AND PUSH32 0xFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFC PUSH1 0x4 DUP4 MUL AND OR SWAP1 POP DUP1 DUP3 DUP9 ADD MSTORE POP PUSH1 0x18 DUP2 ADD SWAP1 POP PUSH2 0x430 JUMP JUMPDEST POP DUP2 PUSH0 DUP1 PUSH0 JUMPDEST PUSH1 0x50 DUP2 LT ISZERO PUSH2 0x712 JUMPI PUSH1 0x14 DUP2 DIV PUSH0 DUP2 EQ PUSH2 0x4F0 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x53A JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x577 JUMPI PUSH1 0x3 DUP2 EQ PUSH2 0x5DA JUMPI PUSH2 0x613 JUMP JUMPDEST PUSH6 0x10000000000 DUP6 DIV PUSH11 0x100000000000000000000 DUP7 DIV XOR SWAP4 POP DUP4 PUSH16 0x1000000000000000000000000000000 DUP7 DIV AND SWAP4 POP DUP4 PUSH6 0x10000000000 DUP7 DIV XOR SWAP4 POP PUSH4 0x5A827999 SWAP3 POP PUSH2 0x613 JUMP JUMPDEST PUSH11 0x100000000000000000000 DUP6 DIV PUSH16 0x1000000000000000000000000000000 DUP7 DIV XOR SWAP4 POP DUP4 PUSH6 0x10000000000 DUP7 DIV XOR SWAP4 POP PUSH4 0x6ED9EBA1 SWAP3 POP PUSH2 0x613 JUMP JUMPDEST PUSH11 0x100000000000000000000 DUP6 DIV PUSH16 0x1000000000000000000000000000000 DUP7 DIV OR SWAP4 POP DUP4 PUSH6 0x10000000000 DUP7 DIV AND SWAP4 POP DUP4 PUSH11 0x100000000000000000000 DUP7 DIV PUSH16 0x1000000000000000000000000000000 DUP8 DIV AND OR SWAP4 POP PUSH4 0x8F1BBCDC SWAP3 POP PUSH2 0x613 JUMP JUMPDEST PUSH11 0x100000000000000000000 DUP6 DIV PUSH16 0x1000000000000000000000000000000 DUP7 DIV XOR SWAP4 POP DUP4 PUSH6 0x10000000000 DUP7 DIV XOR SWAP4 POP PUSH4 0xCA62C1D6 SWAP3 POP JUMPDEST POP PUSH1 0x1F PUSH24 0x80000000000000000000000000000000000000000000000 DUP6 DIV AND DUP1 PUSH4 0xFFFFFFE0 PUSH20 0x800000000000000000000000000000000000000 DUP8 DIV AND OR SWAP1 POP DUP1 DUP5 ADD SWAP1 POP DUP1 PUSH4 0xFFFFFFFF DUP7 AND ADD SWAP1 POP DUP1 DUP4 ADD SWAP1 POP DUP1 PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP5 MUL DUP13 ADD MLOAD DIV ADD SWAP1 POP PUSH21 0x10000000000000000000000000000000000000000 DUP2 MUL PUSH6 0x10000000000 DUP7 DIV OR SWAP5 POP PUSH11 0x100000000000000000000 PUSH4 0x3FFFFFFF PUSH11 0x400000000000000000000 DUP8 DIV AND PUSH4 0xC0000000 PUSH7 0x4000000000000 DUP9 DIV AND OR MUL PUSH24 0xFFFFFFFF00FFFFFFFF000000000000FFFFFFFF00FFFFFFFF DUP7 AND OR SWAP5 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x4BF JUMP JUMPDEST POP PUSH24 0xFFFFFFFF00FFFFFFFF00FFFFFFFF00FFFFFFFF00FFFFFFFF DUP4 DUP7 ADD AND SWAP5 POP POP POP POP PUSH1 0x40 DUP2 ADD SWAP1 POP PUSH2 0x342 JUMP JUMPDEST POP PUSH13 0x1000000000000000000000000 PUSH4 0xFFFFFFFF DUP3 AND PUSH8 0xFFFFFFFF00000000 PUSH2 0x100 DUP5 DIV AND PUSH12 0xFFFFFFFF0000000000000000 PUSH3 0x10000 DUP6 DIV AND PUSH16 0xFFFFFFFF000000000000000000000000 PUSH4 0x1000000 DUP7 DIV AND PUSH20 0xFFFFFFFF00000000000000000000000000000000 PUSH5 0x100000000 DUP8 DIV AND OR OR OR OR MUL SWAP5 POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7C8 PUSH2 0x9E3 JUMP JUMPDEST DUP2 MLOAD PUSH0 DUP2 MSTORE POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7DE PUSH2 0x9E3 JUMP JUMPDEST PUSH2 0x7FE DUP4 DUP5 PUSH0 ADD MLOAD MLOAD DUP5 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x14 PUSH2 0x91F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x80E PUSH2 0x9E3 JUMP JUMPDEST PUSH2 0x82A DUP5 DUP5 DUP5 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x14 PUSH2 0x91F JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x83B PUSH2 0x9E3 JUMP JUMPDEST DUP3 MLOAD DUP3 GT ISZERO PUSH2 0x848 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 PUSH1 0x20 ADD MLOAD DUP3 DUP6 PUSH2 0x859 SWAP2 SWAP1 PUSH2 0xB87 JUMP JUMPDEST GT ISZERO PUSH2 0x88E JUMPI PUSH2 0x88D DUP6 PUSH1 0x2 PUSH2 0x87E DUP9 PUSH1 0x20 ADD MLOAD DUP9 DUP8 PUSH2 0x879 SWAP2 SWAP1 PUSH2 0xB87 JUMP JUMPDEST PUSH2 0x9A6 JUMP JUMPDEST PUSH2 0x888 SWAP2 SWAP1 PUSH2 0xC4A JUMP JUMPDEST PUSH2 0x9C1 JUMP JUMPDEST JUMPDEST PUSH0 DUP1 DUP7 MLOAD DUP1 MLOAD DUP8 PUSH1 0x20 DUP4 ADD ADD SWAP4 POP DUP1 DUP9 DUP8 ADD GT ISZERO PUSH2 0x8AC JUMPI DUP8 DUP7 ADD DUP3 MSTORE JUMPDEST PUSH1 0x20 DUP8 ADD SWAP3 POP POP POP JUMPDEST PUSH1 0x20 DUP5 LT PUSH2 0x8F3 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 PUSH2 0x8CE SWAP2 SWAP1 PUSH2 0xB87 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP2 PUSH2 0x8DD SWAP2 SWAP1 PUSH2 0xB87 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP5 PUSH2 0x8EC SWAP2 SWAP1 PUSH2 0xC17 JUMP JUMPDEST SWAP4 POP PUSH2 0x8B5 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP6 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB SWAP1 POP DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP2 DUP2 OR DUP6 MSTORE POP POP POP DUP7 SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x927 PUSH2 0x9E3 JUMP JUMPDEST DUP5 PUSH1 0x20 ADD MLOAD DUP5 DUP4 PUSH2 0x938 SWAP2 SWAP1 PUSH2 0xB87 JUMP JUMPDEST GT ISZERO PUSH2 0x960 JUMPI PUSH2 0x95F DUP6 PUSH1 0x2 DUP7 DUP6 PUSH2 0x950 SWAP2 SWAP1 PUSH2 0xB87 JUMP JUMPDEST PUSH2 0x95A SWAP2 SWAP1 PUSH2 0xC4A JUMP JUMPDEST PUSH2 0x9C1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH1 0x1 DUP4 PUSH2 0x100 EXP SUB SWAP1 POP DUP3 PUSH1 0x20 SUB PUSH1 0x8 MUL DUP5 SWAP1 SHR SWAP4 POP DUP6 MLOAD DUP4 DUP7 DUP3 ADD ADD DUP6 DUP4 NOT DUP3 MLOAD AND OR DUP2 MSTORE DUP2 MLOAD DUP6 DUP9 ADD GT ISZERO PUSH2 0x998 JUMPI DUP5 DUP8 ADD DUP3 MSTORE JUMPDEST POP POP POP DUP5 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 GT ISZERO PUSH2 0x9B7 JUMPI DUP3 SWAP1 POP PUSH2 0x9BB JUMP JUMPDEST DUP2 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH0 ADD MLOAD SWAP1 POP PUSH2 0x9D2 DUP4 DUP4 PUSH2 0x22E JUMP JUMPDEST POP PUSH2 0x9DD DUP4 DUP3 PUSH2 0x296 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xA25 JUMPI PUSH2 0xA24 PUSH2 0xA04 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA42 JUMPI PUSH2 0xA41 PUSH2 0xA08 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xA5E JUMPI PUSH2 0xA5D PUSH2 0xA0C JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA77 DUP2 PUSH2 0xA65 JUMP JUMPDEST DUP2 EQ PUSH2 0xA81 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA92 DUP2 PUSH2 0xA6E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xAB1 JUMPI PUSH2 0xAB0 PUSH2 0x9FC JUMP JUMPDEST JUMPDEST PUSH0 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xACE JUMPI PUSH2 0xACD PUSH2 0xA00 JUMP JUMPDEST JUMPDEST PUSH2 0xADA DUP9 DUP3 DUP10 ADD PUSH2 0xA10 JUMP JUMPDEST SWAP6 POP SWAP6 POP POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xAFD JUMPI PUSH2 0xAFC PUSH2 0xA00 JUMP JUMPDEST JUMPDEST PUSH2 0xB09 DUP9 DUP3 DUP10 ADD PUSH2 0xA10 JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0x40 PUSH2 0xB1C DUP9 DUP3 DUP10 ADD PUSH2 0xA84 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB3B DUP2 PUSH2 0xB29 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB54 PUSH0 DUP4 ADD DUP5 PUSH2 0xB32 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xB91 DUP3 PUSH2 0xA65 JUMP JUMPDEST SWAP2 POP PUSH2 0xB9C DUP4 PUSH2 0xA65 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xBB4 JUMPI PUSH2 0xBB3 PUSH2 0xB5A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xBF1 DUP3 PUSH2 0xA65 JUMP JUMPDEST SWAP2 POP PUSH2 0xBFC DUP4 PUSH2 0xA65 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xC0C JUMPI PUSH2 0xC0B PUSH2 0xBBA JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC21 DUP3 PUSH2 0xA65 JUMP JUMPDEST SWAP2 POP PUSH2 0xC2C DUP4 PUSH2 0xA65 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xC44 JUMPI PUSH2 0xC43 PUSH2 0xB5A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC54 DUP3 PUSH2 0xA65 JUMP JUMPDEST SWAP2 POP PUSH2 0xC5F DUP4 PUSH2 0xA65 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xC6D DUP2 PUSH2 0xA65 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xC84 JUMPI PUSH2 0xC83 PUSH2 0xB5A JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0xF3DA78405E5C1155B2BEC553F77DB43202C89576AEAB1F40F245 RETURN 0xA7 DUP9 LOG0 0xD3 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "183:699:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;266:614;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;371:7;390:24;;:::i;:::-;424:40;461:2;447:4;;:11;;433:4;;:11;;:25;;;;:::i;:::-;:30;;;;:::i;:::-;424:3;:8;;:40;;;;:::i;:::-;;475:16;486:4;;475:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:3;:10;;:16;;;;:::i;:::-;;501;512:4;;501:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:3;:10;;:16;;;;:::i;:::-;;527:9;539:18;549:3;:7;;;539:9;:18::i;:::-;527:30;;584:1;571:10;:14;567:279;;;601:14;:3;:12;:14::i;:::-;;629:29;655:1;647:10;;629:3;:17;;:29;;;;:::i;:::-;;672:16;683:4;;672:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:3;:10;;:16;;;;:::i;:::-;;708:6;703:133;724:10;720:1;:14;703:133;;;759:22;776:1;779;759:3;:16;;:22;;;;;:::i;:::-;;803:18;813:3;:7;;;803:9;:18::i;:::-;799:22;;736:3;;;;;;;703:133;;;;567:279;871:1;863:10;;;856:17;;;;266:614;;;;;;;:::o;977:455:0:-;1047:13;;:::i;:::-;1093:1;1087:2;1076:8;:13;;;;:::i;:::-;:18;1072:81;;1139:2;1128:8;:13;;;;:::i;:::-;1122:2;:20;;;;:::i;:::-;1110:32;;;;;:::i;:::-;;;1072:81;1223:8;1208:3;:12;;:23;;;;;1281:4;1275:11;1311:3;1306;1299:16;1340:1;1335:3;1328:14;1385:8;1380:3;1376:18;1372:2;1368:27;1362:4;1355:41;1250:156;1422:3;1415:10;;977:455;;;;:::o;5001:161::-;5078:13;;:::i;:::-;5110:45;5116:3;5121;:7;;;:14;5137:4;5143;:11;5110:5;:45::i;:::-;5103:52;;5001:161;;;;:::o;74:5661:1:-;129:11;239:4;233:11;344:4;338:11;380:2;374:4;370:13;362:21;;500:2;479:18;475:1;470:3;466:11;462:36;458:45;546:1;540:3;530:8;526:18;523:25;566:1;561:40;;516:85;561:40;596:2;586:8;582:17;570:29;;516:85;;624:50;688:425;;;726:6;790:5;785:3;782:14;779:320;;;844:3;839;835:13;829:20;819:30;;890:3;883:5;879:15;870:24;;928:2;921:5;918:13;915:166;;;1004:1;995:5;991:2;987:14;982:3;978:24;974:32;970:37;1054:4;1046:6;1042:17;1032:27;;932:149;915:166;779:320;688:425;;;;;:::o;:::-;1142:1;1127:4284;1152:8;1149:1;1146:15;1127:4284;;;1216:22;1234:3;1231:1;1225:4;1216:22;:::i;:::-;1207:7;1200:39;1281:31;1308:3;1303:2;1300:1;1296:10;1290:4;1281:31;:::i;:::-;1276:2;1267:7;1263:16;1256:57;1427:2;1423:1;1418:3;1414:11;1411:19;1452:1;1447:51;;1404:94;1447:51;1491:4;1486:1;1481:3;1477:11;1468:7;1464:25;1456:40;1404:94;;1606:2;1596:8;1592:17;1589:1;1586:24;1632:1;1627:77;;1579:125;1627:77;1698:1;1693:3;1689:11;1683:2;1674:7;1670:16;1664:23;1661:40;1656:2;1647:7;1643:16;1636:66;1579:125;;1791:2;1776:512;1802:3;1799:1;1796:10;1776:512;;;1999:2;1996:1;1992:10;1983:7;1979:24;1973:31;1966:2;1963:1;1959:10;1950:7;1946:24;1940:31;1936:69;1928:2;1925:1;1921:10;1912:7;1908:24;1902:31;1895:2;1892:1;1888:10;1879:7;1875:24;1869:31;1865:69;1861:145;2152:66;2139:10;2133:4;2129:21;2125:94;2056:66;2052:1;2046:4;2042:12;2038:85;2035:185;2027:193;;2265:4;2261:1;2252:7;2248:15;2241:29;1827:461;1821:2;1818:1;1814:10;1809:15;;1776:512;;;1780:15;2320:3;2305:515;2332:3;2329:1;2326:10;2305:515;;;2530:3;2527:1;2523:11;2514:7;2510:25;2504:32;2496:3;2493:1;2489:11;2480:7;2476:25;2470:32;2466:71;2458:2;2455:1;2451:10;2442:7;2438:24;2432:31;2425:2;2422:1;2418:10;2409:7;2405:24;2399:31;2395:69;2391:147;2684:66;2671:10;2665:4;2661:21;2657:94;2588:66;2584:1;2578:4;2574:12;2570:85;2567:185;2559:193;;2797:4;2793:1;2784:7;2780:15;2773:29;2357:463;2351:2;2348:1;2344:10;2339:15;;2305:515;;;2309:16;2847:1;2874;2901;2934;2919:2389;2944:2;2941:1;2938:9;2919:2389;;;3003:2;3000:1;2996:10;3032:1;3027:352;;;;3405:1;3400:282;;;;3708:1;3703:414;;;;4143:1;4138:283;;;;2989:1432;;3027:352;3164:13;3161:1;3157:21;3131:23;3128:1;3124:31;3120:59;3115:64;;3256:1;3220:33;3217:1;3213:41;3209:49;3204:54;;3315:1;3299:13;3296:1;3292:21;3288:29;3283:34;;3347:10;3342:15;;3027:352;;3400:282;3536:23;3533:1;3529:31;3493:33;3490:1;3486:41;3482:79;3477:84;;3618:1;3602:13;3599:1;3595:21;3591:29;3586:34;;3650:10;3645:15;;3400:282;;3703:414;3855:23;3852:1;3848:31;3812:33;3809:1;3805:41;3802:78;3797:83;;3937:1;3921:13;3918:1;3914:21;3910:29;3905:34;;4053:1;4026:23;4023:1;4019:31;3983:33;3980:1;3976:41;3972:79;3969:86;3964:91;;4085:10;4080:15;;3703:414;;4138:283;4275:23;4272:1;4268:31;4232:33;4229:1;4225:41;4221:79;4216:84;;4357:1;4341:13;4338:1;4334:21;4330:29;4325:34;;4389:10;4384:15;;2989:1432;;4583:4;4531:49;4528:1;4524:57;4520:68;4688:4;4675:10;4631:41;4628:1;4624:49;4620:66;4617:76;4609:84;;4729:4;4726:1;4722:12;4714:20;;4787:4;4774:10;4771:1;4767:18;4763:29;4755:37;;4828:4;4825:1;4821:12;4813:20;;4964:4;4902:59;4896:1;4893;4889:9;4880:7;4876:23;4870:30;4866:96;4862:107;4854:115;;5031:43;5025:4;5021:54;5005:13;5002:1;4998:21;4995:81;4990:86;;5265:23;5251:10;5225:23;5222:1;5218:31;5214:48;5201:10;5183:15;5180:1;5176:23;5172:40;5169:94;5165:124;5112:50;5109:1;5105:58;5102:188;5097:193;;2967:2341;2962:1;2959;2955:9;2950:14;;2919:2389;;;2923:14;5346:50;5342:1;5339;5335:9;5331:66;5326:71;;1182:4229;;;1176:2;1173:1;1169:10;1164:15;;1127:4284;;;1131:14;5691:27;5677:10;5674:1;5670:18;5648;5640:5;5637:1;5633:13;5629:38;5599:26;5589:7;5586:1;5582:15;5578:48;5540:34;5528:9;5525:1;5521:17;5517:58;5472:42;5458:11;5455:1;5451:19;5447:68;5444:132;5441:186;5438:230;5435:254;5431:288;5424:295;;161:5568;;;;74:5661;;;:::o;2316:198:0:-;2376:13;;:::i;:::-;2444:3;2438:10;2476:1;2468:6;2461:17;2410:78;2504:3;2497:10;;2316:198;;;:::o;8596:163::-;8675:13;;:::i;:::-;8707:45;8713:3;8718;:7;;;:14;8742:4;8734:13;;;8749:2;8707:5;:45::i;:::-;8700:52;;8596:163;;;;:::o;8168:161::-;8256:13;;:::i;:::-;8288:34;8294:3;8299;8312:4;8304:13;;;8319:2;8288:5;:34::i;:::-;8281:41;;8168:161;;;;;:::o;2874:1382::-;2969:13;;:::i;:::-;3009:4;:11;3002:3;:18;;2994:27;;;;;;3048:3;:12;;;3042:3;3036;:9;;;;:::i;:::-;:24;3032:100;;;3076:45;3083:3;3119:1;3088:28;3092:3;:12;;;3112:3;3106;:9;;;;:::i;:::-;3088:3;:28::i;:::-;:32;;;;:::i;:::-;3076:6;:45::i;:::-;3032:100;3142:9;3161:8;3271:3;3265:10;3354:6;3348:13;3482:3;3477:2;3469:6;3465:15;3461:25;3453:33;;3578:6;3572:3;3567;3563:13;3560:25;3557:90;;;3628:3;3623;3619:13;3611:6;3604:29;3557:90;3677:2;3671:4;3667:13;3660:20;;3188:502;;3750:165;3764:2;3757:3;:9;3750:165;;3839:3;3833:10;3827:4;3820:24;3879:2;3871:10;;;;;:::i;:::-;;;3902:2;3895:9;;;;;:::i;:::-;;;3775:2;3768:9;;;;;:::i;:::-;;;3750:165;;;3981:9;4015:1;4007:3;4002:2;:8;3994:3;:17;3993:23;3981:35;;4092:4;4088:9;4082:3;4076:10;4072:26;4148:4;4141;4135:11;4131:22;4196:7;4186:8;4183:21;4177:4;4170:35;4039:180;;;4246:3;4239:10;;;;2874:1382;;;;;;:::o;6975:887::-;7064:13;;:::i;:::-;7105:3;:12;;;7099:3;7093;:9;;;;:::i;:::-;:24;7089:83;;;7133:28;7140:3;7159:1;7152:3;7146;:9;;;;:::i;:::-;7145:15;;;;:::i;:::-;7133:6;:28::i;:::-;7089:83;7206:9;7233:1;7226:3;7219;:10;7218:16;7206:28;;7306:3;7301:2;:8;7296:1;:14;7287:4;:24;;7280:31;;7425:3;7419:10;7560:3;7554;7546:6;7542:16;7538:26;7626:4;7618;7614:9;7607:4;7601:11;7597:27;7594:37;7588:4;7581:51;7734:6;7728:13;7722:3;7717;7713:13;7710:32;7707:105;;;7789:3;7784;7780:13;7772:6;7765:29;7707:105;7334:492;;;7852:3;7845:10;;6975:887;;;;;;:::o;2034:134::-;2084:4;2108:1;2104;:5;2100:44;;;2132:1;2125:8;;;;2100:44;2160:1;2153:8;;2034:134;;;;;:::o;1861:167::-;1934:19;1956:3;:7;;;1934:29;;1973:19;1978:3;1983:8;1973:4;:19::i;:::-;;2002;2009:3;2014:6;2002;:19::i;:::-;;1924:104;1861:167;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;:::o;88:117:4:-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:117;689:1;686;679:12;716:552;773:8;783:6;833:3;826:4;818:6;814:17;810:27;800:122;;841:79;;:::i;:::-;800:122;954:6;941:20;931:30;;984:18;976:6;973:30;970:117;;;1006:79;;:::i;:::-;970:117;1120:4;1112:6;1108:17;1096:29;;1174:3;1166:4;1158:6;1154:17;1144:8;1140:32;1137:41;1134:128;;;1181:79;;:::i;:::-;1134:128;716:552;;;;;:::o;1274:77::-;1311:7;1340:5;1329:16;;1274:77;;;:::o;1357:122::-;1430:24;1448:5;1430:24;:::i;:::-;1423:5;1420:35;1410:63;;1469:1;1466;1459:12;1410:63;1357:122;:::o;1485:139::-;1531:5;1569:6;1556:20;1547:29;;1585:33;1612:5;1585:33;:::i;:::-;1485:139;;;;:::o;1630:1015::-;1729:6;1737;1745;1753;1761;1810:2;1798:9;1789:7;1785:23;1781:32;1778:119;;;1816:79;;:::i;:::-;1778:119;1964:1;1953:9;1949:17;1936:31;1994:18;1986:6;1983:30;1980:117;;;2016:79;;:::i;:::-;1980:117;2129:64;2185:7;2176:6;2165:9;2161:22;2129:64;:::i;:::-;2111:82;;;;1907:296;2270:2;2259:9;2255:18;2242:32;2301:18;2293:6;2290:30;2287:117;;;2323:79;;:::i;:::-;2287:117;2436:64;2492:7;2483:6;2472:9;2468:22;2436:64;:::i;:::-;2418:82;;;;2213:297;2549:2;2575:53;2620:7;2611:6;2600:9;2596:22;2575:53;:::i;:::-;2565:63;;2520:118;1630:1015;;;;;;;;:::o;2651:77::-;2688:7;2717:5;2706:16;;2651:77;;;:::o;2734:118::-;2821:24;2839:5;2821:24;:::i;:::-;2816:3;2809:37;2734:118;;:::o;2858:222::-;2951:4;2989:2;2978:9;2974:18;2966:26;;3002:71;3070:1;3059:9;3055:17;3046:6;3002:71;:::i;:::-;2858:222;;;;:::o;3086:180::-;3134:77;3131:1;3124:88;3231:4;3228:1;3221:15;3255:4;3252:1;3245:15;3272:191;3312:3;3331:20;3349:1;3331:20;:::i;:::-;3326:25;;3365:20;3383:1;3365:20;:::i;:::-;3360:25;;3408:1;3405;3401:9;3394:16;;3429:3;3426:1;3423:10;3420:36;;;3436:18;;:::i;:::-;3420:36;3272:191;;;;:::o;3469:180::-;3517:77;3514:1;3507:88;3614:4;3611:1;3604:15;3638:4;3635:1;3628:15;3655:176;3687:1;3704:20;3722:1;3704:20;:::i;:::-;3699:25;;3738:20;3756:1;3738:20;:::i;:::-;3733:25;;3777:1;3767:35;;3782:18;;:::i;:::-;3767:35;3823:1;3820;3816:9;3811:14;;3655:176;;;;:::o;3837:194::-;3877:4;3897:20;3915:1;3897:20;:::i;:::-;3892:25;;3931:20;3949:1;3931:20;:::i;:::-;3926:25;;3975:1;3972;3968:9;3960:17;;3999:1;3993:4;3990:11;3987:37;;;4004:18;;:::i;:::-;3987:37;3837:194;;;;:::o;4037:410::-;4077:7;4100:20;4118:1;4100:20;:::i;:::-;4095:25;;4134:20;4152:1;4134:20;:::i;:::-;4129:25;;4189:1;4186;4182:9;4211:30;4229:11;4211:30;:::i;:::-;4200:41;;4390:1;4381:7;4377:15;4374:1;4371:22;4351:1;4344:9;4324:83;4301:139;;4420:18;;:::i;:::-;4301:139;4085:362;4037:410;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "653000",
								"executionCost": "687",
								"totalCost": "653687"
							},
							"external": {
								"hash(bytes,bytes,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 183,
									"end": 882,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 183,
									"end": 882,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 183,
									"end": 882,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 183,
									"end": 882,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 183,
									"end": 882,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 183,
									"end": 882,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 183,
									"end": 882,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 183,
									"end": 882,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 183,
									"end": 882,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 183,
									"end": 882,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 183,
									"end": 882,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 183,
									"end": 882,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 183,
									"end": 882,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 183,
									"end": 882,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 183,
									"end": 882,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 183,
									"end": 882,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 183,
									"end": 882,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 183,
									"end": 882,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 183,
									"end": 882,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 183,
									"end": 882,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 183,
									"end": 882,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122079f3da78405e5c1155b2bec553f77db43202c89576aeab1f40f245f3a788a0d364736f6c63430008180033",
									".code": [
										{
											"begin": 183,
											"end": 882,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 183,
											"end": 882,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 183,
											"end": 882,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 183,
											"end": 882,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 183,
											"end": 882,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 183,
											"end": 882,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 183,
											"end": 882,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 183,
											"end": 882,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 183,
											"end": 882,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 183,
											"end": 882,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 183,
											"end": 882,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 183,
											"end": 882,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 183,
											"end": 882,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 183,
											"end": 882,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 183,
											"end": 882,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 183,
											"end": 882,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 183,
											"end": 882,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 183,
											"end": 882,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 183,
											"end": 882,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 183,
											"end": 882,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 183,
											"end": 882,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 183,
											"end": 882,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 183,
											"end": 882,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 183,
											"end": 882,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 183,
											"end": 882,
											"name": "PUSH",
											"source": 3,
											"value": "68F9DAB2"
										},
										{
											"begin": 183,
											"end": 882,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 183,
											"end": 882,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 183,
											"end": 882,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 183,
											"end": 882,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 183,
											"end": 882,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 183,
											"end": 882,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 183,
											"end": 882,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 183,
											"end": 882,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 266,
											"end": 880,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 266,
											"end": 880,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 266,
											"end": 880,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 266,
											"end": 880,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 266,
											"end": 880,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 266,
											"end": 880,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 266,
											"end": 880,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 266,
											"end": 880,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 266,
											"end": 880,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 266,
											"end": 880,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 266,
											"end": 880,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 266,
											"end": 880,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 266,
											"end": 880,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 266,
											"end": 880,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 266,
											"end": 880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 266,
											"end": 880,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 266,
											"end": 880,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 266,
											"end": 880,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 266,
											"end": 880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 266,
											"end": 880,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 266,
											"end": 880,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 266,
											"end": 880,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 266,
											"end": 880,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 266,
											"end": 880,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 266,
											"end": 880,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 266,
											"end": 880,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 266,
											"end": 880,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 266,
											"end": 880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 266,
											"end": 880,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 266,
											"end": 880,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 266,
											"end": 880,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 266,
											"end": 880,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 266,
											"end": 880,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 266,
											"end": 880,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 266,
											"end": 880,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 266,
											"end": 880,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 266,
											"end": 880,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 266,
											"end": 880,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 266,
											"end": 880,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 390,
											"end": 414,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 390,
											"end": 414,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 390,
											"end": 414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 390,
											"end": 414,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 390,
											"end": 414,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 424,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 461,
											"end": 463,
											"name": "PUSH",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 447,
											"end": 451,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 447,
											"end": 451,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 447,
											"end": 458,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 447,
											"end": 458,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 433,
											"end": 437,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 433,
											"end": 437,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 433,
											"end": 444,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 433,
											"end": 444,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 433,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 433,
											"end": 458,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 433,
											"end": 458,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 433,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 433,
											"end": 458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 433,
											"end": 458,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 433,
											"end": 458,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 433,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 433,
											"end": 463,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 433,
											"end": 463,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 433,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 433,
											"end": 463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 433,
											"end": 463,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 433,
											"end": 463,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 424,
											"end": 427,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 424,
											"end": 432,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 424,
											"end": 432,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 424,
											"end": 464,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 424,
											"end": 464,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 424,
											"end": 464,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 424,
											"end": 464,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 424,
											"end": 464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 424,
											"end": 464,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 424,
											"end": 464,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 424,
											"end": 464,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 475,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 486,
											"end": 490,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 486,
											"end": 490,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 475,
											"end": 491,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 475,
											"end": 491,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 475,
											"end": 491,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 475,
											"end": 491,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 475,
											"end": 491,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 475,
											"end": 491,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 475,
											"end": 491,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 475,
											"end": 491,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 475,
											"end": 491,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 475,
											"end": 491,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 475,
											"end": 491,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 475,
											"end": 491,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 475,
											"end": 491,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 475,
											"end": 491,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 475,
											"end": 491,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 475,
											"end": 491,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 475,
											"end": 491,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 475,
											"end": 491,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 475,
											"end": 491,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 475,
											"end": 491,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 475,
											"end": 491,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 475,
											"end": 491,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 475,
											"end": 491,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 475,
											"end": 491,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 475,
											"end": 491,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 475,
											"end": 491,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 475,
											"end": 491,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 475,
											"end": 491,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 475,
											"end": 491,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 475,
											"end": 491,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 475,
											"end": 491,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 475,
											"end": 491,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 475,
											"end": 491,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 475,
											"end": 491,
											"name": "CALLDATACOPY",
											"source": 3
										},
										{
											"begin": 475,
											"end": 491,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 475,
											"end": 491,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 475,
											"end": 491,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 475,
											"end": 491,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 475,
											"end": 491,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 475,
											"end": 491,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 475,
											"end": 491,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 475,
											"end": 491,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 475,
											"end": 491,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 475,
											"end": 491,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 475,
											"end": 491,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 475,
											"end": 491,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 475,
											"end": 491,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 475,
											"end": 491,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 475,
											"end": 491,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 475,
											"end": 491,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 475,
											"end": 491,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 475,
											"end": 491,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 475,
											"end": 491,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 475,
											"end": 491,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 475,
											"end": 491,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 475,
											"end": 491,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 475,
											"end": 491,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 475,
											"end": 491,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 475,
											"end": 478,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 475,
											"end": 485,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 475,
											"end": 485,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 475,
											"end": 491,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 475,
											"end": 491,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 475,
											"end": 491,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 475,
											"end": 491,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 475,
											"end": 491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 475,
											"end": 491,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 475,
											"end": 491,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 475,
											"end": 491,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 501,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 512,
											"end": 516,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 512,
											"end": 516,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 501,
											"end": 517,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 501,
											"end": 517,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 501,
											"end": 517,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 501,
											"end": 517,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 501,
											"end": 517,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 501,
											"end": 517,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 501,
											"end": 517,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 501,
											"end": 517,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 501,
											"end": 517,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 501,
											"end": 517,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 501,
											"end": 517,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 501,
											"end": 517,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 501,
											"end": 517,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 501,
											"end": 517,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 501,
											"end": 517,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 501,
											"end": 517,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 501,
											"end": 517,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 501,
											"end": 517,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 501,
											"end": 517,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 501,
											"end": 517,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 501,
											"end": 517,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 501,
											"end": 517,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 501,
											"end": 517,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 501,
											"end": 517,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 501,
											"end": 517,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 501,
											"end": 517,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 501,
											"end": 517,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 501,
											"end": 517,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 501,
											"end": 517,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 501,
											"end": 517,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 501,
											"end": 517,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 501,
											"end": 517,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 501,
											"end": 517,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 501,
											"end": 517,
											"name": "CALLDATACOPY",
											"source": 3
										},
										{
											"begin": 501,
											"end": 517,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 501,
											"end": 517,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 501,
											"end": 517,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 501,
											"end": 517,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 501,
											"end": 517,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 501,
											"end": 517,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 501,
											"end": 517,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 501,
											"end": 517,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 501,
											"end": 517,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 501,
											"end": 517,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 501,
											"end": 517,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 501,
											"end": 517,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 501,
											"end": 517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 501,
											"end": 517,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 501,
											"end": 517,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 501,
											"end": 517,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 501,
											"end": 517,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 501,
											"end": 517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 501,
											"end": 517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 501,
											"end": 517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 501,
											"end": 517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 501,
											"end": 517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 501,
											"end": 517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 501,
											"end": 517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 501,
											"end": 504,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 501,
											"end": 511,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 501,
											"end": 511,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 501,
											"end": 517,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 501,
											"end": 517,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 501,
											"end": 517,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 501,
											"end": 517,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 501,
											"end": 517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 501,
											"end": 517,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 501,
											"end": 517,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 501,
											"end": 517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 527,
											"end": 536,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 539,
											"end": 557,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 549,
											"end": 552,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 549,
											"end": 556,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 549,
											"end": 556,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 549,
											"end": 556,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 539,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 539,
											"end": 557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 539,
											"end": 557,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 539,
											"end": 557,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 527,
											"end": 557,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 527,
											"end": 557,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 584,
											"end": 585,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 571,
											"end": 581,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 571,
											"end": 585,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 567,
											"end": 846,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 567,
											"end": 846,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 567,
											"end": 846,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 601,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 601,
											"end": 604,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 601,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 601,
											"end": 615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 601,
											"end": 615,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 601,
											"end": 615,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 601,
											"end": 615,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 629,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 655,
											"end": 656,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 647,
											"end": 657,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 647,
											"end": 657,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 629,
											"end": 632,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 629,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 629,
											"end": 646,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 629,
											"end": 658,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 629,
											"end": 658,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 629,
											"end": 658,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 629,
											"end": 658,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 629,
											"end": 658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 629,
											"end": 658,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 629,
											"end": 658,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 629,
											"end": 658,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 672,
											"end": 688,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 683,
											"end": 687,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 683,
											"end": 687,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 672,
											"end": 688,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 672,
											"end": 688,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 672,
											"end": 688,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 672,
											"end": 688,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 672,
											"end": 688,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 672,
											"end": 688,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 672,
											"end": 688,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 672,
											"end": 688,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 672,
											"end": 688,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 672,
											"end": 688,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 672,
											"end": 688,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 672,
											"end": 688,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 672,
											"end": 688,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 672,
											"end": 688,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 672,
											"end": 688,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 672,
											"end": 688,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 672,
											"end": 688,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 672,
											"end": 688,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 672,
											"end": 688,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 672,
											"end": 688,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 672,
											"end": 688,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 672,
											"end": 688,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 672,
											"end": 688,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 672,
											"end": 688,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 672,
											"end": 688,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 672,
											"end": 688,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 672,
											"end": 688,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 672,
											"end": 688,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 672,
											"end": 688,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 672,
											"end": 688,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 672,
											"end": 688,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 672,
											"end": 688,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 672,
											"end": 688,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 672,
											"end": 688,
											"name": "CALLDATACOPY",
											"source": 3
										},
										{
											"begin": 672,
											"end": 688,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 672,
											"end": 688,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 672,
											"end": 688,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 672,
											"end": 688,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 672,
											"end": 688,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 672,
											"end": 688,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 672,
											"end": 688,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 672,
											"end": 688,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 672,
											"end": 688,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 672,
											"end": 688,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 672,
											"end": 688,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 672,
											"end": 688,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 672,
											"end": 688,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 672,
											"end": 688,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 672,
											"end": 688,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 672,
											"end": 688,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 672,
											"end": 688,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 672,
											"end": 688,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 672,
											"end": 688,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 672,
											"end": 688,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 672,
											"end": 688,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 672,
											"end": 688,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 672,
											"end": 688,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 672,
											"end": 688,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 672,
											"end": 675,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 672,
											"end": 682,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 672,
											"end": 682,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 672,
											"end": 688,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 672,
											"end": 688,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 672,
											"end": 688,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 672,
											"end": 688,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 672,
											"end": 688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 672,
											"end": 688,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 672,
											"end": 688,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 672,
											"end": 688,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 708,
											"end": 714,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 703,
											"end": 836,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 703,
											"end": 836,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 724,
											"end": 734,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 720,
											"end": 721,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 720,
											"end": 734,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 703,
											"end": 836,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 703,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 703,
											"end": 836,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 759,
											"end": 781,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 776,
											"end": 777,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 779,
											"end": 780,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 759,
											"end": 762,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 759,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 759,
											"end": 775,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 781,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 759,
											"end": 781,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 759,
											"end": 781,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 759,
											"end": 781,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 759,
											"end": 781,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 759,
											"end": 781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 759,
											"end": 781,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 759,
											"end": 781,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 759,
											"end": 781,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 803,
											"end": 821,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 813,
											"end": 816,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 813,
											"end": 820,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 813,
											"end": 820,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 813,
											"end": 820,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 803,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 803,
											"end": 821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 803,
											"end": 821,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 803,
											"end": 821,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 799,
											"end": 821,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 799,
											"end": 821,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 736,
											"end": 739,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 736,
											"end": 739,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 736,
											"end": 739,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 736,
											"end": 739,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 736,
											"end": 739,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 736,
											"end": 739,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 736,
											"end": 739,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 703,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 703,
											"end": 836,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 703,
											"end": 836,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 703,
											"end": 836,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 703,
											"end": 836,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 567,
											"end": 846,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 567,
											"end": 846,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 871,
											"end": 872,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 863,
											"end": 873,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 863,
											"end": 873,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 863,
											"end": 873,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 856,
											"end": 873,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 856,
											"end": 873,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 856,
											"end": 873,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 856,
											"end": 873,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 266,
											"end": 880,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 266,
											"end": 880,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 266,
											"end": 880,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 266,
											"end": 880,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 266,
											"end": 880,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 266,
											"end": 880,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 266,
											"end": 880,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 266,
											"end": 880,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 977,
											"end": 1432,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 977,
											"end": 1432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1047,
											"end": 1060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1047,
											"end": 1060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1060,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1047,
											"end": 1060,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1094,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1087,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1076,
											"end": 1084,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1076,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1076,
											"end": 1089,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1076,
											"end": 1089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1076,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1076,
											"end": 1089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1076,
											"end": 1089,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1076,
											"end": 1089,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1076,
											"end": 1094,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1072,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1072,
											"end": 1153,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1141,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1128,
											"end": 1136,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1128,
											"end": 1141,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1141,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1128,
											"end": 1141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1141,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1128,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1122,
											"end": 1124,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1122,
											"end": 1142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1122,
											"end": 1142,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1122,
											"end": 1142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1122,
											"end": 1142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1122,
											"end": 1142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1122,
											"end": 1142,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1122,
											"end": 1142,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1110,
											"end": 1142,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1110,
											"end": 1142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1110,
											"end": 1142,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1110,
											"end": 1142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1110,
											"end": 1142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1110,
											"end": 1142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1110,
											"end": 1142,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1110,
											"end": 1142,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1110,
											"end": 1142,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1110,
											"end": 1142,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1072,
											"end": 1153,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1072,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1223,
											"end": 1231,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1208,
											"end": 1211,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1208,
											"end": 1220,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1208,
											"end": 1220,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1208,
											"end": 1231,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1208,
											"end": 1231,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1208,
											"end": 1231,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1208,
											"end": 1231,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1208,
											"end": 1231,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1281,
											"end": 1285,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1275,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1311,
											"end": 1314,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1306,
											"end": 1309,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1299,
											"end": 1315,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1340,
											"end": 1341,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1335,
											"end": 1338,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1328,
											"end": 1342,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1385,
											"end": 1393,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1380,
											"end": 1383,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1376,
											"end": 1394,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1372,
											"end": 1374,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1368,
											"end": 1395,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1366,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1355,
											"end": 1396,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1250,
											"end": 1406,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1425,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1415,
											"end": 1425,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1415,
											"end": 1425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 977,
											"end": 1432,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 977,
											"end": 1432,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 977,
											"end": 1432,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 977,
											"end": 1432,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 977,
											"end": 1432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5001,
											"end": 5162,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 5001,
											"end": 5162,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5091,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 5078,
											"end": 5091,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 5078,
											"end": 5091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5091,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 5078,
											"end": 5091,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5110,
											"end": 5155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 5116,
											"end": 5119,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5121,
											"end": 5124,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5121,
											"end": 5128,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5121,
											"end": 5128,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5121,
											"end": 5128,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5121,
											"end": 5135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5137,
											"end": 5141,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5143,
											"end": 5147,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5143,
											"end": 5154,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5110,
											"end": 5115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 5110,
											"end": 5155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5110,
											"end": 5155,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 5110,
											"end": 5155,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5103,
											"end": 5155,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5103,
											"end": 5155,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5001,
											"end": 5162,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5001,
											"end": 5162,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5001,
											"end": 5162,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5001,
											"end": 5162,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5001,
											"end": 5162,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 74,
											"end": 5735,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 74,
											"end": 5735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 129,
											"end": 140,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 239,
											"end": 243,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 244,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 344,
											"end": 348,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 338,
											"end": 349,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 380,
											"end": 382,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 374,
											"end": 378,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 370,
											"end": 383,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 362,
											"end": 383,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 362,
											"end": 383,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 500,
											"end": 502,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 479,
											"end": 497,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFC0"
										},
										{
											"begin": 475,
											"end": 476,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 470,
											"end": 473,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 466,
											"end": 477,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 462,
											"end": 498,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 458,
											"end": 503,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 546,
											"end": 547,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 540,
											"end": 543,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 530,
											"end": 538,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 526,
											"end": 544,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 523,
											"end": 548,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 566,
											"end": 567,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 561,
											"end": 601,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 561,
											"end": 601,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 516,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 561,
											"end": 601,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 596,
											"end": 598,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 586,
											"end": 594,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 582,
											"end": 599,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 570,
											"end": 599,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 570,
											"end": 599,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 516,
											"end": 601,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 516,
											"end": 601,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 516,
											"end": 601,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 624,
											"end": 674,
											"name": "PUSH",
											"source": 1,
											"value": "6745230100EFCDAB890098BADCFE001032547600C3D2E1F0"
										},
										{
											"begin": 688,
											"end": 1113,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 688,
											"end": 1113,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 688,
											"end": 1113,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 688,
											"end": 1113,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 726,
											"end": 732,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 790,
											"end": 795,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 785,
											"end": 788,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 782,
											"end": 796,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 779,
											"end": 1099,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 779,
											"end": 1099,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 779,
											"end": 1099,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 839,
											"end": 842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 835,
											"end": 848,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 829,
											"end": 849,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 819,
											"end": 849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 819,
											"end": 849,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 890,
											"end": 893,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 883,
											"end": 888,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 879,
											"end": 894,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 870,
											"end": 894,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 870,
											"end": 894,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 928,
											"end": 930,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 921,
											"end": 926,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 918,
											"end": 931,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 915,
											"end": 1081,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 915,
											"end": 1081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 915,
											"end": 1081,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1005,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 995,
											"end": 1000,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 991,
											"end": 993,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 987,
											"end": 1001,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 982,
											"end": 985,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 978,
											"end": 1002,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 974,
											"end": 1006,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 970,
											"end": 1007,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1054,
											"end": 1058,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1052,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1059,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1032,
											"end": 1059,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1032,
											"end": 1059,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 932,
											"end": 1081,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 915,
											"end": 1081,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 915,
											"end": 1081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 779,
											"end": 1099,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 779,
											"end": 1099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 688,
											"end": 1113,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 688,
											"end": 1113,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 688,
											"end": 1113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 688,
											"end": 1113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 688,
											"end": 1113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 688,
											"end": 1113,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 688,
											"end": 1113,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 688,
											"end": 1113,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1142,
											"end": 1143,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1127,
											"end": 5411,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1127,
											"end": 5411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1160,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1150,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 1161,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 5411,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 5411,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1127,
											"end": 5411,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1216,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1234,
											"end": 1237,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1231,
											"end": 1232,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1225,
											"end": 1229,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 1216,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1216,
											"end": 1238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1216,
											"end": 1238,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1216,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1207,
											"end": 1214,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1200,
											"end": 1239,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1281,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1308,
											"end": 1311,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1303,
											"end": 1305,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1300,
											"end": 1301,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1306,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1290,
											"end": 1294,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 1281,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1281,
											"end": 1312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1281,
											"end": 1312,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1281,
											"end": 1312,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1278,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1267,
											"end": 1274,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1263,
											"end": 1279,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1256,
											"end": 1313,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1423,
											"end": 1424,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1418,
											"end": 1421,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1425,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1411,
											"end": 1430,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1452,
											"end": 1453,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1447,
											"end": 1498,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1447,
											"end": 1498,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1447,
											"end": 1498,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1491,
											"end": 1495,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1486,
											"end": 1487,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1481,
											"end": 1484,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1477,
											"end": 1488,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1475,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1464,
											"end": 1489,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1456,
											"end": 1496,
											"name": "MSTORE8",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1498,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1404,
											"end": 1498,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1498,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1606,
											"end": 1608,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1596,
											"end": 1604,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1592,
											"end": 1609,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1589,
											"end": 1590,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1610,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1632,
											"end": 1633,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1627,
											"end": 1704,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1627,
											"end": 1704,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1704,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1627,
											"end": 1704,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1699,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1693,
											"end": 1696,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1689,
											"end": 1700,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1683,
											"end": 1685,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1674,
											"end": 1681,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1686,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1664,
											"end": 1687,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1661,
											"end": 1701,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1656,
											"end": 1658,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1647,
											"end": 1654,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1643,
											"end": 1659,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1636,
											"end": 1702,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1704,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1579,
											"end": 1704,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1704,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1791,
											"end": 1793,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1776,
											"end": 2288,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1776,
											"end": 2288,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1802,
											"end": 1805,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1799,
											"end": 1800,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1796,
											"end": 1806,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1776,
											"end": 2288,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1776,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1776,
											"end": 2288,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1999,
											"end": 2001,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1996,
											"end": 1997,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 1990,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1979,
											"end": 2003,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1973,
											"end": 2004,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1966,
											"end": 1968,
											"name": "PUSH",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1963,
											"end": 1964,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1959,
											"end": 1969,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 1957,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1946,
											"end": 1970,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1971,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1936,
											"end": 2005,
											"name": "XOR",
											"source": 1
										},
										{
											"begin": 1928,
											"end": 1930,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1925,
											"end": 1926,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 1931,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1912,
											"end": 1919,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1908,
											"end": 1932,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1902,
											"end": 1933,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1897,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 1892,
											"end": 1893,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1888,
											"end": 1898,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1879,
											"end": 1886,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 1875,
											"end": 1899,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1869,
											"end": 1900,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1865,
											"end": 1934,
											"name": "XOR",
											"source": 1
										},
										{
											"begin": 1861,
											"end": 2006,
											"name": "XOR",
											"source": 1
										},
										{
											"begin": 2152,
											"end": 2218,
											"name": "PUSH",
											"source": 1,
											"value": "100000001000000010000000100000001000000010000000100000001"
										},
										{
											"begin": 2139,
											"end": 2149,
											"name": "PUSH",
											"source": 1,
											"value": "80000000"
										},
										{
											"begin": 2133,
											"end": 2137,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2129,
											"end": 2150,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2125,
											"end": 2219,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2056,
											"end": 2122,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFEFFFFFFFEFFFFFFFEFFFFFFFEFFFFFFFEFFFFFFFEFFFFFFFEFFFFFFFE"
										},
										{
											"begin": 2052,
											"end": 2053,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2046,
											"end": 2050,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2042,
											"end": 2054,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2123,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2035,
											"end": 2220,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2220,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2027,
											"end": 2220,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 2269,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2262,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2252,
											"end": 2259,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 2248,
											"end": 2263,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2270,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1827,
											"end": 2288,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1821,
											"end": 1823,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 1818,
											"end": 1819,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1814,
											"end": 1824,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1809,
											"end": 1824,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1809,
											"end": 1824,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1776,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1776,
											"end": 2288,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1776,
											"end": 2288,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1776,
											"end": 2288,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1795,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2320,
											"end": 2323,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2305,
											"end": 2820,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2305,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2332,
											"end": 2335,
											"name": "PUSH",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 2329,
											"end": 2330,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2326,
											"end": 2336,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2305,
											"end": 2820,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2305,
											"end": 2820,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2305,
											"end": 2820,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2530,
											"end": 2533,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2527,
											"end": 2528,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2523,
											"end": 2534,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2514,
											"end": 2521,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2510,
											"end": 2535,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2504,
											"end": 2536,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2496,
											"end": 2499,
											"name": "PUSH",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2493,
											"end": 2494,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2489,
											"end": 2500,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2480,
											"end": 2487,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2476,
											"end": 2501,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2470,
											"end": 2502,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2466,
											"end": 2537,
											"name": "XOR",
											"source": 1
										},
										{
											"begin": 2458,
											"end": 2460,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2455,
											"end": 2456,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2461,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2442,
											"end": 2449,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2438,
											"end": 2462,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2432,
											"end": 2463,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2425,
											"end": 2427,
											"name": "PUSH",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2422,
											"end": 2423,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2418,
											"end": 2428,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2409,
											"end": 2416,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 2405,
											"end": 2429,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2399,
											"end": 2430,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2464,
											"name": "XOR",
											"source": 1
										},
										{
											"begin": 2391,
											"end": 2538,
											"name": "XOR",
											"source": 1
										},
										{
											"begin": 2684,
											"end": 2750,
											"name": "PUSH",
											"source": 1,
											"value": "300000003000000030000000300000003000000030000000300000003"
										},
										{
											"begin": 2671,
											"end": 2681,
											"name": "PUSH",
											"source": 1,
											"value": "40000000"
										},
										{
											"begin": 2665,
											"end": 2669,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2661,
											"end": 2682,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2657,
											"end": 2751,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2588,
											"end": 2654,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFC"
										},
										{
											"begin": 2584,
											"end": 2585,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2578,
											"end": 2582,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2574,
											"end": 2586,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 2655,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2752,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2559,
											"end": 2752,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2559,
											"end": 2752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2797,
											"end": 2801,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2793,
											"end": 2794,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2784,
											"end": 2791,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 2780,
											"end": 2795,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2773,
											"end": 2802,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2357,
											"end": 2820,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2353,
											"name": "PUSH",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2348,
											"end": 2349,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2344,
											"end": 2354,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2339,
											"end": 2354,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2339,
											"end": 2354,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2305,
											"end": 2820,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2305,
											"end": 2820,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2305,
											"end": 2820,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2305,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2309,
											"end": 2325,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2847,
											"end": 2848,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2874,
											"end": 2875,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2901,
											"end": 2902,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2934,
											"end": 2935,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2919,
											"end": 5308,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2919,
											"end": 5308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2944,
											"end": 2946,
											"name": "PUSH",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 2941,
											"end": 2942,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2938,
											"end": 2947,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2919,
											"end": 5308,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2919,
											"end": 5308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2919,
											"end": 5308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3003,
											"end": 3005,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 3000,
											"end": 3001,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2996,
											"end": 3006,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3032,
											"end": 3033,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3027,
											"end": 3379,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3027,
											"end": 3379,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3027,
											"end": 3379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 3027,
											"end": 3379,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3406,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3400,
											"end": 3682,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3400,
											"end": 3682,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3400,
											"end": 3682,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 3400,
											"end": 3682,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3709,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3703,
											"end": 4117,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3703,
											"end": 4117,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3703,
											"end": 4117,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 3703,
											"end": 4117,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4144,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 4138,
											"end": 4421,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4138,
											"end": 4421,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4138,
											"end": 4421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 4138,
											"end": 4421,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 4421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2989,
											"end": 4421,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3027,
											"end": 3379,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 3027,
											"end": 3379,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3164,
											"end": 3177,
											"name": "PUSH",
											"source": 1,
											"value": "10000000000"
										},
										{
											"begin": 3161,
											"end": 3162,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3178,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3131,
											"end": 3154,
											"name": "PUSH",
											"source": 1,
											"value": "100000000000000000000"
										},
										{
											"begin": 3128,
											"end": 3129,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3124,
											"end": 3155,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3120,
											"end": 3179,
											"name": "XOR",
											"source": 1
										},
										{
											"begin": 3115,
											"end": 3179,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3115,
											"end": 3179,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3256,
											"end": 3257,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3220,
											"end": 3253,
											"name": "PUSH",
											"source": 1,
											"value": "1000000000000000000000000000000"
										},
										{
											"begin": 3217,
											"end": 3218,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3254,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3209,
											"end": 3258,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3204,
											"end": 3258,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3204,
											"end": 3258,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3316,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3312,
											"name": "PUSH",
											"source": 1,
											"value": "10000000000"
										},
										{
											"begin": 3296,
											"end": 3297,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3292,
											"end": 3313,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3288,
											"end": 3317,
											"name": "XOR",
											"source": 1
										},
										{
											"begin": 3283,
											"end": 3317,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3283,
											"end": 3317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3347,
											"end": 3357,
											"name": "PUSH",
											"source": 1,
											"value": "5A827999"
										},
										{
											"begin": 3342,
											"end": 3357,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3342,
											"end": 3357,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3027,
											"end": 3379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 3027,
											"end": 3379,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3400,
											"end": 3682,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 3400,
											"end": 3682,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3536,
											"end": 3559,
											"name": "PUSH",
											"source": 1,
											"value": "100000000000000000000"
										},
										{
											"begin": 3533,
											"end": 3534,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3529,
											"end": 3560,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3526,
											"name": "PUSH",
											"source": 1,
											"value": "1000000000000000000000000000000"
										},
										{
											"begin": 3490,
											"end": 3491,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3486,
											"end": 3527,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3482,
											"end": 3561,
											"name": "XOR",
											"source": 1
										},
										{
											"begin": 3477,
											"end": 3561,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3477,
											"end": 3561,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3618,
											"end": 3619,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3602,
											"end": 3615,
											"name": "PUSH",
											"source": 1,
											"value": "10000000000"
										},
										{
											"begin": 3599,
											"end": 3600,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3595,
											"end": 3616,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3620,
											"name": "XOR",
											"source": 1
										},
										{
											"begin": 3586,
											"end": 3620,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3586,
											"end": 3620,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3650,
											"end": 3660,
											"name": "PUSH",
											"source": 1,
											"value": "6ED9EBA1"
										},
										{
											"begin": 3645,
											"end": 3660,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3645,
											"end": 3660,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3400,
											"end": 3682,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 3400,
											"end": 3682,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3703,
											"end": 4117,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 3703,
											"end": 4117,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3855,
											"end": 3878,
											"name": "PUSH",
											"source": 1,
											"value": "100000000000000000000"
										},
										{
											"begin": 3852,
											"end": 3853,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3848,
											"end": 3879,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3812,
											"end": 3845,
											"name": "PUSH",
											"source": 1,
											"value": "1000000000000000000000000000000"
										},
										{
											"begin": 3809,
											"end": 3810,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3805,
											"end": 3846,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3802,
											"end": 3880,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3797,
											"end": 3880,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3797,
											"end": 3880,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3937,
											"end": 3938,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3921,
											"end": 3934,
											"name": "PUSH",
											"source": 1,
											"value": "10000000000"
										},
										{
											"begin": 3918,
											"end": 3919,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3914,
											"end": 3935,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3910,
											"end": 3939,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3905,
											"end": 3939,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3905,
											"end": 3939,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4053,
											"end": 4054,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4026,
											"end": 4049,
											"name": "PUSH",
											"source": 1,
											"value": "100000000000000000000"
										},
										{
											"begin": 4023,
											"end": 4024,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4019,
											"end": 4050,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3983,
											"end": 4016,
											"name": "PUSH",
											"source": 1,
											"value": "1000000000000000000000000000000"
										},
										{
											"begin": 3980,
											"end": 3981,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4017,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3972,
											"end": 4051,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3969,
											"end": 4055,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3964,
											"end": 4055,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3964,
											"end": 4055,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4085,
											"end": 4095,
											"name": "PUSH",
											"source": 1,
											"value": "8F1BBCDC"
										},
										{
											"begin": 4080,
											"end": 4095,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4080,
											"end": 4095,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3703,
											"end": 4117,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 3703,
											"end": 4117,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4138,
											"end": 4421,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 4138,
											"end": 4421,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4275,
											"end": 4298,
											"name": "PUSH",
											"source": 1,
											"value": "100000000000000000000"
										},
										{
											"begin": 4272,
											"end": 4273,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4268,
											"end": 4299,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4232,
											"end": 4265,
											"name": "PUSH",
											"source": 1,
											"value": "1000000000000000000000000000000"
										},
										{
											"begin": 4229,
											"end": 4230,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4266,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4221,
											"end": 4300,
											"name": "XOR",
											"source": 1
										},
										{
											"begin": 4216,
											"end": 4300,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4216,
											"end": 4300,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4358,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4341,
											"end": 4354,
											"name": "PUSH",
											"source": 1,
											"value": "10000000000"
										},
										{
											"begin": 4338,
											"end": 4339,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4334,
											"end": 4355,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4330,
											"end": 4359,
											"name": "XOR",
											"source": 1
										},
										{
											"begin": 4325,
											"end": 4359,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4325,
											"end": 4359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4389,
											"end": 4399,
											"name": "PUSH",
											"source": 1,
											"value": "CA62C1D6"
										},
										{
											"begin": 4384,
											"end": 4399,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4384,
											"end": 4399,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 4421,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2989,
											"end": 4421,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2989,
											"end": 4421,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4583,
											"end": 4587,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4531,
											"end": 4580,
											"name": "PUSH",
											"source": 1,
											"value": "80000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4528,
											"end": 4529,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4524,
											"end": 4581,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4520,
											"end": 4588,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4688,
											"end": 4692,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4675,
											"end": 4685,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFE0"
										},
										{
											"begin": 4631,
											"end": 4672,
											"name": "PUSH",
											"source": 1,
											"value": "800000000000000000000000000000000000000"
										},
										{
											"begin": 4628,
											"end": 4629,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4624,
											"end": 4673,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4620,
											"end": 4686,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4617,
											"end": 4693,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 4609,
											"end": 4693,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4609,
											"end": 4693,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4729,
											"end": 4733,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4727,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4722,
											"end": 4734,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4714,
											"end": 4734,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4714,
											"end": 4734,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4791,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4774,
											"end": 4784,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4771,
											"end": 4772,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4767,
											"end": 4785,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4763,
											"end": 4792,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4755,
											"end": 4792,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4755,
											"end": 4792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4828,
											"end": 4832,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4825,
											"end": 4826,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4821,
											"end": 4833,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4813,
											"end": 4833,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4813,
											"end": 4833,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4964,
											"end": 4968,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4961,
											"name": "PUSH",
											"source": 1,
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4896,
											"end": 4897,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4893,
											"end": 4894,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4889,
											"end": 4898,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4880,
											"end": 4887,
											"name": "DUP13",
											"source": 1
										},
										{
											"begin": 4876,
											"end": 4899,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4870,
											"end": 4900,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4866,
											"end": 4962,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4862,
											"end": 4969,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4854,
											"end": 4969,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4854,
											"end": 4969,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5031,
											"end": 5074,
											"name": "PUSH",
											"source": 1,
											"value": "10000000000000000000000000000000000000000"
										},
										{
											"begin": 5025,
											"end": 5029,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5021,
											"end": 5075,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5005,
											"end": 5018,
											"name": "PUSH",
											"source": 1,
											"value": "10000000000"
										},
										{
											"begin": 5002,
											"end": 5003,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5019,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4995,
											"end": 5076,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 4990,
											"end": 5076,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4990,
											"end": 5076,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5265,
											"end": 5288,
											"name": "PUSH",
											"source": 1,
											"value": "100000000000000000000"
										},
										{
											"begin": 5251,
											"end": 5261,
											"name": "PUSH",
											"source": 1,
											"value": "3FFFFFFF"
										},
										{
											"begin": 5225,
											"end": 5248,
											"name": "PUSH",
											"source": 1,
											"value": "400000000000000000000"
										},
										{
											"begin": 5222,
											"end": 5223,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5218,
											"end": 5249,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 5214,
											"end": 5262,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5201,
											"end": 5211,
											"name": "PUSH",
											"source": 1,
											"value": "C0000000"
										},
										{
											"begin": 5183,
											"end": 5198,
											"name": "PUSH",
											"source": 1,
											"value": "4000000000000"
										},
										{
											"begin": 5180,
											"end": 5181,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5176,
											"end": 5199,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 5172,
											"end": 5212,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5169,
											"end": 5263,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5165,
											"end": 5289,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5112,
											"end": 5162,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF00FFFFFFFF000000000000FFFFFFFF00FFFFFFFF"
										},
										{
											"begin": 5109,
											"end": 5110,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5105,
											"end": 5163,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5102,
											"end": 5290,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5290,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5290,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2967,
											"end": 5308,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2962,
											"end": 2963,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2959,
											"end": 2960,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2955,
											"end": 2964,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 2964,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 2964,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2919,
											"end": 5308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2919,
											"end": 5308,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2919,
											"end": 5308,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2919,
											"end": 5308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2923,
											"end": 2937,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5346,
											"end": 5396,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF00FFFFFFFF00FFFFFFFF00FFFFFFFF00FFFFFFFF"
										},
										{
											"begin": 5342,
											"end": 5343,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5339,
											"end": 5340,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5335,
											"end": 5344,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5331,
											"end": 5397,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5326,
											"end": 5397,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5326,
											"end": 5397,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1182,
											"end": 5411,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1182,
											"end": 5411,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1182,
											"end": 5411,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1178,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1173,
											"end": 1174,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1169,
											"end": 1179,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1164,
											"end": 1179,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1164,
											"end": 1179,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 5411,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1127,
											"end": 5411,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 5411,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1127,
											"end": 5411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1131,
											"end": 1145,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5691,
											"end": 5718,
											"name": "PUSH",
											"source": 1,
											"value": "1000000000000000000000000"
										},
										{
											"begin": 5677,
											"end": 5687,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5674,
											"end": 5675,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5670,
											"end": 5688,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5648,
											"end": 5666,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF00000000"
										},
										{
											"begin": 5640,
											"end": 5645,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5637,
											"end": 5638,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5633,
											"end": 5646,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 5629,
											"end": 5667,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5599,
											"end": 5625,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF0000000000000000"
										},
										{
											"begin": 5589,
											"end": 5596,
											"name": "PUSH",
											"source": 1,
											"value": "10000"
										},
										{
											"begin": 5586,
											"end": 5587,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5582,
											"end": 5597,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 5578,
											"end": 5626,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5540,
											"end": 5574,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF000000000000000000000000"
										},
										{
											"begin": 5528,
											"end": 5537,
											"name": "PUSH",
											"source": 1,
											"value": "1000000"
										},
										{
											"begin": 5525,
											"end": 5526,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5521,
											"end": 5538,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5575,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5472,
											"end": 5514,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF00000000000000000000000000000000"
										},
										{
											"begin": 5458,
											"end": 5469,
											"name": "PUSH",
											"source": 1,
											"value": "100000000"
										},
										{
											"begin": 5455,
											"end": 5456,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5451,
											"end": 5470,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 5447,
											"end": 5515,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5444,
											"end": 5576,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5441,
											"end": 5627,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5438,
											"end": 5668,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5435,
											"end": 5689,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5431,
											"end": 5719,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5424,
											"end": 5719,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5424,
											"end": 5719,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 161,
											"end": 5729,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 161,
											"end": 5729,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 161,
											"end": 5729,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 161,
											"end": 5729,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 74,
											"end": 5735,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 74,
											"end": 5735,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 74,
											"end": 5735,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 74,
											"end": 5735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2316,
											"end": 2514,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2316,
											"end": 2514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2376,
											"end": 2389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2376,
											"end": 2389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2376,
											"end": 2389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2376,
											"end": 2389,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2376,
											"end": 2389,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2444,
											"end": 2447,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2438,
											"end": 2448,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2476,
											"end": 2477,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2468,
											"end": 2474,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2461,
											"end": 2478,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2488,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2507,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2497,
											"end": 2507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2497,
											"end": 2507,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2316,
											"end": 2514,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2316,
											"end": 2514,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2316,
											"end": 2514,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2316,
											"end": 2514,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8596,
											"end": 8759,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 8596,
											"end": 8759,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8675,
											"end": 8688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 8675,
											"end": 8688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 8675,
											"end": 8688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8675,
											"end": 8688,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 8675,
											"end": 8688,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8707,
											"end": 8752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 8713,
											"end": 8716,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8718,
											"end": 8721,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8718,
											"end": 8725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8718,
											"end": 8725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8718,
											"end": 8725,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8718,
											"end": 8732,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8742,
											"end": 8746,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8734,
											"end": 8747,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8734,
											"end": 8747,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 8734,
											"end": 8747,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8749,
											"end": 8751,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 8707,
											"end": 8712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 8707,
											"end": 8752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8707,
											"end": 8752,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 8707,
											"end": 8752,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8700,
											"end": 8752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8700,
											"end": 8752,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8596,
											"end": 8759,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8596,
											"end": 8759,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8596,
											"end": 8759,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8596,
											"end": 8759,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8596,
											"end": 8759,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8168,
											"end": 8329,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 8168,
											"end": 8329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8256,
											"end": 8269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 8256,
											"end": 8269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 8256,
											"end": 8269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8256,
											"end": 8269,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 8256,
											"end": 8269,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8288,
											"end": 8322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 8294,
											"end": 8297,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8299,
											"end": 8302,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8316,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8304,
											"end": 8317,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8304,
											"end": 8317,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 8304,
											"end": 8317,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8319,
											"end": 8321,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 8288,
											"end": 8293,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 8288,
											"end": 8322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8288,
											"end": 8322,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 8288,
											"end": 8322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8281,
											"end": 8322,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8281,
											"end": 8322,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8168,
											"end": 8329,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8168,
											"end": 8329,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8168,
											"end": 8329,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8168,
											"end": 8329,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8168,
											"end": 8329,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8168,
											"end": 8329,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2874,
											"end": 4256,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2874,
											"end": 4256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2969,
											"end": 2982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2969,
											"end": 2982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2969,
											"end": 2982,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2969,
											"end": 2982,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3009,
											"end": 3013,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3009,
											"end": 3020,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3002,
											"end": 3005,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3002,
											"end": 3020,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3002,
											"end": 3020,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2994,
											"end": 3021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2994,
											"end": 3021,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2994,
											"end": 3021,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2994,
											"end": 3021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2994,
											"end": 3021,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2994,
											"end": 3021,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2994,
											"end": 3021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3048,
											"end": 3051,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3048,
											"end": 3060,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3048,
											"end": 3060,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3048,
											"end": 3060,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3045,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3036,
											"end": 3039,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3036,
											"end": 3045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3036,
											"end": 3045,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3036,
											"end": 3045,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3036,
											"end": 3045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 3036,
											"end": 3045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3036,
											"end": 3045,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3036,
											"end": 3045,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3036,
											"end": 3060,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3032,
											"end": 3132,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3032,
											"end": 3132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 3032,
											"end": 3132,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 3083,
											"end": 3086,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3119,
											"end": 3120,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3088,
											"end": 3116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3092,
											"end": 3095,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 3092,
											"end": 3104,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3092,
											"end": 3104,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3092,
											"end": 3104,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3112,
											"end": 3115,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 3106,
											"end": 3109,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3106,
											"end": 3115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3106,
											"end": 3115,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3106,
											"end": 3115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3106,
											"end": 3115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 3106,
											"end": 3115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3106,
											"end": 3115,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3106,
											"end": 3115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3088,
											"end": 3091,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3088,
											"end": 3116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3088,
											"end": 3116,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3088,
											"end": 3116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3088,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 3088,
											"end": 3120,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3088,
											"end": 3120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3088,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 3088,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3088,
											"end": 3120,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 3088,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 3076,
											"end": 3121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3121,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 3076,
											"end": 3121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3032,
											"end": 3132,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 3032,
											"end": 3132,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3142,
											"end": 3151,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3161,
											"end": 3169,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3271,
											"end": 3274,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3275,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3354,
											"end": 3360,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3348,
											"end": 3361,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3482,
											"end": 3485,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3477,
											"end": 3479,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3469,
											"end": 3475,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3465,
											"end": 3480,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3461,
											"end": 3486,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3453,
											"end": 3486,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3453,
											"end": 3486,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3578,
											"end": 3584,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3572,
											"end": 3575,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 3567,
											"end": 3570,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3563,
											"end": 3576,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3560,
											"end": 3585,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3557,
											"end": 3647,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3557,
											"end": 3647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3557,
											"end": 3647,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3628,
											"end": 3631,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3623,
											"end": 3626,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3619,
											"end": 3632,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3611,
											"end": 3617,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3604,
											"end": 3633,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3557,
											"end": 3647,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3557,
											"end": 3647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3677,
											"end": 3679,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3671,
											"end": 3675,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3667,
											"end": 3680,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3660,
											"end": 3680,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3660,
											"end": 3680,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3188,
											"end": 3690,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3188,
											"end": 3690,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3750,
											"end": 3915,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3750,
											"end": 3915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3764,
											"end": 3766,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3757,
											"end": 3760,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3757,
											"end": 3766,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3750,
											"end": 3915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3750,
											"end": 3915,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3839,
											"end": 3842,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3833,
											"end": 3843,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3827,
											"end": 3831,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3820,
											"end": 3844,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 3881,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3871,
											"end": 3881,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3871,
											"end": 3881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3871,
											"end": 3881,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3871,
											"end": 3881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3871,
											"end": 3881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 3871,
											"end": 3881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3871,
											"end": 3881,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3871,
											"end": 3881,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3871,
											"end": 3881,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3871,
											"end": 3881,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3902,
											"end": 3904,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3895,
											"end": 3904,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3895,
											"end": 3904,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 3895,
											"end": 3904,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3895,
											"end": 3904,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3895,
											"end": 3904,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 3895,
											"end": 3904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3895,
											"end": 3904,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 3895,
											"end": 3904,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3895,
											"end": 3904,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3895,
											"end": 3904,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3775,
											"end": 3777,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3768,
											"end": 3777,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3768,
											"end": 3777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 3768,
											"end": 3777,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3768,
											"end": 3777,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3768,
											"end": 3777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3768,
											"end": 3777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3768,
											"end": 3777,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 3768,
											"end": 3777,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3768,
											"end": 3777,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3768,
											"end": 3777,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3750,
											"end": 3915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3750,
											"end": 3915,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3750,
											"end": 3915,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3750,
											"end": 3915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3981,
											"end": 3990,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4015,
											"end": 4016,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4007,
											"end": 4010,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4002,
											"end": 4004,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4002,
											"end": 4010,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3994,
											"end": 3997,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3994,
											"end": 4011,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3993,
											"end": 4016,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3981,
											"end": 4016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3981,
											"end": 4016,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4092,
											"end": 4096,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4088,
											"end": 4097,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 4082,
											"end": 4085,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4076,
											"end": 4086,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4072,
											"end": 4098,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4148,
											"end": 4152,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4141,
											"end": 4145,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4135,
											"end": 4146,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4131,
											"end": 4153,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4196,
											"end": 4203,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4186,
											"end": 4194,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4183,
											"end": 4204,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 4177,
											"end": 4181,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4170,
											"end": 4205,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4039,
											"end": 4219,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4039,
											"end": 4219,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4039,
											"end": 4219,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4246,
											"end": 4249,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4239,
											"end": 4249,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4239,
											"end": 4249,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4239,
											"end": 4249,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4239,
											"end": 4249,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2874,
											"end": 4256,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 2874,
											"end": 4256,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2874,
											"end": 4256,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2874,
											"end": 4256,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2874,
											"end": 4256,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2874,
											"end": 4256,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2874,
											"end": 4256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6975,
											"end": 7862,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 6975,
											"end": 7862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7064,
											"end": 7077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 7064,
											"end": 7077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 7064,
											"end": 7077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7064,
											"end": 7077,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 7064,
											"end": 7077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7105,
											"end": 7108,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7105,
											"end": 7117,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7105,
											"end": 7117,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7105,
											"end": 7117,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7099,
											"end": 7102,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7093,
											"end": 7096,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7093,
											"end": 7102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 7093,
											"end": 7102,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7093,
											"end": 7102,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7093,
											"end": 7102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 7093,
											"end": 7102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7093,
											"end": 7102,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 7093,
											"end": 7102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7093,
											"end": 7117,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7089,
											"end": 7172,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7089,
											"end": 7172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 7089,
											"end": 7172,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7133,
											"end": 7161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 7140,
											"end": 7143,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7159,
											"end": 7160,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7152,
											"end": 7155,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7146,
											"end": 7149,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7146,
											"end": 7155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 7146,
											"end": 7155,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7146,
											"end": 7155,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7146,
											"end": 7155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 7146,
											"end": 7155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7146,
											"end": 7155,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 7146,
											"end": 7155,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7145,
											"end": 7160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 7145,
											"end": 7160,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7145,
											"end": 7160,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7145,
											"end": 7160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 7145,
											"end": 7160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7145,
											"end": 7160,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 7145,
											"end": 7160,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7133,
											"end": 7139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 7133,
											"end": 7161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7133,
											"end": 7161,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 7133,
											"end": 7161,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7089,
											"end": 7172,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 7089,
											"end": 7172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7215,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7233,
											"end": 7234,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7226,
											"end": 7229,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7219,
											"end": 7222,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7219,
											"end": 7229,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7218,
											"end": 7234,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7234,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7306,
											"end": 7309,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7301,
											"end": 7303,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7301,
											"end": 7309,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7296,
											"end": 7297,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 7296,
											"end": 7310,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7287,
											"end": 7291,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7287,
											"end": 7311,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7287,
											"end": 7311,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7280,
											"end": 7311,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7280,
											"end": 7311,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7425,
											"end": 7428,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7419,
											"end": 7429,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7560,
											"end": 7563,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7554,
											"end": 7557,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7546,
											"end": 7552,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7542,
											"end": 7558,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7538,
											"end": 7564,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7626,
											"end": 7630,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7618,
											"end": 7622,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7614,
											"end": 7623,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 7607,
											"end": 7611,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7601,
											"end": 7612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7597,
											"end": 7624,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7594,
											"end": 7631,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 7588,
											"end": 7592,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7581,
											"end": 7632,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7734,
											"end": 7740,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7728,
											"end": 7741,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7722,
											"end": 7725,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7717,
											"end": 7720,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 7713,
											"end": 7726,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7710,
											"end": 7742,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7707,
											"end": 7812,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7707,
											"end": 7812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 7707,
											"end": 7812,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7789,
											"end": 7792,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7784,
											"end": 7787,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7780,
											"end": 7793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7772,
											"end": 7778,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7765,
											"end": 7794,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7707,
											"end": 7812,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 7707,
											"end": 7812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7334,
											"end": 7826,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7334,
											"end": 7826,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7334,
											"end": 7826,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7852,
											"end": 7855,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7845,
											"end": 7855,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7845,
											"end": 7855,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6975,
											"end": 7862,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 6975,
											"end": 7862,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6975,
											"end": 7862,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6975,
											"end": 7862,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6975,
											"end": 7862,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6975,
											"end": 7862,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6975,
											"end": 7862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2034,
											"end": 2168,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2034,
											"end": 2168,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2084,
											"end": 2088,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2108,
											"end": 2109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2104,
											"end": 2105,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2104,
											"end": 2109,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2144,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2100,
											"end": 2144,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2132,
											"end": 2133,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2133,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2125,
											"end": 2133,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2144,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2100,
											"end": 2144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2161,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2161,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2034,
											"end": 2168,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2034,
											"end": 2168,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2034,
											"end": 2168,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2034,
											"end": 2168,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2034,
											"end": 2168,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2034,
											"end": 2168,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2034,
											"end": 2168,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1861,
											"end": 2028,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1861,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1934,
											"end": 1953,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1956,
											"end": 1959,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1956,
											"end": 1963,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1956,
											"end": 1963,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1956,
											"end": 1963,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1934,
											"end": 1963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1934,
											"end": 1963,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1973,
											"end": 1992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1978,
											"end": 1981,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1983,
											"end": 1991,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1973,
											"end": 1977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1973,
											"end": 1992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1973,
											"end": 1992,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1973,
											"end": 1992,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1973,
											"end": 1992,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2002,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2009,
											"end": 2012,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2014,
											"end": 2020,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2002,
											"end": 2008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2002,
											"end": 2021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2002,
											"end": 2021,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2002,
											"end": 2021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2002,
											"end": 2021,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1924,
											"end": 2028,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1861,
											"end": 2028,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1861,
											"end": 2028,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1861,
											"end": 2028,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "12"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 334,
											"end": 451,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 334,
											"end": 451,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 443,
											"end": 444,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 440,
											"end": 441,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 433,
											"end": 445,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 457,
											"end": 574,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 457,
											"end": 574,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 566,
											"end": 567,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 563,
											"end": 564,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 556,
											"end": 568,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 580,
											"end": 697,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 580,
											"end": 697,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 689,
											"end": 690,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 686,
											"end": 687,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 679,
											"end": 691,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 716,
											"end": 1268,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 716,
											"end": 1268,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 773,
											"end": 781,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 783,
											"end": 789,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 833,
											"end": 836,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 826,
											"end": 830,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 818,
											"end": 824,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 814,
											"end": 831,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 810,
											"end": 837,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 800,
											"end": 922,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 800,
											"end": 922,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 841,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 841,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 841,
											"end": 920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 920,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 841,
											"end": 920,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 800,
											"end": 922,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 800,
											"end": 922,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 954,
											"end": 960,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 941,
											"end": 961,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 931,
											"end": 961,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 931,
											"end": 961,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 984,
											"end": 1002,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 976,
											"end": 982,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 973,
											"end": 1003,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 970,
											"end": 1087,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 970,
											"end": 1087,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 970,
											"end": 1087,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1006,
											"end": 1085,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 1006,
											"end": 1085,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 1006,
											"end": 1085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1006,
											"end": 1085,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 1006,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 970,
											"end": 1087,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 970,
											"end": 1087,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1120,
											"end": 1124,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1112,
											"end": 1118,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1108,
											"end": 1125,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1096,
											"end": 1125,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1096,
											"end": 1125,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1174,
											"end": 1177,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1166,
											"end": 1170,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1158,
											"end": 1164,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1154,
											"end": 1171,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1144,
											"end": 1152,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1140,
											"end": 1172,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1137,
											"end": 1178,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1134,
											"end": 1262,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1134,
											"end": 1262,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 1134,
											"end": 1262,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1181,
											"end": 1260,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 1181,
											"end": 1260,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 1181,
											"end": 1260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1181,
											"end": 1260,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 1181,
											"end": 1260,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1134,
											"end": 1262,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 1134,
											"end": 1262,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 716,
											"end": 1268,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 716,
											"end": 1268,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 716,
											"end": 1268,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 716,
											"end": 1268,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 716,
											"end": 1268,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 716,
											"end": 1268,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1351,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 1274,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1311,
											"end": 1318,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1340,
											"end": 1345,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1329,
											"end": 1345,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1329,
											"end": 1345,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1351,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1351,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1351,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1357,
											"end": 1479,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 1357,
											"end": 1479,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1430,
											"end": 1454,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 1448,
											"end": 1453,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1430,
											"end": 1454,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 1430,
											"end": 1454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1430,
											"end": 1454,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 1430,
											"end": 1454,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1423,
											"end": 1428,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1420,
											"end": 1455,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1410,
											"end": 1473,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 1410,
											"end": 1473,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1469,
											"end": 1470,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1466,
											"end": 1467,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1459,
											"end": 1471,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1410,
											"end": 1473,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 1410,
											"end": 1473,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1357,
											"end": 1479,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1357,
											"end": 1479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1485,
											"end": 1624,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 1485,
											"end": 1624,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1536,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1569,
											"end": 1575,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1556,
											"end": 1576,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1547,
											"end": 1576,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1547,
											"end": 1576,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1585,
											"end": 1618,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 1612,
											"end": 1617,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1585,
											"end": 1618,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 1585,
											"end": 1618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1585,
											"end": 1618,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 1585,
											"end": 1618,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1485,
											"end": 1624,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1485,
											"end": 1624,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1485,
											"end": 1624,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1485,
											"end": 1624,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1485,
											"end": 1624,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1630,
											"end": 2645,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1630,
											"end": 2645,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1735,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1737,
											"end": 1743,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1751,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1759,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1761,
											"end": 1767,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1810,
											"end": 1812,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1798,
											"end": 1807,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1789,
											"end": 1796,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 1785,
											"end": 1808,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1781,
											"end": 1813,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1778,
											"end": 1897,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1778,
											"end": 1897,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 1778,
											"end": 1897,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1816,
											"end": 1895,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 1816,
											"end": 1895,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 1816,
											"end": 1895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1816,
											"end": 1895,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 1816,
											"end": 1895,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1778,
											"end": 1897,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 1778,
											"end": 1897,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1964,
											"end": 1965,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1953,
											"end": 1962,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1949,
											"end": 1966,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1936,
											"end": 1967,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1994,
											"end": 2012,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1986,
											"end": 1992,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2013,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1980,
											"end": 2097,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1980,
											"end": 2097,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 1980,
											"end": 2097,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2016,
											"end": 2095,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 2016,
											"end": 2095,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 2016,
											"end": 2095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2016,
											"end": 2095,
											"name": "tag",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 2016,
											"end": 2095,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1980,
											"end": 2097,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 1980,
											"end": 2097,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2129,
											"end": 2193,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 2185,
											"end": 2192,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 2176,
											"end": 2182,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2165,
											"end": 2174,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 2161,
											"end": 2183,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2129,
											"end": 2193,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 2129,
											"end": 2193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2129,
											"end": 2193,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 2129,
											"end": 2193,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2111,
											"end": 2193,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 2111,
											"end": 2193,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2111,
											"end": 2193,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 2111,
											"end": 2193,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1907,
											"end": 2203,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2272,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2259,
											"end": 2268,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2255,
											"end": 2273,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2242,
											"end": 2274,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 2301,
											"end": 2319,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2293,
											"end": 2299,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2320,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2404,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2404,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 2287,
											"end": 2404,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2323,
											"end": 2402,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 2323,
											"end": 2402,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 2323,
											"end": 2402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2323,
											"end": 2402,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 2323,
											"end": 2402,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2404,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 2287,
											"end": 2404,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2436,
											"end": 2500,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 2492,
											"end": 2499,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 2483,
											"end": 2489,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2472,
											"end": 2481,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 2468,
											"end": 2490,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2436,
											"end": 2500,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 2436,
											"end": 2500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2436,
											"end": 2500,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 2436,
											"end": 2500,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2418,
											"end": 2500,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2418,
											"end": 2500,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2418,
											"end": 2500,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2418,
											"end": 2500,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2213,
											"end": 2510,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2549,
											"end": 2551,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2575,
											"end": 2628,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 2620,
											"end": 2627,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 2611,
											"end": 2617,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2600,
											"end": 2609,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 2596,
											"end": 2618,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2575,
											"end": 2628,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 2575,
											"end": 2628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2575,
											"end": 2628,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 2575,
											"end": 2628,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2628,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2628,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2520,
											"end": 2638,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1630,
											"end": 2645,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1630,
											"end": 2645,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 1630,
											"end": 2645,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1630,
											"end": 2645,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1630,
											"end": 2645,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 1630,
											"end": 2645,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1630,
											"end": 2645,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1630,
											"end": 2645,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1630,
											"end": 2645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2651,
											"end": 2728,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 2651,
											"end": 2728,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2688,
											"end": 2695,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2717,
											"end": 2722,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2706,
											"end": 2722,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2706,
											"end": 2722,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2651,
											"end": 2728,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2651,
											"end": 2728,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2651,
											"end": 2728,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2651,
											"end": 2728,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2734,
											"end": 2852,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 2734,
											"end": 2852,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2821,
											"end": 2845,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2821,
											"end": 2845,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 2821,
											"end": 2845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2821,
											"end": 2845,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 2821,
											"end": 2845,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2816,
											"end": 2819,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2846,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2734,
											"end": 2852,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2734,
											"end": 2852,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2734,
											"end": 2852,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2858,
											"end": 3080,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 2858,
											"end": 3080,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2951,
											"end": 2955,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2991,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2978,
											"end": 2987,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2974,
											"end": 2992,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2966,
											"end": 2992,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2966,
											"end": 2992,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3073,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 3070,
											"end": 3071,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3059,
											"end": 3068,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3072,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3046,
											"end": 3052,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3073,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 3002,
											"end": 3073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3073,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 3002,
											"end": 3073,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2858,
											"end": 3080,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2858,
											"end": 3080,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2858,
											"end": 3080,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2858,
											"end": 3080,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2858,
											"end": 3080,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3086,
											"end": 3266,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 3086,
											"end": 3266,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3134,
											"end": 3211,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3131,
											"end": 3132,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3124,
											"end": 3212,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3231,
											"end": 3235,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 3228,
											"end": 3229,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3221,
											"end": 3236,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3255,
											"end": 3259,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3252,
											"end": 3253,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3245,
											"end": 3260,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3272,
											"end": 3463,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 3272,
											"end": 3463,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3312,
											"end": 3315,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3331,
											"end": 3351,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 3349,
											"end": 3350,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3331,
											"end": 3351,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 3331,
											"end": 3351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3331,
											"end": 3351,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 3331,
											"end": 3351,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3326,
											"end": 3351,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3326,
											"end": 3351,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3365,
											"end": 3385,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 3383,
											"end": 3384,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3365,
											"end": 3385,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 3365,
											"end": 3385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3365,
											"end": 3385,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 3365,
											"end": 3385,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3360,
											"end": 3385,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3360,
											"end": 3385,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3408,
											"end": 3409,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3405,
											"end": 3406,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3401,
											"end": 3410,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3394,
											"end": 3410,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3394,
											"end": 3410,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3429,
											"end": 3432,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3426,
											"end": 3427,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3423,
											"end": 3433,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3420,
											"end": 3456,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3420,
											"end": 3456,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 3420,
											"end": 3456,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3436,
											"end": 3454,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 3436,
											"end": 3454,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 3436,
											"end": 3454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3436,
											"end": 3454,
											"name": "tag",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 3436,
											"end": 3454,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3420,
											"end": 3456,
											"name": "tag",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 3420,
											"end": 3456,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3272,
											"end": 3463,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3272,
											"end": 3463,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3272,
											"end": 3463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3272,
											"end": 3463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3272,
											"end": 3463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3469,
											"end": 3649,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 3469,
											"end": 3649,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3517,
											"end": 3594,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3514,
											"end": 3515,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3507,
											"end": 3595,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3614,
											"end": 3618,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 3611,
											"end": 3612,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3604,
											"end": 3619,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3638,
											"end": 3642,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3635,
											"end": 3636,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3628,
											"end": 3643,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3655,
											"end": 3831,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 3655,
											"end": 3831,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3687,
											"end": 3688,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3704,
											"end": 3724,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 3722,
											"end": 3723,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3704,
											"end": 3724,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 3704,
											"end": 3724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3704,
											"end": 3724,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 3704,
											"end": 3724,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3699,
											"end": 3724,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3699,
											"end": 3724,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3738,
											"end": 3758,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 3756,
											"end": 3757,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3738,
											"end": 3758,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 3738,
											"end": 3758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3738,
											"end": 3758,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 3738,
											"end": 3758,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3733,
											"end": 3758,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3733,
											"end": 3758,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3777,
											"end": 3778,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3767,
											"end": 3802,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 3767,
											"end": 3802,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3782,
											"end": 3800,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 3782,
											"end": 3800,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 3782,
											"end": 3800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3782,
											"end": 3800,
											"name": "tag",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 3782,
											"end": 3800,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3767,
											"end": 3802,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 3767,
											"end": 3802,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3823,
											"end": 3824,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3820,
											"end": 3821,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3816,
											"end": 3825,
											"name": "MOD",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3825,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3825,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3655,
											"end": 3831,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3655,
											"end": 3831,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3655,
											"end": 3831,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3655,
											"end": 3831,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3655,
											"end": 3831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3837,
											"end": 4031,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 3837,
											"end": 4031,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3877,
											"end": 3881,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3897,
											"end": 3917,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 3915,
											"end": 3916,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3897,
											"end": 3917,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 3897,
											"end": 3917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3897,
											"end": 3917,
											"name": "tag",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 3897,
											"end": 3917,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3892,
											"end": 3917,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3892,
											"end": 3917,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3931,
											"end": 3951,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 3949,
											"end": 3950,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3931,
											"end": 3951,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 3931,
											"end": 3951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3931,
											"end": 3951,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 3931,
											"end": 3951,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3926,
											"end": 3951,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3926,
											"end": 3951,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3975,
											"end": 3976,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3972,
											"end": 3973,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3968,
											"end": 3977,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3960,
											"end": 3977,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3960,
											"end": 3977,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3999,
											"end": 4000,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3993,
											"end": 3997,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3990,
											"end": 4001,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3987,
											"end": 4024,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3987,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 3987,
											"end": 4024,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4004,
											"end": 4022,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 4004,
											"end": 4022,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 4004,
											"end": 4022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4004,
											"end": 4022,
											"name": "tag",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 4004,
											"end": 4022,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3987,
											"end": 4024,
											"name": "tag",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 3987,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3837,
											"end": 4031,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3837,
											"end": 4031,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3837,
											"end": 4031,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3837,
											"end": 4031,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3837,
											"end": 4031,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4037,
											"end": 4447,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 4037,
											"end": 4447,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4077,
											"end": 4084,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4100,
											"end": 4120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 4118,
											"end": 4119,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4100,
											"end": 4120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 4100,
											"end": 4120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4100,
											"end": 4120,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 4100,
											"end": 4120,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4095,
											"end": 4120,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4095,
											"end": 4120,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4134,
											"end": 4154,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 4152,
											"end": 4153,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4134,
											"end": 4154,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 4134,
											"end": 4154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4134,
											"end": 4154,
											"name": "tag",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 4134,
											"end": 4154,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4129,
											"end": 4154,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4129,
											"end": 4154,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4189,
											"end": 4190,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4186,
											"end": 4187,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4182,
											"end": 4191,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 4211,
											"end": 4241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 4229,
											"end": 4240,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4211,
											"end": 4241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 4211,
											"end": 4241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4211,
											"end": 4241,
											"name": "tag",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 4211,
											"end": 4241,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4200,
											"end": 4241,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4200,
											"end": 4241,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4390,
											"end": 4391,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4381,
											"end": 4388,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4377,
											"end": 4392,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 4374,
											"end": 4375,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4371,
											"end": 4393,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 4351,
											"end": 4352,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4344,
											"end": 4353,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4324,
											"end": 4407,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 4301,
											"end": 4440,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 4301,
											"end": 4440,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4420,
											"end": 4438,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 4420,
											"end": 4438,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 4420,
											"end": 4438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4420,
											"end": 4438,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 4420,
											"end": 4438,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4301,
											"end": 4440,
											"name": "tag",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 4301,
											"end": 4440,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4085,
											"end": 4447,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4037,
											"end": 4447,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4037,
											"end": 4447,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4037,
											"end": 4447,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4037,
											"end": 4447,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4037,
											"end": 4447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"contracts/Buffer.sol",
								"contracts/dnssec-oracle/SHA1.sol",
								"contracts/dnssec-oracle/nsec3digests/NSEC3Digest.sol",
								"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"hash(bytes,bytes,uint256)": "68f9dab2"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"salt\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"iterations\",\"type\":\"uint256\"}],\"name\":\"hash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implements the DNSSEC iterated SHA1 digest used for NSEC3 records.\",\"kind\":\"dev\",\"methods\":{\"hash(bytes,bytes,uint256)\":{\"details\":\"Performs an NSEC3 iterated hash.\",\"params\":{\"data\":\"The data to hash.\",\"iterations\":\"The number of iterations to perform.\",\"salt\":\"The salt value to use on each iteration.\"},\"returns\":{\"_0\":\"The result of the iterated hash operation.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":\"SHA1NSEC3Digest\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Buffer.sol\":{\"keccak256\":\"0x18e42be1a3e4f7b4442d7ab0b524af5e09163503439954faf0ab3792cce91caa\",\"urls\":[\"bzz-raw://515c7c344086fe7cf7647eaaa477d3c9a6dbd3af6333136af0ce3b6955e79f84\",\"dweb:/ipfs/QmUZpq2w29ZxFF8b96qhr2jwj8aK14R2rZT2tzNPk128bo\"]},\"contracts/dnssec-oracle/SHA1.sol\":{\"keccak256\":\"0x43d6fc9dfba44bcc5d696ac24d8e1b90355942b41c8324ea31dce1ebfce82263\",\"urls\":[\"bzz-raw://1960e30cb640d8fa40a05d1c699ada2bd70b7556d4d0a93ab7d234b9f7d5e41d\",\"dweb:/ipfs/Qmf39ZcTRYZQ5xX1LJhFmY9LeEWE548oN4QBcrR6vwuutY\"]},\"contracts/dnssec-oracle/nsec3digests/NSEC3Digest.sol\":{\"keccak256\":\"0xb3b61aee6bb472158b7ace6b5644dcb668271296b98a6dcde24dc72e3cdf4950\",\"urls\":[\"bzz-raw://e4294774b9f5ca42f886ee2de37ec2d3dd02f1048e824aa5983f4dedf2751e31\",\"dweb:/ipfs/QmYSaec2cLmyH63Paf4gb3PS78XqKFDm6WxyvYjcNU7DqW\"]},\"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\":{\"keccak256\":\"0xc40d44ddb2223a9420fb90e0ca9b50578b0b3dc299a84cf45f5d97f488d92d2c\",\"urls\":[\"bzz-raw://01a3d94df802f0a0757d4e697e1c53125c69250f77fa92c3e38e895027ef2ff1\",\"dweb:/ipfs/QmVTUDvGt6s2iLKDKU8Y9reitVq5xtFUhJaTx3is2WrXsh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/Buffer.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/Buffer.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/dnssec-oracle/SHA1.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/dnssec-oracle/SHA1.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/dnssec-oracle/nsec3digests/NSEC3Digest.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/dnssec-oracle/nsec3digests/NSEC3Digest.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5815",
				"formattedMessage": "Warning: Interface functions are implicitly \"virtual\"\n  --> contracts/dnssec-oracle/nsec3digests/NSEC3Digest.sol:14:6:\n   |\n14 |      function hash(bytes calldata salt, bytes calldata data, uint iterations) external virtual pure returns (bytes32);\n   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Interface functions are implicitly \"virtual\"",
				"severity": "warning",
				"sourceLocation": {
					"end": 525,
					"file": "contracts/dnssec-oracle/nsec3digests/NSEC3Digest.sol",
					"start": 412
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/Buffer.sol": {
				"ast": {
					"absolutePath": "contracts/Buffer.sol",
					"exportedSymbols": {
						"Buffer": [
							522
						]
					},
					"id": 523,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Buffer",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "25:376:0",
								"text": " @dev A library for working with mutable byte buffers in Solidity.\n Byte buffers are mutable and expandable, and provide a variety of primitives\n for writing to them. At any time you can fetch a bytes object containing the\n current contents of the buffer. The bytes object should not be stored between\n operations, as it may change due to resizing of the buffer."
							},
							"fullyImplemented": true,
							"id": 522,
							"linearizedBaseContracts": [
								522
							],
							"name": "Buffer",
							"nameLocation": "410:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Buffer.buffer",
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "423:249:0",
										"text": " @dev Represents a mutable buffer. Buffers have a current value (buf) and\n      a capacity. The capacity may be longer than the current value, in\n      which case it can be extended without the need to allocate more memory."
									},
									"id": 8,
									"members": [
										{
											"constant": false,
											"id": 5,
											"mutability": "mutable",
											"name": "buf",
											"nameLocation": "707:3:0",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "701:9:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 4,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "701:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 7,
											"mutability": "mutable",
											"name": "capacity",
											"nameLocation": "725:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "720:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 6,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "720:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "buffer",
									"nameLocation": "684:6:0",
									"nodeType": "StructDefinition",
									"scope": 522,
									"src": "677:63:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "1062:370:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 24,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 22,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 20,
															"name": "capacity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 14,
															"src": "1076:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "3332",
															"id": 21,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1087:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "32"
														},
														"src": "1076:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 23,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1093:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1076:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 35,
												"nodeType": "IfStatement",
												"src": "1072:81:0",
												"trueBody": {
													"id": 34,
													"nodeType": "Block",
													"src": "1096:57:0",
													"statements": [
														{
															"expression": {
																"id": 32,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 25,
																	"name": "capacity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 14,
																	"src": "1110:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 31,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3332",
																		"id": 26,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1122:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		"value": "32"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 29,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 27,
																					"name": "capacity",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 14,
																					"src": "1128:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "%",
																				"rightExpression": {
																					"hexValue": "3332",
																					"id": 28,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1139:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_32_by_1",
																						"typeString": "int_const 32"
																					},
																					"value": "32"
																				},
																				"src": "1128:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 30,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "1127:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1122:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1110:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 33,
															"nodeType": "ExpressionStatement",
															"src": "1110:32:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 40,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 36,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "1208:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															}
														},
														"id": 38,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1212:8:0",
														"memberName": "capacity",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 7,
														"src": "1208:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 39,
														"name": "capacity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "1223:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1208:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 41,
												"nodeType": "ExpressionStatement",
												"src": "1208:23:0"
											},
											{
												"AST": {
													"nativeSrc": "1250:156:0",
													"nodeType": "YulBlock",
													"src": "1250:156:0",
													"statements": [
														{
															"nativeSrc": "1264:22:0",
															"nodeType": "YulVariableDeclaration",
															"src": "1264:22:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1281:4:0",
																		"nodeType": "YulLiteral",
																		"src": "1281:4:0",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1275:5:0",
																	"nodeType": "YulIdentifier",
																	"src": "1275:5:0"
																},
																"nativeSrc": "1275:11:0",
																"nodeType": "YulFunctionCall",
																"src": "1275:11:0"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nativeSrc": "1268:3:0",
																	"nodeType": "YulTypedName",
																	"src": "1268:3:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "buf",
																		"nativeSrc": "1306:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "1306:3:0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "1311:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "1311:3:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1299:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "1299:6:0"
																},
																"nativeSrc": "1299:16:0",
																"nodeType": "YulFunctionCall",
																"src": "1299:16:0"
															},
															"nativeSrc": "1299:16:0",
															"nodeType": "YulExpressionStatement",
															"src": "1299:16:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "1335:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "1335:3:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1340:1:0",
																		"nodeType": "YulLiteral",
																		"src": "1340:1:0",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1328:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "1328:6:0"
																},
																"nativeSrc": "1328:14:0",
																"nodeType": "YulFunctionCall",
																"src": "1328:14:0"
															},
															"nativeSrc": "1328:14:0",
															"nodeType": "YulExpressionStatement",
															"src": "1328:14:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1362:4:0",
																		"nodeType": "YulLiteral",
																		"src": "1362:4:0",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1372:2:0",
																				"nodeType": "YulLiteral",
																				"src": "1372:2:0",
																				"type": "",
																				"value": "32"
																			},
																			{
																				"arguments": [
																					{
																						"name": "ptr",
																						"nativeSrc": "1380:3:0",
																						"nodeType": "YulIdentifier",
																						"src": "1380:3:0"
																					},
																					{
																						"name": "capacity",
																						"nativeSrc": "1385:8:0",
																						"nodeType": "YulIdentifier",
																						"src": "1385:8:0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1376:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "1376:3:0"
																				},
																				"nativeSrc": "1376:18:0",
																				"nodeType": "YulFunctionCall",
																				"src": "1376:18:0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1368:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "1368:3:0"
																		},
																		"nativeSrc": "1368:27:0",
																		"nodeType": "YulFunctionCall",
																		"src": "1368:27:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1355:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "1355:6:0"
																},
																"nativeSrc": "1355:41:0",
																"nodeType": "YulFunctionCall",
																"src": "1355:41:0"
															},
															"nativeSrc": "1355:41:0",
															"nodeType": "YulExpressionStatement",
															"src": "1355:41:0"
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 12,
														"isOffset": false,
														"isSlot": false,
														"src": "1306:3:0",
														"valueSize": 1
													},
													{
														"declaration": 14,
														"isOffset": false,
														"isSlot": false,
														"src": "1385:8:0",
														"valueSize": 1
													}
												],
												"id": 42,
												"nodeType": "InlineAssembly",
												"src": "1241:165:0"
											},
											{
												"expression": {
													"id": 43,
													"name": "buf",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 12,
													"src": "1422:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
														"typeString": "struct Buffer.buffer memory"
													}
												},
												"functionReturnParameters": 19,
												"id": 44,
												"nodeType": "Return",
												"src": "1415:10:0"
											}
										]
									},
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "746:226:0",
										"text": " @dev Initializes a buffer with an initial capacity.\n @param buf The buffer to initialize.\n @param capacity The number of bytes of space to allocate the buffer.\n @return The buffer, for chaining."
									},
									"id": 46,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "init",
									"nameLocation": "986:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "buf",
												"nameLocation": "1005:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "991:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"id": 11,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 10,
														"name": "buffer",
														"nameLocations": [
															"991:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 8,
														"src": "991:6:0"
													},
													"referencedDeclaration": 8,
													"src": "991:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$8_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "capacity",
												"nameLocation": "1015:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1010:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1010:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "990:34:0"
									},
									"returnParameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1047:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"id": 17,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 16,
														"name": "buffer",
														"nameLocations": [
															"1047:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 8,
														"src": "1047:6:0"
													},
													"referencedDeclaration": 8,
													"src": "1047:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$8_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1046:15:0"
									},
									"scope": 522,
									"src": "977:455:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 74,
										"nodeType": "Block",
										"src": "1747:108:0",
										"statements": [
											{
												"assignments": [
													57
												],
												"declarations": [
													{
														"constant": false,
														"id": 57,
														"mutability": "mutable",
														"name": "buf",
														"nameLocation": "1771:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 74,
														"src": "1757:17:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
															"typeString": "struct Buffer.buffer"
														},
														"typeName": {
															"id": 56,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 55,
																"name": "buffer",
																"nameLocations": [
																	"1757:6:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 8,
																"src": "1757:6:0"
															},
															"referencedDeclaration": 8,
															"src": "1757:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$8_storage_ptr",
																"typeString": "struct Buffer.buffer"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 58,
												"nodeType": "VariableDeclarationStatement",
												"src": "1757:17:0"
											},
											{
												"expression": {
													"id": 63,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 59,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 57,
															"src": "1784:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															}
														},
														"id": 61,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1788:3:0",
														"memberName": "buf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "1784:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 62,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 49,
														"src": "1794:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"src": "1784:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"id": 64,
												"nodeType": "ExpressionStatement",
												"src": "1784:11:0"
											},
											{
												"expression": {
													"id": 70,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 65,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 57,
															"src": "1805:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															}
														},
														"id": 67,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1809:8:0",
														"memberName": "capacity",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 7,
														"src": "1805:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 68,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 49,
															"src": "1820:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 69,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1822:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1820:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1805:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 71,
												"nodeType": "ExpressionStatement",
												"src": "1805:23:0"
											},
											{
												"expression": {
													"id": 72,
													"name": "buf",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 57,
													"src": "1845:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
														"typeString": "struct Buffer.buffer memory"
													}
												},
												"functionReturnParameters": 54,
												"id": 73,
												"nodeType": "Return",
												"src": "1838:10:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1438:232:0",
										"text": " @dev Initializes a new buffer from an existing bytes object.\n      Changes to the buffer may mutate the original value.\n @param b The bytes object to initialize the buffer with.\n @return A new buffer."
									},
									"id": 75,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fromBytes",
									"nameLocation": "1684:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1707:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "1694:14:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 48,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1694:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1693:16:0"
									},
									"returnParameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "1732:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"id": 52,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 51,
														"name": "buffer",
														"nameLocations": [
															"1732:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 8,
														"src": "1732:6:0"
													},
													"referencedDeclaration": 8,
													"src": "1732:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$8_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1731:15:0"
									},
									"scope": 522,
									"src": "1675:180:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 98,
										"nodeType": "Block",
										"src": "1924:104:0",
										"statements": [
											{
												"assignments": [
													84
												],
												"declarations": [
													{
														"constant": false,
														"id": 84,
														"mutability": "mutable",
														"name": "oldbuf",
														"nameLocation": "1947:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 98,
														"src": "1934:19:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 83,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1934:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 87,
												"initialValue": {
													"expression": {
														"id": 85,
														"name": "buf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 78,
														"src": "1956:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
															"typeString": "struct Buffer.buffer memory"
														}
													},
													"id": 86,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1960:3:0",
													"memberName": "buf",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 5,
													"src": "1956:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1934:29:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 89,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 78,
															"src": "1978:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															}
														},
														{
															"id": 90,
															"name": "capacity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "1983:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 88,
														"name": "init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "1973:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$8_memory_ptr_$_t_uint256_$returns$_t_struct$_buffer_$8_memory_ptr_$",
															"typeString": "function (struct Buffer.buffer memory,uint256) pure returns (struct Buffer.buffer memory)"
														}
													},
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1973:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
														"typeString": "struct Buffer.buffer memory"
													}
												},
												"id": 92,
												"nodeType": "ExpressionStatement",
												"src": "1973:19:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 94,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 78,
															"src": "2009:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															}
														},
														{
															"id": 95,
															"name": "oldbuf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 84,
															"src": "2014:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 93,
														"name": "append",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															242,
															265
														],
														"referencedDeclaration": 265,
														"src": "2002:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$8_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_struct$_buffer_$8_memory_ptr_$",
															"typeString": "function (struct Buffer.buffer memory,bytes memory) pure returns (struct Buffer.buffer memory)"
														}
													},
													"id": 96,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2002:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
														"typeString": "struct Buffer.buffer memory"
													}
												},
												"id": 97,
												"nodeType": "ExpressionStatement",
												"src": "2002:19:0"
											}
										]
									},
									"id": 99,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "resize",
									"nameLocation": "1870:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "buf",
												"nameLocation": "1891:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "1877:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"id": 77,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 76,
														"name": "buffer",
														"nameLocations": [
															"1877:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 8,
														"src": "1877:6:0"
													},
													"referencedDeclaration": 8,
													"src": "1877:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$8_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "capacity",
												"nameLocation": "1901:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "1896:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 79,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1896:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1876:34:0"
									},
									"returnParameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1924:0:0"
									},
									"scope": 522,
									"src": "1861:167:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 117,
										"nodeType": "Block",
										"src": "2090:78:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 108,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2104:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 109,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "2108:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2104:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 114,
												"nodeType": "IfStatement",
												"src": "2100:44:0",
												"trueBody": {
													"id": 113,
													"nodeType": "Block",
													"src": "2111:33:0",
													"statements": [
														{
															"expression": {
																"id": 111,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "2132:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 107,
															"id": 112,
															"nodeType": "Return",
															"src": "2125:8:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 115,
													"name": "b",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 103,
													"src": "2160:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 107,
												"id": 116,
												"nodeType": "Return",
												"src": "2153:8:0"
											}
										]
									},
									"id": 118,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2043:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2052:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "2047:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 100,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2047:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2060:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "2055:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 102,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2055:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2046:16:0"
									},
									"returnParameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "2084:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 105,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2084:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2083:6:0"
									},
									"scope": 522,
									"src": "2034:134:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 131,
										"nodeType": "Block",
										"src": "2391:123:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2410:78:0",
													"nodeType": "YulBlock",
													"src": "2410:78:0",
													"statements": [
														{
															"nativeSrc": "2424:24:0",
															"nodeType": "YulVariableDeclaration",
															"src": "2424:24:0",
															"value": {
																"arguments": [
																	{
																		"name": "buf",
																		"nativeSrc": "2444:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "2444:3:0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2438:5:0",
																	"nodeType": "YulIdentifier",
																	"src": "2438:5:0"
																},
																"nativeSrc": "2438:10:0",
																"nodeType": "YulFunctionCall",
																"src": "2438:10:0"
															},
															"variables": [
																{
																	"name": "bufptr",
																	"nativeSrc": "2428:6:0",
																	"nodeType": "YulTypedName",
																	"src": "2428:6:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "bufptr",
																		"nativeSrc": "2468:6:0",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2476:1:0",
																		"nodeType": "YulLiteral",
																		"src": "2476:1:0",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2461:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "2461:6:0"
																},
																"nativeSrc": "2461:17:0",
																"nodeType": "YulFunctionCall",
																"src": "2461:17:0"
															},
															"nativeSrc": "2461:17:0",
															"nodeType": "YulExpressionStatement",
															"src": "2461:17:0"
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 122,
														"isOffset": false,
														"isSlot": false,
														"src": "2444:3:0",
														"valueSize": 1
													}
												],
												"id": 128,
												"nodeType": "InlineAssembly",
												"src": "2401:87:0"
											},
											{
												"expression": {
													"id": 129,
													"name": "buf",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 122,
													"src": "2504:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
														"typeString": "struct Buffer.buffer memory"
													}
												},
												"functionReturnParameters": 127,
												"id": 130,
												"nodeType": "Return",
												"src": "2497:10:0"
											}
										]
									},
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "2174:137:0",
										"text": " @dev Sets buffer length to 0.\n @param buf The buffer to truncate.\n @return The original buffer, for chaining.."
									},
									"id": 132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "truncate",
									"nameLocation": "2325:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "buf",
												"nameLocation": "2348:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2334:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"id": 121,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 120,
														"name": "buffer",
														"nameLocations": [
															"2334:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 8,
														"src": "2334:6:0"
													},
													"referencedDeclaration": 8,
													"src": "2334:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$8_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2333:19:0"
									},
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2376:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"id": 125,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 124,
														"name": "buffer",
														"nameLocations": [
															"2376:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 8,
														"src": "2376:6:0"
													},
													"referencedDeclaration": 8,
													"src": "2376:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$8_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:15:0"
									},
									"scope": 522,
									"src": "2316:198:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 217,
										"nodeType": "Block",
										"src": "2984:1272:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 149,
																"name": "len",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 142,
																"src": "3002:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"id": 150,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 140,
																	"src": "3009:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 151,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3014:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "3009:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3002:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 148,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2994:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2994:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 154,
												"nodeType": "ExpressionStatement",
												"src": "2994:27:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 157,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 155,
															"name": "off",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 138,
															"src": "3036:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 156,
															"name": "len",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 142,
															"src": "3042:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3036:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"id": 158,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 136,
															"src": "3048:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															}
														},
														"id": 159,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3052:8:0",
														"memberName": "capacity",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 7,
														"src": "3048:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3036:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 175,
												"nodeType": "IfStatement",
												"src": "3032:100:0",
												"trueBody": {
													"id": 174,
													"nodeType": "Block",
													"src": "3062:70:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 162,
																		"name": "buf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 136,
																		"src": "3083:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
																			"typeString": "struct Buffer.buffer memory"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 171,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 164,
																						"name": "buf",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 136,
																						"src": "3092:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
																							"typeString": "struct Buffer.buffer memory"
																						}
																					},
																					"id": 165,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3096:8:0",
																					"memberName": "capacity",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 7,
																					"src": "3092:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 168,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 166,
																						"name": "len",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 142,
																						"src": "3106:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"id": 167,
																						"name": "off",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 138,
																						"src": "3112:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "3106:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 163,
																				"name": "max",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 118,
																				"src": "3088:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 169,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3088:28:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "32",
																			"id": 170,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3119:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "3088:32:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
																			"typeString": "struct Buffer.buffer memory"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 161,
																	"name": "resize",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 99,
																	"src": "3076:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$8_memory_ptr_$_t_uint256_$returns$__$",
																		"typeString": "function (struct Buffer.buffer memory,uint256) pure"
																	}
																},
																"id": 172,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3076:45:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 173,
															"nodeType": "ExpressionStatement",
															"src": "3076:45:0"
														}
													]
												}
											},
											{
												"assignments": [
													177
												],
												"declarations": [
													{
														"constant": false,
														"id": 177,
														"mutability": "mutable",
														"name": "dest",
														"nameLocation": "3147:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 217,
														"src": "3142:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 176,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3142:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 178,
												"nodeType": "VariableDeclarationStatement",
												"src": "3142:9:0"
											},
											{
												"assignments": [
													180
												],
												"declarations": [
													{
														"constant": false,
														"id": 180,
														"mutability": "mutable",
														"name": "src",
														"nameLocation": "3166:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 217,
														"src": "3161:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 179,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3161:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 181,
												"nodeType": "VariableDeclarationStatement",
												"src": "3161:8:0"
											},
											{
												"AST": {
													"nativeSrc": "3188:502:0",
													"nodeType": "YulBlock",
													"src": "3188:502:0",
													"statements": [
														{
															"nativeSrc": "3251:24:0",
															"nodeType": "YulVariableDeclaration",
															"src": "3251:24:0",
															"value": {
																"arguments": [
																	{
																		"name": "buf",
																		"nativeSrc": "3271:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "3271:3:0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3265:5:0",
																	"nodeType": "YulIdentifier",
																	"src": "3265:5:0"
																},
																"nativeSrc": "3265:10:0",
																"nodeType": "YulFunctionCall",
																"src": "3265:10:0"
															},
															"variables": [
																{
																	"name": "bufptr",
																	"nativeSrc": "3255:6:0",
																	"nodeType": "YulTypedName",
																	"src": "3255:6:0",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3334:27:0",
															"nodeType": "YulVariableDeclaration",
															"src": "3334:27:0",
															"value": {
																"arguments": [
																	{
																		"name": "bufptr",
																		"nativeSrc": "3354:6:0",
																		"nodeType": "YulIdentifier",
																		"src": "3354:6:0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3348:5:0",
																	"nodeType": "YulIdentifier",
																	"src": "3348:5:0"
																},
																"nativeSrc": "3348:13:0",
																"nodeType": "YulFunctionCall",
																"src": "3348:13:0"
															},
															"variables": [
																{
																	"name": "buflen",
																	"nativeSrc": "3338:6:0",
																	"nodeType": "YulTypedName",
																	"src": "3338:6:0",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3453:33:0",
															"nodeType": "YulAssignment",
															"src": "3453:33:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "bufptr",
																				"nativeSrc": "3469:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "3469:6:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3477:2:0",
																				"nodeType": "YulLiteral",
																				"src": "3477:2:0",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3465:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "3465:3:0"
																		},
																		"nativeSrc": "3465:15:0",
																		"nodeType": "YulFunctionCall",
																		"src": "3465:15:0"
																	},
																	{
																		"name": "off",
																		"nativeSrc": "3482:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "3482:3:0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3461:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "3461:3:0"
																},
																"nativeSrc": "3461:25:0",
																"nodeType": "YulFunctionCall",
																"src": "3461:25:0"
															},
															"variableNames": [
																{
																	"name": "dest",
																	"nativeSrc": "3453:4:0",
																	"nodeType": "YulIdentifier",
																	"src": "3453:4:0"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3586:61:0",
																"nodeType": "YulBlock",
																"src": "3586:61:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "bufptr",
																					"nativeSrc": "3611:6:0",
																					"nodeType": "YulIdentifier",
																					"src": "3611:6:0"
																				},
																				{
																					"arguments": [
																						{
																							"name": "len",
																							"nativeSrc": "3623:3:0",
																							"nodeType": "YulIdentifier",
																							"src": "3623:3:0"
																						},
																						{
																							"name": "off",
																							"nativeSrc": "3628:3:0",
																							"nodeType": "YulIdentifier",
																							"src": "3628:3:0"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3619:3:0",
																						"nodeType": "YulIdentifier",
																						"src": "3619:3:0"
																					},
																					"nativeSrc": "3619:13:0",
																					"nodeType": "YulFunctionCall",
																					"src": "3619:13:0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3604:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "3604:6:0"
																			},
																			"nativeSrc": "3604:29:0",
																			"nodeType": "YulFunctionCall",
																			"src": "3604:29:0"
																		},
																		"nativeSrc": "3604:29:0",
																		"nodeType": "YulExpressionStatement",
																		"src": "3604:29:0"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "len",
																				"nativeSrc": "3567:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "3567:3:0"
																			},
																			{
																				"name": "off",
																				"nativeSrc": "3572:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "3572:3:0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3563:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "3563:3:0"
																		},
																		"nativeSrc": "3563:13:0",
																		"nodeType": "YulFunctionCall",
																		"src": "3563:13:0"
																	},
																	{
																		"name": "buflen",
																		"nativeSrc": "3578:6:0",
																		"nodeType": "YulIdentifier",
																		"src": "3578:6:0"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3560:2:0",
																	"nodeType": "YulIdentifier",
																	"src": "3560:2:0"
																},
																"nativeSrc": "3560:25:0",
																"nodeType": "YulFunctionCall",
																"src": "3560:25:0"
															},
															"nativeSrc": "3557:90:0",
															"nodeType": "YulIf",
															"src": "3557:90:0"
														},
														{
															"nativeSrc": "3660:20:0",
															"nodeType": "YulAssignment",
															"src": "3660:20:0",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3671:4:0",
																		"nodeType": "YulIdentifier",
																		"src": "3671:4:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3677:2:0",
																		"nodeType": "YulLiteral",
																		"src": "3677:2:0",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3667:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "3667:3:0"
																},
																"nativeSrc": "3667:13:0",
																"nodeType": "YulFunctionCall",
																"src": "3667:13:0"
															},
															"variableNames": [
																{
																	"name": "src",
																	"nativeSrc": "3660:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "3660:3:0"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 136,
														"isOffset": false,
														"isSlot": false,
														"src": "3271:3:0",
														"valueSize": 1
													},
													{
														"declaration": 140,
														"isOffset": false,
														"isSlot": false,
														"src": "3671:4:0",
														"valueSize": 1
													},
													{
														"declaration": 177,
														"isOffset": false,
														"isSlot": false,
														"src": "3453:4:0",
														"valueSize": 1
													},
													{
														"declaration": 142,
														"isOffset": false,
														"isSlot": false,
														"src": "3567:3:0",
														"valueSize": 1
													},
													{
														"declaration": 142,
														"isOffset": false,
														"isSlot": false,
														"src": "3623:3:0",
														"valueSize": 1
													},
													{
														"declaration": 138,
														"isOffset": false,
														"isSlot": false,
														"src": "3482:3:0",
														"valueSize": 1
													},
													{
														"declaration": 138,
														"isOffset": false,
														"isSlot": false,
														"src": "3572:3:0",
														"valueSize": 1
													},
													{
														"declaration": 138,
														"isOffset": false,
														"isSlot": false,
														"src": "3628:3:0",
														"valueSize": 1
													},
													{
														"declaration": 180,
														"isOffset": false,
														"isSlot": false,
														"src": "3660:3:0",
														"valueSize": 1
													}
												],
												"id": 182,
												"nodeType": "InlineAssembly",
												"src": "3179:511:0"
											},
											{
												"body": {
													"id": 199,
													"nodeType": "Block",
													"src": "3779:136:0",
													"statements": [
														{
															"AST": {
																"nativeSrc": "3802:56:0",
																"nodeType": "YulBlock",
																"src": "3802:56:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dest",
																					"nativeSrc": "3827:4:0",
																					"nodeType": "YulIdentifier",
																					"src": "3827:4:0"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nativeSrc": "3839:3:0",
																							"nodeType": "YulIdentifier",
																							"src": "3839:3:0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "3833:5:0",
																						"nodeType": "YulIdentifier",
																						"src": "3833:5:0"
																					},
																					"nativeSrc": "3833:10:0",
																					"nodeType": "YulFunctionCall",
																					"src": "3833:10:0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3820:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "3820:6:0"
																			},
																			"nativeSrc": "3820:24:0",
																			"nodeType": "YulFunctionCall",
																			"src": "3820:24:0"
																		},
																		"nativeSrc": "3820:24:0",
																		"nodeType": "YulExpressionStatement",
																		"src": "3820:24:0"
																	}
																]
															},
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 177,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "3827:4:0",
																	"valueSize": 1
																},
																{
																	"declaration": 180,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "3839:3:0",
																	"valueSize": 1
																}
															],
															"id": 190,
															"nodeType": "InlineAssembly",
															"src": "3793:65:0"
														},
														{
															"expression": {
																"id": 193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 191,
																	"name": "dest",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 177,
																	"src": "3871:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "3332",
																	"id": 192,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3879:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "3871:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 194,
															"nodeType": "ExpressionStatement",
															"src": "3871:10:0"
														},
														{
															"expression": {
																"id": 197,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 195,
																	"name": "src",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 180,
																	"src": "3895:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "3332",
																	"id": 196,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3902:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "3895:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 198,
															"nodeType": "ExpressionStatement",
															"src": "3895:9:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 183,
														"name": "len",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 142,
														"src": "3757:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "3332",
														"id": 184,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3764:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "3757:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 200,
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 188,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 186,
															"name": "len",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 142,
															"src": "3768:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "-=",
														"rightHandSide": {
															"hexValue": "3332",
															"id": 187,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3775:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "32"
														},
														"src": "3768:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 189,
													"nodeType": "ExpressionStatement",
													"src": "3768:9:0"
												},
												"nodeType": "ForStatement",
												"src": "3750:165:0"
											},
											{
												"id": 214,
												"nodeType": "UncheckedBlock",
												"src": "3957:272:0",
												"statements": [
													{
														"assignments": [
															202
														],
														"declarations": [
															{
																"constant": false,
																"id": 202,
																"mutability": "mutable",
																"name": "mask",
																"nameLocation": "3986:4:0",
																"nodeType": "VariableDeclaration",
																"scope": 214,
																"src": "3981:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 201,
																	"name": "uint",
																	"nodeType": "ElementaryTypeName",
																	"src": "3981:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 212,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 208,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "323536",
																			"id": 203,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3994:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_256_by_1",
																				"typeString": "int_const 256"
																			},
																			"value": "256"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "**",
																		"rightExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 206,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3332",
																						"id": 204,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4002:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_32_by_1",
																							"typeString": "int_const 32"
																						},
																						"value": "32"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"id": 205,
																						"name": "len",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 142,
																						"src": "4007:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "4002:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 207,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "4001:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3994:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 209,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3993:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"hexValue": "31",
																"id": 210,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4015:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "3993:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3981:35:0"
													},
													{
														"AST": {
															"nativeSrc": "4039:180:0",
															"nodeType": "YulBlock",
															"src": "4039:180:0",
															"statements": [
																{
																	"nativeSrc": "4057:41:0",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4057:41:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "src",
																						"nativeSrc": "4082:3:0",
																						"nodeType": "YulIdentifier",
																						"src": "4082:3:0"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nativeSrc": "4076:5:0",
																					"nodeType": "YulIdentifier",
																					"src": "4076:5:0"
																				},
																				"nativeSrc": "4076:10:0",
																				"nodeType": "YulFunctionCall",
																				"src": "4076:10:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mask",
																						"nativeSrc": "4092:4:0",
																						"nodeType": "YulIdentifier",
																						"src": "4092:4:0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4088:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "4088:3:0"
																				},
																				"nativeSrc": "4088:9:0",
																				"nodeType": "YulFunctionCall",
																				"src": "4088:9:0"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4072:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "4072:3:0"
																		},
																		"nativeSrc": "4072:26:0",
																		"nodeType": "YulFunctionCall",
																		"src": "4072:26:0"
																	},
																	"variables": [
																		{
																			"name": "srcpart",
																			"nativeSrc": "4061:7:0",
																			"nodeType": "YulTypedName",
																			"src": "4061:7:0",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4115:38:0",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4115:38:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "dest",
																						"nativeSrc": "4141:4:0",
																						"nodeType": "YulIdentifier",
																						"src": "4141:4:0"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nativeSrc": "4135:5:0",
																					"nodeType": "YulIdentifier",
																					"src": "4135:5:0"
																				},
																				"nativeSrc": "4135:11:0",
																				"nodeType": "YulFunctionCall",
																				"src": "4135:11:0"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "4148:4:0",
																				"nodeType": "YulIdentifier",
																				"src": "4148:4:0"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4131:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "4131:3:0"
																		},
																		"nativeSrc": "4131:22:0",
																		"nodeType": "YulFunctionCall",
																		"src": "4131:22:0"
																	},
																	"variables": [
																		{
																			"name": "destpart",
																			"nativeSrc": "4119:8:0",
																			"nodeType": "YulTypedName",
																			"src": "4119:8:0",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "dest",
																				"nativeSrc": "4177:4:0",
																				"nodeType": "YulIdentifier",
																				"src": "4177:4:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "destpart",
																						"nativeSrc": "4186:8:0",
																						"nodeType": "YulIdentifier",
																						"src": "4186:8:0"
																					},
																					{
																						"name": "srcpart",
																						"nativeSrc": "4196:7:0",
																						"nodeType": "YulIdentifier",
																						"src": "4196:7:0"
																					}
																				],
																				"functionName": {
																					"name": "or",
																					"nativeSrc": "4183:2:0",
																					"nodeType": "YulIdentifier",
																					"src": "4183:2:0"
																				},
																				"nativeSrc": "4183:21:0",
																				"nodeType": "YulFunctionCall",
																				"src": "4183:21:0"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nativeSrc": "4170:6:0",
																			"nodeType": "YulIdentifier",
																			"src": "4170:6:0"
																		},
																		"nativeSrc": "4170:35:0",
																		"nodeType": "YulFunctionCall",
																		"src": "4170:35:0"
																	},
																	"nativeSrc": "4170:35:0",
																	"nodeType": "YulExpressionStatement",
																	"src": "4170:35:0"
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 177,
																"isOffset": false,
																"isSlot": false,
																"src": "4141:4:0",
																"valueSize": 1
															},
															{
																"declaration": 177,
																"isOffset": false,
																"isSlot": false,
																"src": "4177:4:0",
																"valueSize": 1
															},
															{
																"declaration": 202,
																"isOffset": false,
																"isSlot": false,
																"src": "4092:4:0",
																"valueSize": 1
															},
															{
																"declaration": 202,
																"isOffset": false,
																"isSlot": false,
																"src": "4148:4:0",
																"valueSize": 1
															},
															{
																"declaration": 180,
																"isOffset": false,
																"isSlot": false,
																"src": "4082:3:0",
																"valueSize": 1
															}
														],
														"id": 213,
														"nodeType": "InlineAssembly",
														"src": "4030:189:0"
													}
												]
											},
											{
												"expression": {
													"id": 215,
													"name": "buf",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 136,
													"src": "4246:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
														"typeString": "struct Buffer.buffer memory"
													}
												},
												"functionReturnParameters": 147,
												"id": 216,
												"nodeType": "Return",
												"src": "4239:10:0"
											}
										]
									},
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "2520:349:0",
										"text": " @dev Writes a byte string to a buffer. Resizes if doing so would exceed\n      the capacity of the buffer.\n @param buf The buffer to append to.\n @param off The start offset to write to.\n @param data The data to append.\n @param len The number of bytes to copy.\n @return The original buffer, for chaining."
									},
									"id": 218,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "write",
									"nameLocation": "2883:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "buf",
												"nameLocation": "2903:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "2889:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"id": 135,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 134,
														"name": "buffer",
														"nameLocations": [
															"2889:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 8,
														"src": "2889:6:0"
													},
													"referencedDeclaration": 8,
													"src": "2889:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$8_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "off",
												"nameLocation": "2913:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "2908:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 137,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2908:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2931:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "2918:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 139,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2918:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "len",
												"nameLocation": "2942:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "2937:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2937:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2888:58:0"
									},
									"returnParameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "2969:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"id": 145,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 144,
														"name": "buffer",
														"nameLocations": [
															"2969:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 8,
														"src": "2969:6:0"
													},
													"referencedDeclaration": 8,
													"src": "2969:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$8_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2968:15:0"
									},
									"scope": 522,
									"src": "2874:1382:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 241,
										"nodeType": "Block",
										"src": "4672:61:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 233,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 222,
															"src": "4695:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															}
														},
														{
															"expression": {
																"expression": {
																	"id": 234,
																	"name": "buf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 222,
																	"src": "4700:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
																		"typeString": "struct Buffer.buffer memory"
																	}
																},
																"id": 235,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4704:3:0",
																"memberName": "buf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 5,
																"src": "4700:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 236,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4708:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4700:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 237,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4716:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 238,
															"name": "len",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 226,
															"src": "4722:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 232,
														"name": "write",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															218,
															378
														],
														"referencedDeclaration": 218,
														"src": "4689:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$8_memory_ptr_$_t_uint256_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_struct$_buffer_$8_memory_ptr_$",
															"typeString": "function (struct Buffer.buffer memory,uint256,bytes memory,uint256) pure returns (struct Buffer.buffer memory)"
														}
													},
													"id": 239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4689:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
														"typeString": "struct Buffer.buffer memory"
													}
												},
												"functionReturnParameters": 231,
												"id": 240,
												"nodeType": "Return",
												"src": "4682:44:0"
											}
										]
									},
									"documentation": {
										"id": 219,
										"nodeType": "StructuredDocumentation",
										"src": "4262:303:0",
										"text": " @dev Appends a byte string to a buffer. Resizes if doing so would exceed\n      the capacity of the buffer.\n @param buf The buffer to append to.\n @param data The data to append.\n @param len The number of bytes to copy.\n @return The original buffer, for chaining."
									},
									"id": 242,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "append",
									"nameLocation": "4579:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "buf",
												"nameLocation": "4600:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 242,
												"src": "4586:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"id": 221,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 220,
														"name": "buffer",
														"nameLocations": [
															"4586:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 8,
														"src": "4586:6:0"
													},
													"referencedDeclaration": 8,
													"src": "4586:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$8_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4618:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 242,
												"src": "4605:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 223,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4605:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "len",
												"nameLocation": "4629:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 242,
												"src": "4624:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4624:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4585:48:0"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 242,
												"src": "4657:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"id": 229,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 228,
														"name": "buffer",
														"nameLocations": [
															"4657:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 8,
														"src": "4657:6:0"
													},
													"referencedDeclaration": 8,
													"src": "4657:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$8_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4656:15:0"
									},
									"scope": 522,
									"src": "4570:163:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 264,
										"nodeType": "Block",
										"src": "5093:69:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 255,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 246,
															"src": "5116:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															}
														},
														{
															"expression": {
																"expression": {
																	"id": 256,
																	"name": "buf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 246,
																	"src": "5121:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
																		"typeString": "struct Buffer.buffer memory"
																	}
																},
																"id": 257,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5125:3:0",
																"memberName": "buf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 5,
																"src": "5121:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5129:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "5121:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 259,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "5137:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"expression": {
																"id": 260,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 248,
																"src": "5143:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5148:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "5143:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 254,
														"name": "write",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															218,
															378
														],
														"referencedDeclaration": 218,
														"src": "5110:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$8_memory_ptr_$_t_uint256_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_struct$_buffer_$8_memory_ptr_$",
															"typeString": "function (struct Buffer.buffer memory,uint256,bytes memory,uint256) pure returns (struct Buffer.buffer memory)"
														}
													},
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5110:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
														"typeString": "struct Buffer.buffer memory"
													}
												},
												"functionReturnParameters": 253,
												"id": 263,
												"nodeType": "Return",
												"src": "5103:52:0"
											}
										]
									},
									"documentation": {
										"id": 243,
										"nodeType": "StructuredDocumentation",
										"src": "4739:257:0",
										"text": " @dev Appends a byte string to a buffer. Resizes if doing so would exceed\n      the capacity of the buffer.\n @param buf The buffer to append to.\n @param data The data to append.\n @return The original buffer, for chaining."
									},
									"id": 265,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "append",
									"nameLocation": "5010:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "buf",
												"nameLocation": "5031:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "5017:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"id": 245,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 244,
														"name": "buffer",
														"nameLocations": [
															"5017:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 8,
														"src": "5017:6:0"
													},
													"referencedDeclaration": 8,
													"src": "5017:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$8_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5049:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "5036:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 247,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5036:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5016:38:0"
									},
									"returnParameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "5078:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"id": 251,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 250,
														"name": "buffer",
														"nameLocations": [
															"5078:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 8,
														"src": "5078:6:0"
													},
													"referencedDeclaration": 8,
													"src": "5078:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$8_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5077:15:0"
									},
									"scope": 522,
									"src": "5001:161:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 296,
										"nodeType": "Block",
										"src": "5572:617:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 279,
														"name": "off",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 271,
														"src": "5586:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"expression": {
															"id": 280,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 269,
															"src": "5593:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															}
														},
														"id": 281,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5597:8:0",
														"memberName": "capacity",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 7,
														"src": "5593:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5586:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 292,
												"nodeType": "IfStatement",
												"src": "5582:79:0",
												"trueBody": {
													"id": 291,
													"nodeType": "Block",
													"src": "5607:54:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 284,
																		"name": "buf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 269,
																		"src": "5628:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
																			"typeString": "struct Buffer.buffer memory"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 288,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 285,
																				"name": "buf",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 269,
																				"src": "5633:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
																					"typeString": "struct Buffer.buffer memory"
																				}
																			},
																			"id": 286,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5637:8:0",
																			"memberName": "capacity",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 7,
																			"src": "5633:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "32",
																			"id": 287,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5648:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "5633:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
																			"typeString": "struct Buffer.buffer memory"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 283,
																	"name": "resize",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 99,
																	"src": "5621:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$8_memory_ptr_$_t_uint256_$returns$__$",
																		"typeString": "function (struct Buffer.buffer memory,uint256) pure"
																	}
																},
																"id": 289,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5621:29:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 290,
															"nodeType": "ExpressionStatement",
															"src": "5621:29:0"
														}
													]
												}
											},
											{
												"AST": {
													"nativeSrc": "5680:483:0",
													"nodeType": "YulBlock",
													"src": "5680:483:0",
													"statements": [
														{
															"nativeSrc": "5743:24:0",
															"nodeType": "YulVariableDeclaration",
															"src": "5743:24:0",
															"value": {
																"arguments": [
																	{
																		"name": "buf",
																		"nativeSrc": "5763:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "5763:3:0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5757:5:0",
																	"nodeType": "YulIdentifier",
																	"src": "5757:5:0"
																},
																"nativeSrc": "5757:10:0",
																"nodeType": "YulFunctionCall",
																"src": "5757:10:0"
															},
															"variables": [
																{
																	"name": "bufptr",
																	"nativeSrc": "5747:6:0",
																	"nodeType": "YulTypedName",
																	"src": "5747:6:0",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5826:27:0",
															"nodeType": "YulVariableDeclaration",
															"src": "5826:27:0",
															"value": {
																"arguments": [
																	{
																		"name": "bufptr",
																		"nativeSrc": "5846:6:0",
																		"nodeType": "YulIdentifier",
																		"src": "5846:6:0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5840:5:0",
																	"nodeType": "YulIdentifier",
																	"src": "5840:5:0"
																},
																"nativeSrc": "5840:13:0",
																"nodeType": "YulFunctionCall",
																"src": "5840:13:0"
															},
															"variables": [
																{
																	"name": "buflen",
																	"nativeSrc": "5830:6:0",
																	"nodeType": "YulTypedName",
																	"src": "5830:6:0",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5936:37:0",
															"nodeType": "YulVariableDeclaration",
															"src": "5936:37:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "bufptr",
																				"nativeSrc": "5956:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "5956:6:0"
																			},
																			{
																				"name": "off",
																				"nativeSrc": "5964:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "5964:3:0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5952:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "5952:3:0"
																		},
																		"nativeSrc": "5952:16:0",
																		"nodeType": "YulFunctionCall",
																		"src": "5952:16:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5970:2:0",
																		"nodeType": "YulLiteral",
																		"src": "5970:2:0",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5948:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "5948:3:0"
																},
																"nativeSrc": "5948:25:0",
																"nodeType": "YulFunctionCall",
																"src": "5948:25:0"
															},
															"variables": [
																{
																	"name": "dest",
																	"nativeSrc": "5940:4:0",
																	"nodeType": "YulTypedName",
																	"src": "5940:4:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dest",
																		"nativeSrc": "5994:4:0",
																		"nodeType": "YulIdentifier",
																		"src": "5994:4:0"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "6000:4:0",
																		"nodeType": "YulIdentifier",
																		"src": "6000:4:0"
																	}
																],
																"functionName": {
																	"name": "mstore8",
																	"nativeSrc": "5986:7:0",
																	"nodeType": "YulIdentifier",
																	"src": "5986:7:0"
																},
																"nativeSrc": "5986:19:0",
																"nodeType": "YulFunctionCall",
																"src": "5986:19:0"
															},
															"nativeSrc": "5986:19:0",
															"nodeType": "YulExpressionStatement",
															"src": "5986:19:0"
														},
														{
															"body": {
																"nativeSrc": "6091:62:0",
																"nodeType": "YulBlock",
																"src": "6091:62:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "bufptr",
																					"nativeSrc": "6116:6:0",
																					"nodeType": "YulIdentifier",
																					"src": "6116:6:0"
																				},
																				{
																					"arguments": [
																						{
																							"name": "buflen",
																							"nativeSrc": "6128:6:0",
																							"nodeType": "YulIdentifier",
																							"src": "6128:6:0"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "6136:1:0",
																							"nodeType": "YulLiteral",
																							"src": "6136:1:0",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6124:3:0",
																						"nodeType": "YulIdentifier",
																						"src": "6124:3:0"
																					},
																					"nativeSrc": "6124:14:0",
																					"nodeType": "YulFunctionCall",
																					"src": "6124:14:0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6109:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "6109:6:0"
																			},
																			"nativeSrc": "6109:30:0",
																			"nodeType": "YulFunctionCall",
																			"src": "6109:30:0"
																		},
																		"nativeSrc": "6109:30:0",
																		"nodeType": "YulExpressionStatement",
																		"src": "6109:30:0"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "off",
																		"nativeSrc": "6078:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "6078:3:0"
																	},
																	{
																		"name": "buflen",
																		"nativeSrc": "6083:6:0",
																		"nodeType": "YulIdentifier",
																		"src": "6083:6:0"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6075:2:0",
																	"nodeType": "YulIdentifier",
																	"src": "6075:2:0"
																},
																"nativeSrc": "6075:15:0",
																"nodeType": "YulFunctionCall",
																"src": "6075:15:0"
															},
															"nativeSrc": "6072:81:0",
															"nodeType": "YulIf",
															"src": "6072:81:0"
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 269,
														"isOffset": false,
														"isSlot": false,
														"src": "5763:3:0",
														"valueSize": 1
													},
													{
														"declaration": 273,
														"isOffset": false,
														"isSlot": false,
														"src": "6000:4:0",
														"valueSize": 1
													},
													{
														"declaration": 271,
														"isOffset": false,
														"isSlot": false,
														"src": "5964:3:0",
														"valueSize": 1
													},
													{
														"declaration": 271,
														"isOffset": false,
														"isSlot": false,
														"src": "6078:3:0",
														"valueSize": 1
													}
												],
												"id": 293,
												"nodeType": "InlineAssembly",
												"src": "5671:492:0"
											},
											{
												"expression": {
													"id": 294,
													"name": "buf",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 269,
													"src": "6179:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
														"typeString": "struct Buffer.buffer memory"
													}
												},
												"functionReturnParameters": 278,
												"id": 295,
												"nodeType": "Return",
												"src": "6172:10:0"
											}
										]
									},
									"documentation": {
										"id": 266,
										"nodeType": "StructuredDocumentation",
										"src": "5168:301:0",
										"text": " @dev Writes a byte to the buffer. Resizes if doing so would exceed the\n      capacity of the buffer.\n @param buf The buffer to append to.\n @param off The offset to write the byte at.\n @param data The data to append.\n @return The original buffer, for chaining."
									},
									"id": 297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "writeUint8",
									"nameLocation": "5483:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "buf",
												"nameLocation": "5508:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "5494:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"id": 268,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 267,
														"name": "buffer",
														"nameLocations": [
															"5494:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 8,
														"src": "5494:6:0"
													},
													"referencedDeclaration": 8,
													"src": "5494:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$8_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "off",
												"nameLocation": "5518:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "5513:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 270,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5513:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5529:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "5523:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 272,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5523:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5493:41:0"
									},
									"returnParameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "5557:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"id": 276,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 275,
														"name": "buffer",
														"nameLocations": [
															"5557:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 8,
														"src": "5557:6:0"
													},
													"referencedDeclaration": 8,
													"src": "5557:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$8_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5556:15:0"
									},
									"scope": 522,
									"src": "5474:715:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 317,
										"nodeType": "Block",
										"src": "6541:61:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 310,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 301,
															"src": "6569:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															}
														},
														{
															"expression": {
																"expression": {
																	"id": 311,
																	"name": "buf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 301,
																	"src": "6574:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
																		"typeString": "struct Buffer.buffer memory"
																	}
																},
																"id": 312,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6578:3:0",
																"memberName": "buf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 5,
																"src": "6574:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 313,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6582:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "6574:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 314,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 303,
															"src": "6590:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 309,
														"name": "writeUint8",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 297,
														"src": "6558:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$8_memory_ptr_$_t_uint256_$_t_uint8_$returns$_t_struct$_buffer_$8_memory_ptr_$",
															"typeString": "function (struct Buffer.buffer memory,uint256,uint8) pure returns (struct Buffer.buffer memory)"
														}
													},
													"id": 315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6558:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
														"typeString": "struct Buffer.buffer memory"
													}
												},
												"functionReturnParameters": 308,
												"id": 316,
												"nodeType": "Return",
												"src": "6551:44:0"
											}
										]
									},
									"documentation": {
										"id": 298,
										"nodeType": "StructuredDocumentation",
										"src": "6195:252:0",
										"text": " @dev Appends a byte to the buffer. Resizes if doing so would exceed the\n      capacity of the buffer.\n @param buf The buffer to append to.\n @param data The data to append.\n @return The original buffer, for chaining."
									},
									"id": 318,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "appendUint8",
									"nameLocation": "6461:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "buf",
												"nameLocation": "6487:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "6473:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"id": 300,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 299,
														"name": "buffer",
														"nameLocations": [
															"6473:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 8,
														"src": "6473:6:0"
													},
													"referencedDeclaration": 8,
													"src": "6473:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$8_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6498:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "6492:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 302,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6492:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6472:31:0"
									},
									"returnParameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "6526:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"id": 306,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 305,
														"name": "buffer",
														"nameLocations": [
															"6526:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 8,
														"src": "6526:6:0"
													},
													"referencedDeclaration": 8,
													"src": "6526:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$8_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6525:15:0"
									},
									"scope": 522,
									"src": "6452:150:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 377,
										"nodeType": "Block",
										"src": "7079:783:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 336,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 334,
															"name": "len",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 328,
															"src": "7093:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 335,
															"name": "off",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 324,
															"src": "7099:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7093:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"id": 337,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 322,
															"src": "7105:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															}
														},
														"id": 338,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7109:8:0",
														"memberName": "capacity",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 7,
														"src": "7105:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7093:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 351,
												"nodeType": "IfStatement",
												"src": "7089:83:0",
												"trueBody": {
													"id": 350,
													"nodeType": "Block",
													"src": "7119:53:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 341,
																		"name": "buf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 322,
																		"src": "7140:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
																			"typeString": "struct Buffer.buffer memory"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 347,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 344,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 342,
																						"name": "len",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 328,
																						"src": "7146:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"id": 343,
																						"name": "off",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 324,
																						"src": "7152:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "7146:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 345,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "7145:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "32",
																			"id": 346,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7159:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "7145:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
																			"typeString": "struct Buffer.buffer memory"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 340,
																	"name": "resize",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 99,
																	"src": "7133:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$8_memory_ptr_$_t_uint256_$returns$__$",
																		"typeString": "function (struct Buffer.buffer memory,uint256) pure"
																	}
																},
																"id": 348,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7133:28:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 349,
															"nodeType": "ExpressionStatement",
															"src": "7133:28:0"
														}
													]
												}
											},
											{
												"id": 374,
												"nodeType": "UncheckedBlock",
												"src": "7182:654:0",
												"statements": [
													{
														"assignments": [
															353
														],
														"declarations": [
															{
																"constant": false,
																"id": 353,
																"mutability": "mutable",
																"name": "mask",
																"nameLocation": "7211:4:0",
																"nodeType": "VariableDeclaration",
																"scope": 374,
																"src": "7206:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 352,
																	"name": "uint",
																	"nodeType": "ElementaryTypeName",
																	"src": "7206:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 360,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 356,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "323536",
																			"id": 354,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7219:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_256_by_1",
																				"typeString": "int_const 256"
																			},
																			"value": "256"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "**",
																		"rightExpression": {
																			"id": 355,
																			"name": "len",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 328,
																			"src": "7226:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7219:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 357,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "7218:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"hexValue": "31",
																"id": 358,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7233:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "7218:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "7206:28:0"
													},
													{
														"expression": {
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 361,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 326,
																"src": "7280:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 362,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 326,
																	"src": "7287:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 368,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "38",
																				"id": 363,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7296:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 366,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "3332",
																							"id": 364,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "7301:2:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_32_by_1",
																								"typeString": "int_const 32"
																							},
																							"value": "32"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"id": 365,
																							"name": "len",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 328,
																							"src": "7306:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "7301:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 367,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "7300:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7296:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 369,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7295:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7287:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "7280:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 372,
														"nodeType": "ExpressionStatement",
														"src": "7280:31:0"
													},
													{
														"AST": {
															"nativeSrc": "7334:492:0",
															"nodeType": "YulBlock",
															"src": "7334:492:0",
															"statements": [
																{
																	"nativeSrc": "7405:24:0",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7405:24:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "buf",
																				"nativeSrc": "7425:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "7425:3:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7419:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "7419:5:0"
																		},
																		"nativeSrc": "7419:10:0",
																		"nodeType": "YulFunctionCall",
																		"src": "7419:10:0"
																	},
																	"variables": [
																		{
																			"name": "bufptr",
																			"nativeSrc": "7409:6:0",
																			"nodeType": "YulTypedName",
																			"src": "7409:6:0",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7526:38:0",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7526:38:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "bufptr",
																						"nativeSrc": "7546:6:0",
																						"nodeType": "YulIdentifier",
																						"src": "7546:6:0"
																					},
																					{
																						"name": "off",
																						"nativeSrc": "7554:3:0",
																						"nodeType": "YulIdentifier",
																						"src": "7554:3:0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7542:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "7542:3:0"
																				},
																				"nativeSrc": "7542:16:0",
																				"nodeType": "YulFunctionCall",
																				"src": "7542:16:0"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "7560:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "7560:3:0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7538:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "7538:3:0"
																		},
																		"nativeSrc": "7538:26:0",
																		"nodeType": "YulFunctionCall",
																		"src": "7538:26:0"
																	},
																	"variables": [
																		{
																			"name": "dest",
																			"nativeSrc": "7530:4:0",
																			"nodeType": "YulTypedName",
																			"src": "7530:4:0",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "dest",
																				"nativeSrc": "7588:4:0",
																				"nodeType": "YulIdentifier",
																				"src": "7588:4:0"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "dest",
																										"nativeSrc": "7607:4:0",
																										"nodeType": "YulIdentifier",
																										"src": "7607:4:0"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "7601:5:0",
																									"nodeType": "YulIdentifier",
																									"src": "7601:5:0"
																								},
																								"nativeSrc": "7601:11:0",
																								"nodeType": "YulFunctionCall",
																								"src": "7601:11:0"
																							},
																							{
																								"arguments": [
																									{
																										"name": "mask",
																										"nativeSrc": "7618:4:0",
																										"nodeType": "YulIdentifier",
																										"src": "7618:4:0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "7614:3:0",
																									"nodeType": "YulIdentifier",
																									"src": "7614:3:0"
																								},
																								"nativeSrc": "7614:9:0",
																								"nodeType": "YulFunctionCall",
																								"src": "7614:9:0"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "7597:3:0",
																							"nodeType": "YulIdentifier",
																							"src": "7597:3:0"
																						},
																						"nativeSrc": "7597:27:0",
																						"nodeType": "YulFunctionCall",
																						"src": "7597:27:0"
																					},
																					{
																						"name": "data",
																						"nativeSrc": "7626:4:0",
																						"nodeType": "YulIdentifier",
																						"src": "7626:4:0"
																					}
																				],
																				"functionName": {
																					"name": "or",
																					"nativeSrc": "7594:2:0",
																					"nodeType": "YulIdentifier",
																					"src": "7594:2:0"
																				},
																				"nativeSrc": "7594:37:0",
																				"nodeType": "YulFunctionCall",
																				"src": "7594:37:0"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nativeSrc": "7581:6:0",
																			"nodeType": "YulIdentifier",
																			"src": "7581:6:0"
																		},
																		"nativeSrc": "7581:51:0",
																		"nodeType": "YulFunctionCall",
																		"src": "7581:51:0"
																	},
																	"nativeSrc": "7581:51:0",
																	"nodeType": "YulExpressionStatement",
																	"src": "7581:51:0"
																},
																{
																	"body": {
																		"nativeSrc": "7743:69:0",
																		"nodeType": "YulBlock",
																		"src": "7743:69:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "bufptr",
																							"nativeSrc": "7772:6:0",
																							"nodeType": "YulIdentifier",
																							"src": "7772:6:0"
																						},
																						{
																							"arguments": [
																								{
																									"name": "off",
																									"nativeSrc": "7784:3:0",
																									"nodeType": "YulIdentifier",
																									"src": "7784:3:0"
																								},
																								{
																									"name": "len",
																									"nativeSrc": "7789:3:0",
																									"nodeType": "YulIdentifier",
																									"src": "7789:3:0"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "7780:3:0",
																								"nodeType": "YulIdentifier",
																								"src": "7780:3:0"
																							},
																							"nativeSrc": "7780:13:0",
																							"nodeType": "YulFunctionCall",
																							"src": "7780:13:0"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nativeSrc": "7765:6:0",
																						"nodeType": "YulIdentifier",
																						"src": "7765:6:0"
																					},
																					"nativeSrc": "7765:29:0",
																					"nodeType": "YulFunctionCall",
																					"src": "7765:29:0"
																				},
																				"nativeSrc": "7765:29:0",
																				"nodeType": "YulExpressionStatement",
																				"src": "7765:29:0"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "off",
																						"nativeSrc": "7717:3:0",
																						"nodeType": "YulIdentifier",
																						"src": "7717:3:0"
																					},
																					{
																						"name": "len",
																						"nativeSrc": "7722:3:0",
																						"nodeType": "YulIdentifier",
																						"src": "7722:3:0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7713:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "7713:3:0"
																				},
																				"nativeSrc": "7713:13:0",
																				"nodeType": "YulFunctionCall",
																				"src": "7713:13:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "bufptr",
																						"nativeSrc": "7734:6:0",
																						"nodeType": "YulIdentifier",
																						"src": "7734:6:0"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nativeSrc": "7728:5:0",
																					"nodeType": "YulIdentifier",
																					"src": "7728:5:0"
																				},
																				"nativeSrc": "7728:13:0",
																				"nodeType": "YulFunctionCall",
																				"src": "7728:13:0"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7710:2:0",
																			"nodeType": "YulIdentifier",
																			"src": "7710:2:0"
																		},
																		"nativeSrc": "7710:32:0",
																		"nodeType": "YulFunctionCall",
																		"src": "7710:32:0"
																	},
																	"nativeSrc": "7707:105:0",
																	"nodeType": "YulIf",
																	"src": "7707:105:0"
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 322,
																"isOffset": false,
																"isSlot": false,
																"src": "7425:3:0",
																"valueSize": 1
															},
															{
																"declaration": 326,
																"isOffset": false,
																"isSlot": false,
																"src": "7626:4:0",
																"valueSize": 1
															},
															{
																"declaration": 328,
																"isOffset": false,
																"isSlot": false,
																"src": "7560:3:0",
																"valueSize": 1
															},
															{
																"declaration": 328,
																"isOffset": false,
																"isSlot": false,
																"src": "7722:3:0",
																"valueSize": 1
															},
															{
																"declaration": 328,
																"isOffset": false,
																"isSlot": false,
																"src": "7789:3:0",
																"valueSize": 1
															},
															{
																"declaration": 353,
																"isOffset": false,
																"isSlot": false,
																"src": "7618:4:0",
																"valueSize": 1
															},
															{
																"declaration": 324,
																"isOffset": false,
																"isSlot": false,
																"src": "7554:3:0",
																"valueSize": 1
															},
															{
																"declaration": 324,
																"isOffset": false,
																"isSlot": false,
																"src": "7717:3:0",
																"valueSize": 1
															},
															{
																"declaration": 324,
																"isOffset": false,
																"isSlot": false,
																"src": "7784:3:0",
																"valueSize": 1
															}
														],
														"id": 373,
														"nodeType": "InlineAssembly",
														"src": "7325:501:0"
													}
												]
											},
											{
												"expression": {
													"id": 375,
													"name": "buf",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 322,
													"src": "7852:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
														"typeString": "struct Buffer.buffer memory"
													}
												},
												"functionReturnParameters": 333,
												"id": 376,
												"nodeType": "Return",
												"src": "7845:10:0"
											}
										]
									},
									"documentation": {
										"id": 319,
										"nodeType": "StructuredDocumentation",
										"src": "6608:362:0",
										"text": " @dev Writes up to 32 bytes to the buffer. Resizes if doing so would\n      exceed the capacity of the buffer.\n @param buf The buffer to append to.\n @param off The offset to write at.\n @param data The data to append.\n @param len The number of bytes to write (left-aligned).\n @return The original buffer, for chaining."
									},
									"id": 378,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "write",
									"nameLocation": "6984:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "buf",
												"nameLocation": "7004:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "6990:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"id": 321,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 320,
														"name": "buffer",
														"nameLocations": [
															"6990:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 8,
														"src": "6990:6:0"
													},
													"referencedDeclaration": 8,
													"src": "6990:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$8_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "off",
												"nameLocation": "7014:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "7009:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 323,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7009:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7027:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "7019:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 325,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7019:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "len",
												"nameLocation": "7038:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "7033:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 327,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7033:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6989:53:0"
									},
									"returnParameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "7064:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"id": 331,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 330,
														"name": "buffer",
														"nameLocations": [
															"7064:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 8,
														"src": "7064:6:0"
													},
													"referencedDeclaration": 8,
													"src": "7064:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$8_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7063:15:0"
									},
									"scope": 522,
									"src": "6975:887:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 402,
										"nodeType": "Block",
										"src": "8271:58:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 393,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 382,
															"src": "8294:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															}
														},
														{
															"id": 394,
															"name": "off",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "8299:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 397,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 386,
																	"src": "8312:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes20",
																		"typeString": "bytes20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes20",
																		"typeString": "bytes20"
																	}
																],
																"id": 396,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8304:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 395,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8304:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 398,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8304:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"hexValue": "3230",
															"id": 399,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8319:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_20_by_1",
																"typeString": "int_const 20"
															},
															"value": "20"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_rational_20_by_1",
																"typeString": "int_const 20"
															}
														],
														"id": 392,
														"name": "write",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															218,
															378
														],
														"referencedDeclaration": 378,
														"src": "8288:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$8_memory_ptr_$_t_uint256_$_t_bytes32_$_t_uint256_$returns$_t_struct$_buffer_$8_memory_ptr_$",
															"typeString": "function (struct Buffer.buffer memory,uint256,bytes32,uint256) pure returns (struct Buffer.buffer memory)"
														}
													},
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8288:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
														"typeString": "struct Buffer.buffer memory"
													}
												},
												"functionReturnParameters": 391,
												"id": 401,
												"nodeType": "Return",
												"src": "8281:41:0"
											}
										]
									},
									"documentation": {
										"id": 379,
										"nodeType": "StructuredDocumentation",
										"src": "7868:295:0",
										"text": " @dev Writes a bytes20 to the buffer. Resizes if doing so would exceed the\n      capacity of the buffer.\n @param buf The buffer to append to.\n @param off The offset to write at.\n @param data The data to append.\n @return The original buffer, for chaining."
									},
									"id": 403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "writeBytes20",
									"nameLocation": "8177:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "buf",
												"nameLocation": "8204:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "8190:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"id": 381,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 380,
														"name": "buffer",
														"nameLocations": [
															"8190:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 8,
														"src": "8190:6:0"
													},
													"referencedDeclaration": 8,
													"src": "8190:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$8_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "off",
												"nameLocation": "8214:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "8209:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 383,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8209:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8227:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "8219:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes20",
													"typeString": "bytes20"
												},
												"typeName": {
													"id": 385,
													"name": "bytes20",
													"nodeType": "ElementaryTypeName",
													"src": "8219:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes20",
														"typeString": "bytes20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8189:43:0"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "8256:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"id": 389,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 388,
														"name": "buffer",
														"nameLocations": [
															"8256:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 8,
														"src": "8256:6:0"
													},
													"referencedDeclaration": 8,
													"src": "8256:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$8_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8255:15:0"
									},
									"scope": 522,
									"src": "8168:161:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 427,
										"nodeType": "Block",
										"src": "8690:69:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 416,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "8713:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															}
														},
														{
															"expression": {
																"expression": {
																	"id": 417,
																	"name": "buf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 407,
																	"src": "8718:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
																		"typeString": "struct Buffer.buffer memory"
																	}
																},
																"id": 418,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8722:3:0",
																"memberName": "buf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 5,
																"src": "8718:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8726:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8718:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 422,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 409,
																	"src": "8742:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes20",
																		"typeString": "bytes20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes20",
																		"typeString": "bytes20"
																	}
																],
																"id": 421,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8734:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 420,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8734:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 423,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8734:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"hexValue": "3230",
															"id": 424,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8749:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_20_by_1",
																"typeString": "int_const 20"
															},
															"value": "20"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_rational_20_by_1",
																"typeString": "int_const 20"
															}
														],
														"id": 415,
														"name": "write",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															218,
															378
														],
														"referencedDeclaration": 378,
														"src": "8707:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$8_memory_ptr_$_t_uint256_$_t_bytes32_$_t_uint256_$returns$_t_struct$_buffer_$8_memory_ptr_$",
															"typeString": "function (struct Buffer.buffer memory,uint256,bytes32,uint256) pure returns (struct Buffer.buffer memory)"
														}
													},
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8707:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
														"typeString": "struct Buffer.buffer memory"
													}
												},
												"functionReturnParameters": 414,
												"id": 426,
												"nodeType": "Return",
												"src": "8700:52:0"
											}
										]
									},
									"documentation": {
										"id": 404,
										"nodeType": "StructuredDocumentation",
										"src": "8335:256:0",
										"text": " @dev Appends a bytes20 to the buffer. Resizes if doing so would exceed\n      the capacity of the buffer.\n @param buf The buffer to append to.\n @param data The data to append.\n @return The original buffer, for chhaining."
									},
									"id": 428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "appendBytes20",
									"nameLocation": "8605:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "buf",
												"nameLocation": "8633:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "8619:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"id": 406,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 405,
														"name": "buffer",
														"nameLocations": [
															"8619:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 8,
														"src": "8619:6:0"
													},
													"referencedDeclaration": 8,
													"src": "8619:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$8_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8646:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "8638:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes20",
													"typeString": "bytes20"
												},
												"typeName": {
													"id": 408,
													"name": "bytes20",
													"nodeType": "ElementaryTypeName",
													"src": "8638:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes20",
														"typeString": "bytes20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8618:33:0"
									},
									"returnParameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "8675:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"id": 412,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 411,
														"name": "buffer",
														"nameLocations": [
															"8675:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 8,
														"src": "8675:6:0"
													},
													"referencedDeclaration": 8,
													"src": "8675:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$8_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8674:15:0"
									},
									"scope": 522,
									"src": "8596:163:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "9119:60:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 441,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 432,
															"src": "9142:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															}
														},
														{
															"expression": {
																"expression": {
																	"id": 442,
																	"name": "buf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 432,
																	"src": "9147:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
																		"typeString": "struct Buffer.buffer memory"
																	}
																},
																"id": 443,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9151:3:0",
																"memberName": "buf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 5,
																"src": "9147:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9155:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "9147:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 445,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 434,
															"src": "9163:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"hexValue": "3332",
															"id": 446,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9169:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "32"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															}
														],
														"id": 440,
														"name": "write",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															218,
															378
														],
														"referencedDeclaration": 378,
														"src": "9136:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$8_memory_ptr_$_t_uint256_$_t_bytes32_$_t_uint256_$returns$_t_struct$_buffer_$8_memory_ptr_$",
															"typeString": "function (struct Buffer.buffer memory,uint256,bytes32,uint256) pure returns (struct Buffer.buffer memory)"
														}
													},
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9136:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
														"typeString": "struct Buffer.buffer memory"
													}
												},
												"functionReturnParameters": 439,
												"id": 448,
												"nodeType": "Return",
												"src": "9129:43:0"
											}
										]
									},
									"documentation": {
										"id": 429,
										"nodeType": "StructuredDocumentation",
										"src": "8765:255:0",
										"text": " @dev Appends a bytes32 to the buffer. Resizes if doing so would exceed\n      the capacity of the buffer.\n @param buf The buffer to append to.\n @param data The data to append.\n @return The original buffer, for chaining."
									},
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "appendBytes32",
									"nameLocation": "9034:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "buf",
												"nameLocation": "9062:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "9048:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"id": 431,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 430,
														"name": "buffer",
														"nameLocations": [
															"9048:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 8,
														"src": "9048:6:0"
													},
													"referencedDeclaration": 8,
													"src": "9048:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$8_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9075:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "9067:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 433,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "9067:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9047:33:0"
									},
									"returnParameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "9104:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"id": 437,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 436,
														"name": "buffer",
														"nameLocations": [
															"9104:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 8,
														"src": "9104:6:0"
													},
													"referencedDeclaration": 8,
													"src": "9104:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$8_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9103:15:0"
									},
									"scope": 522,
									"src": "9025:154:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 496,
										"nodeType": "Block",
										"src": "9653:628:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 468,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 466,
															"name": "len",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 460,
															"src": "9667:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 467,
															"name": "off",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "9673:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "9667:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"id": 469,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 454,
															"src": "9679:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9683:8:0",
														"memberName": "capacity",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 7,
														"src": "9679:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9667:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 483,
												"nodeType": "IfStatement",
												"src": "9663:83:0",
												"trueBody": {
													"id": 482,
													"nodeType": "Block",
													"src": "9693:53:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 473,
																		"name": "buf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 454,
																		"src": "9714:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
																			"typeString": "struct Buffer.buffer memory"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 479,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 476,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 474,
																						"name": "len",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 460,
																						"src": "9720:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"id": 475,
																						"name": "off",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 456,
																						"src": "9726:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9720:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 477,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "9719:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "32",
																			"id": 478,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9733:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9719:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
																			"typeString": "struct Buffer.buffer memory"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 472,
																	"name": "resize",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 99,
																	"src": "9707:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$8_memory_ptr_$_t_uint256_$returns$__$",
																		"typeString": "function (struct Buffer.buffer memory,uint256) pure"
																	}
																},
																"id": 480,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9707:28:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 481,
															"nodeType": "ExpressionStatement",
															"src": "9707:28:0"
														}
													]
												}
											},
											{
												"assignments": [
													485
												],
												"declarations": [
													{
														"constant": false,
														"id": 485,
														"mutability": "mutable",
														"name": "mask",
														"nameLocation": "9761:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 496,
														"src": "9756:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 484,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "9756:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 492,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 488,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "323536",
																	"id": 486,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9769:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_256_by_1",
																		"typeString": "int_const 256"
																	},
																	"value": "256"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"id": 487,
																	"name": "len",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 460,
																	"src": "9776:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9769:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 489,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9768:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 490,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9783:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "9768:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9756:28:0"
											},
											{
												"AST": {
													"nativeSrc": "9803:452:0",
													"nodeType": "YulBlock",
													"src": "9803:452:0",
													"statements": [
														{
															"nativeSrc": "9866:24:0",
															"nodeType": "YulVariableDeclaration",
															"src": "9866:24:0",
															"value": {
																"arguments": [
																	{
																		"name": "buf",
																		"nativeSrc": "9886:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "9886:3:0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9880:5:0",
																	"nodeType": "YulIdentifier",
																	"src": "9880:5:0"
																},
																"nativeSrc": "9880:10:0",
																"nodeType": "YulFunctionCall",
																"src": "9880:10:0"
															},
															"variables": [
																{
																	"name": "bufptr",
																	"nativeSrc": "9870:6:0",
																	"nodeType": "YulTypedName",
																	"src": "9870:6:0",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9979:38:0",
															"nodeType": "YulVariableDeclaration",
															"src": "9979:38:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "bufptr",
																				"nativeSrc": "9999:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "9999:6:0"
																			},
																			{
																				"name": "off",
																				"nativeSrc": "10007:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "10007:3:0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9995:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "9995:3:0"
																		},
																		"nativeSrc": "9995:16:0",
																		"nodeType": "YulFunctionCall",
																		"src": "9995:16:0"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "10013:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "10013:3:0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9991:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "9991:3:0"
																},
																"nativeSrc": "9991:26:0",
																"nodeType": "YulFunctionCall",
																"src": "9991:26:0"
															},
															"variables": [
																{
																	"name": "dest",
																	"nativeSrc": "9983:4:0",
																	"nodeType": "YulTypedName",
																	"src": "9983:4:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dest",
																		"nativeSrc": "10037:4:0",
																		"nodeType": "YulIdentifier",
																		"src": "10037:4:0"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "dest",
																								"nativeSrc": "10056:4:0",
																								"nodeType": "YulIdentifier",
																								"src": "10056:4:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nativeSrc": "10050:5:0",
																							"nodeType": "YulIdentifier",
																							"src": "10050:5:0"
																						},
																						"nativeSrc": "10050:11:0",
																						"nodeType": "YulFunctionCall",
																						"src": "10050:11:0"
																					},
																					{
																						"arguments": [
																							{
																								"name": "mask",
																								"nativeSrc": "10067:4:0",
																								"nodeType": "YulIdentifier",
																								"src": "10067:4:0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "10063:3:0",
																							"nodeType": "YulIdentifier",
																							"src": "10063:3:0"
																						},
																						"nativeSrc": "10063:9:0",
																						"nodeType": "YulFunctionCall",
																						"src": "10063:9:0"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "10046:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "10046:3:0"
																				},
																				"nativeSrc": "10046:27:0",
																				"nodeType": "YulFunctionCall",
																				"src": "10046:27:0"
																			},
																			{
																				"name": "data",
																				"nativeSrc": "10075:4:0",
																				"nodeType": "YulIdentifier",
																				"src": "10075:4:0"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "10043:2:0",
																			"nodeType": "YulIdentifier",
																			"src": "10043:2:0"
																		},
																		"nativeSrc": "10043:37:0",
																		"nodeType": "YulFunctionCall",
																		"src": "10043:37:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10030:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "10030:6:0"
																},
																"nativeSrc": "10030:51:0",
																"nodeType": "YulFunctionCall",
																"src": "10030:51:0"
															},
															"nativeSrc": "10030:51:0",
															"nodeType": "YulExpressionStatement",
															"src": "10030:51:0"
														},
														{
															"body": {
																"nativeSrc": "10184:61:0",
																"nodeType": "YulBlock",
																"src": "10184:61:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "bufptr",
																					"nativeSrc": "10209:6:0",
																					"nodeType": "YulIdentifier",
																					"src": "10209:6:0"
																				},
																				{
																					"arguments": [
																						{
																							"name": "off",
																							"nativeSrc": "10221:3:0",
																							"nodeType": "YulIdentifier",
																							"src": "10221:3:0"
																						},
																						{
																							"name": "len",
																							"nativeSrc": "10226:3:0",
																							"nodeType": "YulIdentifier",
																							"src": "10226:3:0"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "10217:3:0",
																						"nodeType": "YulIdentifier",
																						"src": "10217:3:0"
																					},
																					"nativeSrc": "10217:13:0",
																					"nodeType": "YulFunctionCall",
																					"src": "10217:13:0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "10202:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "10202:6:0"
																			},
																			"nativeSrc": "10202:29:0",
																			"nodeType": "YulFunctionCall",
																			"src": "10202:29:0"
																		},
																		"nativeSrc": "10202:29:0",
																		"nodeType": "YulExpressionStatement",
																		"src": "10202:29:0"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "off",
																				"nativeSrc": "10158:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "10158:3:0"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "10163:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "10163:3:0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10154:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "10154:3:0"
																		},
																		"nativeSrc": "10154:13:0",
																		"nodeType": "YulFunctionCall",
																		"src": "10154:13:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "bufptr",
																				"nativeSrc": "10175:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "10175:6:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "10169:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "10169:5:0"
																		},
																		"nativeSrc": "10169:13:0",
																		"nodeType": "YulFunctionCall",
																		"src": "10169:13:0"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10151:2:0",
																	"nodeType": "YulIdentifier",
																	"src": "10151:2:0"
																},
																"nativeSrc": "10151:32:0",
																"nodeType": "YulFunctionCall",
																"src": "10151:32:0"
															},
															"nativeSrc": "10148:97:0",
															"nodeType": "YulIf",
															"src": "10148:97:0"
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 454,
														"isOffset": false,
														"isSlot": false,
														"src": "9886:3:0",
														"valueSize": 1
													},
													{
														"declaration": 458,
														"isOffset": false,
														"isSlot": false,
														"src": "10075:4:0",
														"valueSize": 1
													},
													{
														"declaration": 460,
														"isOffset": false,
														"isSlot": false,
														"src": "10013:3:0",
														"valueSize": 1
													},
													{
														"declaration": 460,
														"isOffset": false,
														"isSlot": false,
														"src": "10163:3:0",
														"valueSize": 1
													},
													{
														"declaration": 460,
														"isOffset": false,
														"isSlot": false,
														"src": "10226:3:0",
														"valueSize": 1
													},
													{
														"declaration": 485,
														"isOffset": false,
														"isSlot": false,
														"src": "10067:4:0",
														"valueSize": 1
													},
													{
														"declaration": 456,
														"isOffset": false,
														"isSlot": false,
														"src": "10007:3:0",
														"valueSize": 1
													},
													{
														"declaration": 456,
														"isOffset": false,
														"isSlot": false,
														"src": "10158:3:0",
														"valueSize": 1
													},
													{
														"declaration": 456,
														"isOffset": false,
														"isSlot": false,
														"src": "10221:3:0",
														"valueSize": 1
													}
												],
												"id": 493,
												"nodeType": "InlineAssembly",
												"src": "9794:461:0"
											},
											{
												"expression": {
													"id": 494,
													"name": "buf",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 454,
													"src": "10271:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
														"typeString": "struct Buffer.buffer memory"
													}
												},
												"functionReturnParameters": 465,
												"id": 495,
												"nodeType": "Return",
												"src": "10264:10:0"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "9185:359:0",
										"text": " @dev Writes an integer to the buffer. Resizes if doing so would exceed\n      the capacity of the buffer.\n @param buf The buffer to append to.\n @param off The offset to write at.\n @param data The data to append.\n @param len The number of bytes to write (right-aligned).\n @return The original buffer, for chaining."
									},
									"id": 497,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "writeInt",
									"nameLocation": "9558:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "buf",
												"nameLocation": "9581:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "9567:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"id": 453,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 452,
														"name": "buffer",
														"nameLocations": [
															"9567:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 8,
														"src": "9567:6:0"
													},
													"referencedDeclaration": 8,
													"src": "9567:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$8_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "off",
												"nameLocation": "9591:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "9586:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 455,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9586:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9601:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "9596:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 457,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9596:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "len",
												"nameLocation": "9612:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "9607:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 459,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9607:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9566:50:0"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "9638:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"id": 463,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 462,
														"name": "buffer",
														"nameLocations": [
															"9638:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 8,
														"src": "9638:6:0"
													},
													"referencedDeclaration": 8,
													"src": "9638:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$8_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9637:15:0"
									},
									"scope": 522,
									"src": "9549:732:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 520,
										"nodeType": "Block",
										"src": "10638:64:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 512,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 501,
															"src": "10664:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															}
														},
														{
															"expression": {
																"expression": {
																	"id": 513,
																	"name": "buf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 501,
																	"src": "10669:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
																		"typeString": "struct Buffer.buffer memory"
																	}
																},
																"id": 514,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10673:3:0",
																"memberName": "buf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 5,
																"src": "10669:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 515,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10677:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "10669:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 516,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 503,
															"src": "10685:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 517,
															"name": "len",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 505,
															"src": "10691:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 511,
														"name": "writeInt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 497,
														"src": "10655:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$8_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_struct$_buffer_$8_memory_ptr_$",
															"typeString": "function (struct Buffer.buffer memory,uint256,uint256,uint256) pure returns (struct Buffer.buffer memory)"
														}
													},
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10655:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
														"typeString": "struct Buffer.buffer memory"
													}
												},
												"functionReturnParameters": 510,
												"id": 519,
												"nodeType": "Return",
												"src": "10648:47:0"
											}
										]
									},
									"documentation": {
										"id": 498,
										"nodeType": "StructuredDocumentation",
										"src": "10287:250:0",
										"text": " @dev Appends a byte to the end of the buffer. Resizes if doing so would\n exceed the capacity of the buffer.\n @param buf The buffer to append to.\n @param data The data to append.\n @return The original buffer."
									},
									"id": 521,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "appendInt",
									"nameLocation": "10551:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "buf",
												"nameLocation": "10575:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "10561:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"id": 500,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 499,
														"name": "buffer",
														"nameLocations": [
															"10561:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 8,
														"src": "10561:6:0"
													},
													"referencedDeclaration": 8,
													"src": "10561:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$8_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "10585:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "10580:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 502,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10580:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "len",
												"nameLocation": "10596:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "10591:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 504,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10591:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10560:40:0"
									},
									"returnParameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "10623:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"id": 508,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 507,
														"name": "buffer",
														"nameLocations": [
															"10623:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 8,
														"src": "10623:6:0"
													},
													"referencedDeclaration": 8,
													"src": "10623:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$8_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10622:15:0"
									},
									"scope": 522,
									"src": "10542:160:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 523,
							"src": "402:10302:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "0:10705:0"
				},
				"id": 0
			},
			"contracts/dnssec-oracle/SHA1.sol": {
				"ast": {
					"absolutePath": "contracts/dnssec-oracle/SHA1.sol",
					"exportedSymbols": {
						"SHA1": [
							538
						]
					},
					"id": 539,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 524,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SHA1",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 538,
							"linearizedBaseContracts": [
								538
							],
							"name": "SHA1",
							"nameLocation": "34:4:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "f6d7d8f638af86edbd3db0363022953a79197e2b970840dd72ca38b9b4ada892",
									"id": 528,
									"name": "Debug",
									"nameLocation": "51:5:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"indexed": false,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "65:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "57:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 525,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "57:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "56:11:1"
									},
									"src": "45:23:1"
								},
								{
									"body": {
										"id": 536,
										"nodeType": "Block",
										"src": "142:5593:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "161:5568:1",
													"nodeType": "YulBlock",
													"src": "161:5568:1",
													"statements": [
														{
															"nativeSrc": "218:26:1",
															"nodeType": "YulVariableDeclaration",
															"src": "218:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "239:4:1",
																		"nodeType": "YulLiteral",
																		"src": "239:4:1",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "233:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "233:5:1"
																},
																"nativeSrc": "233:11:1",
																"nodeType": "YulFunctionCall",
																"src": "233:11:1"
															},
															"variables": [
																{
																	"name": "scratch",
																	"nativeSrc": "222:7:1",
																	"nodeType": "YulTypedName",
																	"src": "222:7:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "327:22:1",
															"nodeType": "YulVariableDeclaration",
															"src": "327:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "344:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "344:4:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "338:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "338:5:1"
																},
																"nativeSrc": "338:11:1",
																"nodeType": "YulFunctionCall",
																"src": "338:11:1"
															},
															"variables": [
																{
																	"name": "len",
																	"nativeSrc": "331:3:1",
																	"nodeType": "YulTypedName",
																	"src": "331:3:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "362:21:1",
															"nodeType": "YulAssignment",
															"src": "362:21:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "374:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "374:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "380:2:1",
																		"nodeType": "YulLiteral",
																		"src": "380:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "370:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "370:3:1"
																},
																"nativeSrc": "370:13:1",
																"nodeType": "YulFunctionCall",
																"src": "370:13:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "362:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "362:4:1"
																}
															]
														},
														{
															"nativeSrc": "442:61:1",
															"nodeType": "YulVariableDeclaration",
															"src": "442:61:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "len",
																						"nativeSrc": "470:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "470:3:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "475:1:1",
																						"nodeType": "YulLiteral",
																						"src": "475:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "466:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "466:3:1"
																				},
																				"nativeSrc": "466:11:1",
																				"nodeType": "YulFunctionCall",
																				"src": "466:11:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "479:18:1",
																				"nodeType": "YulLiteral",
																				"src": "479:18:1",
																				"type": "",
																				"value": "0xFFFFFFFFFFFFFFC0"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "462:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "462:3:1"
																		},
																		"nativeSrc": "462:36:1",
																		"nodeType": "YulFunctionCall",
																		"src": "462:36:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "500:2:1",
																		"nodeType": "YulLiteral",
																		"src": "500:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "458:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "458:3:1"
																},
																"nativeSrc": "458:45:1",
																"nodeType": "YulFunctionCall",
																"src": "458:45:1"
															},
															"variables": [
																{
																	"name": "totallen",
																	"nativeSrc": "446:8:1",
																	"nodeType": "YulTypedName",
																	"src": "446:8:1",
																	"type": ""
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "568:33:1",
																		"nodeType": "YulBlock",
																		"src": "568:33:1",
																		"statements": [
																			{
																				"nativeSrc": "570:29:1",
																				"nodeType": "YulAssignment",
																				"src": "570:29:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "totallen",
																							"nativeSrc": "586:8:1",
																							"nodeType": "YulIdentifier",
																							"src": "586:8:1"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "596:2:1",
																							"nodeType": "YulLiteral",
																							"src": "596:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "582:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "582:3:1"
																					},
																					"nativeSrc": "582:17:1",
																					"nodeType": "YulFunctionCall",
																					"src": "582:17:1"
																				},
																				"variableNames": [
																					{
																						"name": "totallen",
																						"nativeSrc": "570:8:1",
																						"nodeType": "YulIdentifier",
																						"src": "570:8:1"
																					}
																				]
																			}
																		]
																	},
																	"nativeSrc": "561:40:1",
																	"nodeType": "YulCase",
																	"src": "561:40:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "566:1:1",
																		"nodeType": "YulLiteral",
																		"src": "566:1:1",
																		"type": "",
																		"value": "1"
																	}
																}
															],
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "totallen",
																				"nativeSrc": "530:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "530:8:1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "540:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "540:3:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "526:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "526:3:1"
																		},
																		"nativeSrc": "526:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "526:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "546:1:1",
																		"nodeType": "YulLiteral",
																		"src": "546:1:1",
																		"type": "",
																		"value": "9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "523:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "523:2:1"
																},
																"nativeSrc": "523:25:1",
																"nodeType": "YulFunctionCall",
																"src": "523:25:1"
															},
															"nativeSrc": "516:85:1",
															"nodeType": "YulSwitch",
															"src": "516:85:1"
														},
														{
															"nativeSrc": "615:59:1",
															"nodeType": "YulVariableDeclaration",
															"src": "615:59:1",
															"value": {
																"kind": "number",
																"nativeSrc": "624:50:1",
																"nodeType": "YulLiteral",
																"src": "624:50:1",
																"type": "",
																"value": "0x6745230100EFCDAB890098BADCFE001032547600C3D2E1F0"
															},
															"variables": [
																{
																	"name": "h",
																	"nativeSrc": "619:1:1",
																	"nodeType": "YulTypedName",
																	"src": "619:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "733:380:1",
																"nodeType": "YulBlock",
																"src": "733:380:1",
																"statements": [
																	{
																		"nativeSrc": "751:11:1",
																		"nodeType": "YulAssignment",
																		"src": "751:11:1",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "761:1:1",
																			"nodeType": "YulLiteral",
																			"src": "761:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "result",
																				"nativeSrc": "751:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "751:6:1"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "797:302:1",
																			"nodeType": "YulBlock",
																			"src": "797:302:1",
																			"statements": [
																				{
																					"nativeSrc": "819:30:1",
																					"nodeType": "YulAssignment",
																					"src": "819:30:1",
																					"value": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "ptr",
																										"nativeSrc": "839:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "839:3:1"
																									},
																									{
																										"name": "off",
																										"nativeSrc": "844:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "844:3:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "835:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "835:3:1"
																								},
																								"nativeSrc": "835:13:1",
																								"nodeType": "YulFunctionCall",
																								"src": "835:13:1"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nativeSrc": "829:5:1",
																							"nodeType": "YulIdentifier",
																							"src": "829:5:1"
																						},
																						"nativeSrc": "829:20:1",
																						"nodeType": "YulFunctionCall",
																						"src": "829:20:1"
																					},
																					"variableNames": [
																						{
																							"name": "result",
																							"nativeSrc": "819:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "819:6:1"
																						}
																					]
																				},
																				{
																					"nativeSrc": "870:24:1",
																					"nodeType": "YulAssignment",
																					"src": "870:24:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "count",
																								"nativeSrc": "883:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "883:5:1"
																							},
																							{
																								"name": "off",
																								"nativeSrc": "890:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "890:3:1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "879:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "879:3:1"
																						},
																						"nativeSrc": "879:15:1",
																						"nodeType": "YulFunctionCall",
																						"src": "879:15:1"
																					},
																					"variableNames": [
																						{
																							"name": "count",
																							"nativeSrc": "870:5:1",
																							"nodeType": "YulIdentifier",
																							"src": "870:5:1"
																						}
																					]
																				},
																				{
																					"body": {
																						"nativeSrc": "932:149:1",
																						"nodeType": "YulBlock",
																						"src": "932:149:1",
																						"statements": [
																							{
																								"nativeSrc": "958:49:1",
																								"nodeType": "YulVariableDeclaration",
																								"src": "958:49:1",
																								"value": {
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "982:3:1",
																															"nodeType": "YulLiteral",
																															"src": "982:3:1",
																															"type": "",
																															"value": "256"
																														},
																														{
																															"arguments": [
																																{
																																	"kind": "number",
																																	"nativeSrc": "991:2:1",
																																	"nodeType": "YulLiteral",
																																	"src": "991:2:1",
																																	"type": "",
																																	"value": "32"
																																},
																																{
																																	"name": "count",
																																	"nativeSrc": "995:5:1",
																																	"nodeType": "YulIdentifier",
																																	"src": "995:5:1"
																																}
																															],
																															"functionName": {
																																"name": "sub",
																																"nativeSrc": "987:3:1",
																																"nodeType": "YulIdentifier",
																																"src": "987:3:1"
																															},
																															"nativeSrc": "987:14:1",
																															"nodeType": "YulFunctionCall",
																															"src": "987:14:1"
																														}
																													],
																													"functionName": {
																														"name": "exp",
																														"nativeSrc": "978:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "978:3:1"
																													},
																													"nativeSrc": "978:24:1",
																													"nodeType": "YulFunctionCall",
																													"src": "978:24:1"
																												},
																												{
																													"kind": "number",
																													"nativeSrc": "1004:1:1",
																													"nodeType": "YulLiteral",
																													"src": "1004:1:1",
																													"type": "",
																													"value": "1"
																												}
																											],
																											"functionName": {
																												"name": "sub",
																												"nativeSrc": "974:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "974:3:1"
																											},
																											"nativeSrc": "974:32:1",
																											"nodeType": "YulFunctionCall",
																											"src": "974:32:1"
																										}
																									],
																									"functionName": {
																										"name": "not",
																										"nativeSrc": "970:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "970:3:1"
																									},
																									"nativeSrc": "970:37:1",
																									"nodeType": "YulFunctionCall",
																									"src": "970:37:1"
																								},
																								"variables": [
																									{
																										"name": "mask",
																										"nativeSrc": "962:4:1",
																										"nodeType": "YulTypedName",
																										"src": "962:4:1",
																										"type": ""
																									}
																								]
																							},
																							{
																								"nativeSrc": "1032:27:1",
																								"nodeType": "YulAssignment",
																								"src": "1032:27:1",
																								"value": {
																									"arguments": [
																										{
																											"name": "result",
																											"nativeSrc": "1046:6:1",
																											"nodeType": "YulIdentifier",
																											"src": "1046:6:1"
																										},
																										{
																											"name": "mask",
																											"nativeSrc": "1054:4:1",
																											"nodeType": "YulIdentifier",
																											"src": "1054:4:1"
																										}
																									],
																									"functionName": {
																										"name": "and",
																										"nativeSrc": "1042:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "1042:3:1"
																									},
																									"nativeSrc": "1042:17:1",
																									"nodeType": "YulFunctionCall",
																									"src": "1042:17:1"
																								},
																								"variableNames": [
																									{
																										"name": "result",
																										"nativeSrc": "1032:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "1032:6:1"
																									}
																								]
																							}
																						]
																					},
																					"condition": {
																						"arguments": [
																							{
																								"name": "count",
																								"nativeSrc": "921:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "921:5:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "928:2:1",
																								"nodeType": "YulLiteral",
																								"src": "928:2:1",
																								"type": "",
																								"value": "32"
																							}
																						],
																						"functionName": {
																							"name": "lt",
																							"nativeSrc": "918:2:1",
																							"nodeType": "YulIdentifier",
																							"src": "918:2:1"
																						},
																						"nativeSrc": "918:13:1",
																						"nodeType": "YulFunctionCall",
																						"src": "918:13:1"
																					},
																					"nativeSrc": "915:166:1",
																					"nodeType": "YulIf",
																					"src": "915:166:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "off",
																					"nativeSrc": "785:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "785:3:1"
																				},
																				{
																					"name": "count",
																					"nativeSrc": "790:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "790:5:1"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "782:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "782:2:1"
																			},
																			"nativeSrc": "782:14:1",
																			"nodeType": "YulFunctionCall",
																			"src": "782:14:1"
																		},
																		"nativeSrc": "779:320:1",
																		"nodeType": "YulIf",
																		"src": "779:320:1"
																	}
																]
															},
															"name": "readword",
															"nativeSrc": "688:425:1",
															"nodeType": "YulFunctionDefinition",
															"parameters": [
																{
																	"name": "ptr",
																	"nativeSrc": "706:3:1",
																	"nodeType": "YulTypedName",
																	"src": "706:3:1",
																	"type": ""
																},
																{
																	"name": "off",
																	"nativeSrc": "711:3:1",
																	"nodeType": "YulTypedName",
																	"src": "711:3:1",
																	"type": ""
																},
																{
																	"name": "count",
																	"nativeSrc": "716:5:1",
																	"nodeType": "YulTypedName",
																	"src": "716:5:1",
																	"type": ""
																}
															],
															"returnVariables": [
																{
																	"name": "result",
																	"nativeSrc": "726:6:1",
																	"nodeType": "YulTypedName",
																	"src": "726:6:1",
																	"type": ""
																}
															],
															"src": "688:425:1"
														},
														{
															"body": {
																"nativeSrc": "1182:4229:1",
																"nodeType": "YulBlock",
																"src": "1182:4229:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "scratch",
																					"nativeSrc": "1207:7:1",
																					"nodeType": "YulIdentifier",
																					"src": "1207:7:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "data",
																							"nativeSrc": "1225:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "1225:4:1"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "1231:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "1231:1:1"
																						},
																						{
																							"name": "len",
																							"nativeSrc": "1234:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "1234:3:1"
																						}
																					],
																					"functionName": {
																						"name": "readword",
																						"nativeSrc": "1216:8:1",
																						"nodeType": "YulIdentifier",
																						"src": "1216:8:1"
																					},
																					"nativeSrc": "1216:22:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1216:22:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1200:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1200:6:1"
																			},
																			"nativeSrc": "1200:39:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1200:39:1"
																		},
																		"nativeSrc": "1200:39:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1200:39:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "scratch",
																							"nativeSrc": "1267:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "1267:7:1"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1276:2:1",
																							"nodeType": "YulLiteral",
																							"src": "1276:2:1",
																							"type": "",
																							"value": "32"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "1263:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "1263:3:1"
																					},
																					"nativeSrc": "1263:16:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1263:16:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "data",
																							"nativeSrc": "1290:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "1290:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "i",
																									"nativeSrc": "1300:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "1300:1:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1303:2:1",
																									"nodeType": "YulLiteral",
																									"src": "1303:2:1",
																									"type": "",
																									"value": "32"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1296:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "1296:3:1"
																							},
																							"nativeSrc": "1296:10:1",
																							"nodeType": "YulFunctionCall",
																							"src": "1296:10:1"
																						},
																						{
																							"name": "len",
																							"nativeSrc": "1308:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "1308:3:1"
																						}
																					],
																					"functionName": {
																						"name": "readword",
																						"nativeSrc": "1281:8:1",
																						"nodeType": "YulIdentifier",
																						"src": "1281:8:1"
																					},
																					"nativeSrc": "1281:31:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1281:31:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1256:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1256:6:1"
																			},
																			"nativeSrc": "1256:57:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1256:57:1"
																		},
																		"nativeSrc": "1256:57:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1256:57:1"
																	},
																	{
																		"cases": [
																			{
																				"body": {
																					"nativeSrc": "1454:44:1",
																					"nodeType": "YulBlock",
																					"src": "1454:44:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "scratch",
																												"nativeSrc": "1468:7:1",
																												"nodeType": "YulIdentifier",
																												"src": "1468:7:1"
																											},
																											{
																												"arguments": [
																													{
																														"name": "len",
																														"nativeSrc": "1481:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "1481:3:1"
																													},
																													{
																														"name": "i",
																														"nativeSrc": "1486:1:1",
																														"nodeType": "YulIdentifier",
																														"src": "1486:1:1"
																													}
																												],
																												"functionName": {
																													"name": "sub",
																													"nativeSrc": "1477:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "1477:3:1"
																												},
																												"nativeSrc": "1477:11:1",
																												"nodeType": "YulFunctionCall",
																												"src": "1477:11:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "1464:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "1464:3:1"
																										},
																										"nativeSrc": "1464:25:1",
																										"nodeType": "YulFunctionCall",
																										"src": "1464:25:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1491:4:1",
																										"nodeType": "YulLiteral",
																										"src": "1491:4:1",
																										"type": "",
																										"value": "0x80"
																									}
																								],
																								"functionName": {
																									"name": "mstore8",
																									"nativeSrc": "1456:7:1",
																									"nodeType": "YulIdentifier",
																									"src": "1456:7:1"
																								},
																								"nativeSrc": "1456:40:1",
																								"nodeType": "YulFunctionCall",
																								"src": "1456:40:1"
																							},
																							"nativeSrc": "1456:40:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "1456:40:1"
																						}
																					]
																				},
																				"nativeSrc": "1447:51:1",
																				"nodeType": "YulCase",
																				"src": "1447:51:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "1452:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1452:1:1",
																					"type": "",
																					"value": "1"
																				}
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "len",
																							"nativeSrc": "1418:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "1418:3:1"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "1423:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "1423:1:1"
																						}
																					],
																					"functionName": {
																						"name": "sub",
																						"nativeSrc": "1414:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "1414:3:1"
																					},
																					"nativeSrc": "1414:11:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1414:11:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1427:2:1",
																					"nodeType": "YulLiteral",
																					"src": "1427:2:1",
																					"type": "",
																					"value": "64"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1411:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "1411:2:1"
																			},
																			"nativeSrc": "1411:19:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1411:19:1"
																		},
																		"nativeSrc": "1404:94:1",
																		"nodeType": "YulSwitch",
																		"src": "1404:94:1"
																	},
																	{
																		"cases": [
																			{
																				"body": {
																					"nativeSrc": "1634:70:1",
																					"nodeType": "YulBlock",
																					"src": "1634:70:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "scratch",
																												"nativeSrc": "1647:7:1",
																												"nodeType": "YulIdentifier",
																												"src": "1647:7:1"
																											},
																											{
																												"kind": "number",
																												"nativeSrc": "1656:2:1",
																												"nodeType": "YulLiteral",
																												"src": "1656:2:1",
																												"type": "",
																												"value": "32"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "1643:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "1643:3:1"
																										},
																										"nativeSrc": "1643:16:1",
																										"nodeType": "YulFunctionCall",
																										"src": "1643:16:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"name": "scratch",
																																"nativeSrc": "1674:7:1",
																																"nodeType": "YulIdentifier",
																																"src": "1674:7:1"
																															},
																															{
																																"kind": "number",
																																"nativeSrc": "1683:2:1",
																																"nodeType": "YulLiteral",
																																"src": "1683:2:1",
																																"type": "",
																																"value": "32"
																															}
																														],
																														"functionName": {
																															"name": "add",
																															"nativeSrc": "1670:3:1",
																															"nodeType": "YulIdentifier",
																															"src": "1670:3:1"
																														},
																														"nativeSrc": "1670:16:1",
																														"nodeType": "YulFunctionCall",
																														"src": "1670:16:1"
																													}
																												],
																												"functionName": {
																													"name": "mload",
																													"nativeSrc": "1664:5:1",
																													"nodeType": "YulIdentifier",
																													"src": "1664:5:1"
																												},
																												"nativeSrc": "1664:23:1",
																												"nodeType": "YulFunctionCall",
																												"src": "1664:23:1"
																											},
																											{
																												"arguments": [
																													{
																														"name": "len",
																														"nativeSrc": "1693:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "1693:3:1"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "1698:1:1",
																														"nodeType": "YulLiteral",
																														"src": "1698:1:1",
																														"type": "",
																														"value": "8"
																													}
																												],
																												"functionName": {
																													"name": "mul",
																													"nativeSrc": "1689:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "1689:3:1"
																												},
																												"nativeSrc": "1689:11:1",
																												"nodeType": "YulFunctionCall",
																												"src": "1689:11:1"
																											}
																										],
																										"functionName": {
																											"name": "or",
																											"nativeSrc": "1661:2:1",
																											"nodeType": "YulIdentifier",
																											"src": "1661:2:1"
																										},
																										"nativeSrc": "1661:40:1",
																										"nodeType": "YulFunctionCall",
																										"src": "1661:40:1"
																									}
																								],
																								"functionName": {
																									"name": "mstore",
																									"nativeSrc": "1636:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "1636:6:1"
																								},
																								"nativeSrc": "1636:66:1",
																								"nodeType": "YulFunctionCall",
																								"src": "1636:66:1"
																							},
																							"nativeSrc": "1636:66:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "1636:66:1"
																						}
																					]
																				},
																				"nativeSrc": "1627:77:1",
																				"nodeType": "YulCase",
																				"src": "1627:77:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "1632:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1632:1:1",
																					"type": "",
																					"value": "1"
																				}
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "1589:1:1",
																					"nodeType": "YulIdentifier",
																					"src": "1589:1:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "totallen",
																							"nativeSrc": "1596:8:1",
																							"nodeType": "YulIdentifier",
																							"src": "1596:8:1"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1606:2:1",
																							"nodeType": "YulLiteral",
																							"src": "1606:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "sub",
																						"nativeSrc": "1592:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "1592:3:1"
																					},
																					"nativeSrc": "1592:17:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1592:17:1"
																				}
																			],
																			"functionName": {
																				"name": "eq",
																				"nativeSrc": "1586:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "1586:2:1"
																			},
																			"nativeSrc": "1586:24:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1586:24:1"
																		},
																		"nativeSrc": "1579:125:1",
																		"nodeType": "YulSwitch",
																		"src": "1579:125:1"
																	},
																	{
																		"body": {
																			"nativeSrc": "1827:461:1",
																			"nodeType": "YulBlock",
																			"src": "1827:461:1",
																			"statements": [
																				{
																					"nativeSrc": "1849:157:1",
																					"nodeType": "YulVariableDeclaration",
																					"src": "1849:157:1",
																					"value": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "scratch",
																														"nativeSrc": "1879:7:1",
																														"nodeType": "YulIdentifier",
																														"src": "1879:7:1"
																													},
																													{
																														"arguments": [
																															{
																																"name": "j",
																																"nativeSrc": "1892:1:1",
																																"nodeType": "YulIdentifier",
																																"src": "1892:1:1"
																															},
																															{
																																"kind": "number",
																																"nativeSrc": "1895:2:1",
																																"nodeType": "YulLiteral",
																																"src": "1895:2:1",
																																"type": "",
																																"value": "12"
																															}
																														],
																														"functionName": {
																															"name": "sub",
																															"nativeSrc": "1888:3:1",
																															"nodeType": "YulIdentifier",
																															"src": "1888:3:1"
																														},
																														"nativeSrc": "1888:10:1",
																														"nodeType": "YulFunctionCall",
																														"src": "1888:10:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "1875:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "1875:3:1"
																												},
																												"nativeSrc": "1875:24:1",
																												"nodeType": "YulFunctionCall",
																												"src": "1875:24:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "1869:5:1",
																											"nodeType": "YulIdentifier",
																											"src": "1869:5:1"
																										},
																										"nativeSrc": "1869:31:1",
																										"nodeType": "YulFunctionCall",
																										"src": "1869:31:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "scratch",
																														"nativeSrc": "1912:7:1",
																														"nodeType": "YulIdentifier",
																														"src": "1912:7:1"
																													},
																													{
																														"arguments": [
																															{
																																"name": "j",
																																"nativeSrc": "1925:1:1",
																																"nodeType": "YulIdentifier",
																																"src": "1925:1:1"
																															},
																															{
																																"kind": "number",
																																"nativeSrc": "1928:2:1",
																																"nodeType": "YulLiteral",
																																"src": "1928:2:1",
																																"type": "",
																																"value": "32"
																															}
																														],
																														"functionName": {
																															"name": "sub",
																															"nativeSrc": "1921:3:1",
																															"nodeType": "YulIdentifier",
																															"src": "1921:3:1"
																														},
																														"nativeSrc": "1921:10:1",
																														"nodeType": "YulFunctionCall",
																														"src": "1921:10:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "1908:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "1908:3:1"
																												},
																												"nativeSrc": "1908:24:1",
																												"nodeType": "YulFunctionCall",
																												"src": "1908:24:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "1902:5:1",
																											"nodeType": "YulIdentifier",
																											"src": "1902:5:1"
																										},
																										"nativeSrc": "1902:31:1",
																										"nodeType": "YulFunctionCall",
																										"src": "1902:31:1"
																									}
																								],
																								"functionName": {
																									"name": "xor",
																									"nativeSrc": "1865:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "1865:3:1"
																								},
																								"nativeSrc": "1865:69:1",
																								"nodeType": "YulFunctionCall",
																								"src": "1865:69:1"
																							},
																							{
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "scratch",
																														"nativeSrc": "1950:7:1",
																														"nodeType": "YulIdentifier",
																														"src": "1950:7:1"
																													},
																													{
																														"arguments": [
																															{
																																"name": "j",
																																"nativeSrc": "1963:1:1",
																																"nodeType": "YulIdentifier",
																																"src": "1963:1:1"
																															},
																															{
																																"kind": "number",
																																"nativeSrc": "1966:2:1",
																																"nodeType": "YulLiteral",
																																"src": "1966:2:1",
																																"type": "",
																																"value": "56"
																															}
																														],
																														"functionName": {
																															"name": "sub",
																															"nativeSrc": "1959:3:1",
																															"nodeType": "YulIdentifier",
																															"src": "1959:3:1"
																														},
																														"nativeSrc": "1959:10:1",
																														"nodeType": "YulFunctionCall",
																														"src": "1959:10:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "1946:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "1946:3:1"
																												},
																												"nativeSrc": "1946:24:1",
																												"nodeType": "YulFunctionCall",
																												"src": "1946:24:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "1940:5:1",
																											"nodeType": "YulIdentifier",
																											"src": "1940:5:1"
																										},
																										"nativeSrc": "1940:31:1",
																										"nodeType": "YulFunctionCall",
																										"src": "1940:31:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "scratch",
																														"nativeSrc": "1983:7:1",
																														"nodeType": "YulIdentifier",
																														"src": "1983:7:1"
																													},
																													{
																														"arguments": [
																															{
																																"name": "j",
																																"nativeSrc": "1996:1:1",
																																"nodeType": "YulIdentifier",
																																"src": "1996:1:1"
																															},
																															{
																																"kind": "number",
																																"nativeSrc": "1999:2:1",
																																"nodeType": "YulLiteral",
																																"src": "1999:2:1",
																																"type": "",
																																"value": "64"
																															}
																														],
																														"functionName": {
																															"name": "sub",
																															"nativeSrc": "1992:3:1",
																															"nodeType": "YulIdentifier",
																															"src": "1992:3:1"
																														},
																														"nativeSrc": "1992:10:1",
																														"nodeType": "YulFunctionCall",
																														"src": "1992:10:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "1979:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "1979:3:1"
																												},
																												"nativeSrc": "1979:24:1",
																												"nodeType": "YulFunctionCall",
																												"src": "1979:24:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "1973:5:1",
																											"nodeType": "YulIdentifier",
																											"src": "1973:5:1"
																										},
																										"nativeSrc": "1973:31:1",
																										"nodeType": "YulFunctionCall",
																										"src": "1973:31:1"
																									}
																								],
																								"functionName": {
																									"name": "xor",
																									"nativeSrc": "1936:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "1936:3:1"
																								},
																								"nativeSrc": "1936:69:1",
																								"nodeType": "YulFunctionCall",
																								"src": "1936:69:1"
																							}
																						],
																						"functionName": {
																							"name": "xor",
																							"nativeSrc": "1861:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "1861:3:1"
																						},
																						"nativeSrc": "1861:145:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1861:145:1"
																					},
																					"variables": [
																						{
																							"name": "temp",
																							"nativeSrc": "1853:4:1",
																							"nodeType": "YulTypedName",
																							"src": "1853:4:1",
																							"type": ""
																						}
																					]
																				},
																				{
																					"nativeSrc": "2027:193:1",
																					"nodeType": "YulAssignment",
																					"src": "2027:193:1",
																					"value": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "temp",
																												"nativeSrc": "2046:4:1",
																												"nodeType": "YulIdentifier",
																												"src": "2046:4:1"
																											},
																											{
																												"kind": "number",
																												"nativeSrc": "2052:1:1",
																												"nodeType": "YulLiteral",
																												"src": "2052:1:1",
																												"type": "",
																												"value": "2"
																											}
																										],
																										"functionName": {
																											"name": "mul",
																											"nativeSrc": "2042:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "2042:3:1"
																										},
																										"nativeSrc": "2042:12:1",
																										"nodeType": "YulFunctionCall",
																										"src": "2042:12:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2056:66:1",
																										"nodeType": "YulLiteral",
																										"src": "2056:66:1",
																										"type": "",
																										"value": "0xFFFFFFFEFFFFFFFEFFFFFFFEFFFFFFFEFFFFFFFEFFFFFFFEFFFFFFFEFFFFFFFE"
																									}
																								],
																								"functionName": {
																									"name": "and",
																									"nativeSrc": "2038:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "2038:3:1"
																								},
																								"nativeSrc": "2038:85:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2038:85:1"
																							},
																							{
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "temp",
																												"nativeSrc": "2133:4:1",
																												"nodeType": "YulIdentifier",
																												"src": "2133:4:1"
																											},
																											{
																												"kind": "number",
																												"nativeSrc": "2139:10:1",
																												"nodeType": "YulLiteral",
																												"src": "2139:10:1",
																												"type": "",
																												"value": "0x80000000"
																											}
																										],
																										"functionName": {
																											"name": "div",
																											"nativeSrc": "2129:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "2129:3:1"
																										},
																										"nativeSrc": "2129:21:1",
																										"nodeType": "YulFunctionCall",
																										"src": "2129:21:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2152:66:1",
																										"nodeType": "YulLiteral",
																										"src": "2152:66:1",
																										"type": "",
																										"value": "0x0000000100000001000000010000000100000001000000010000000100000001"
																									}
																								],
																								"functionName": {
																									"name": "and",
																									"nativeSrc": "2125:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "2125:3:1"
																								},
																								"nativeSrc": "2125:94:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2125:94:1"
																							}
																						],
																						"functionName": {
																							"name": "or",
																							"nativeSrc": "2035:2:1",
																							"nodeType": "YulIdentifier",
																							"src": "2035:2:1"
																						},
																						"nativeSrc": "2035:185:1",
																						"nodeType": "YulFunctionCall",
																						"src": "2035:185:1"
																					},
																					"variableNames": [
																						{
																							"name": "temp",
																							"nativeSrc": "2027:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "2027:4:1"
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "scratch",
																										"nativeSrc": "2252:7:1",
																										"nodeType": "YulIdentifier",
																										"src": "2252:7:1"
																									},
																									{
																										"name": "j",
																										"nativeSrc": "2261:1:1",
																										"nodeType": "YulIdentifier",
																										"src": "2261:1:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2248:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "2248:3:1"
																								},
																								"nativeSrc": "2248:15:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2248:15:1"
																							},
																							{
																								"name": "temp",
																								"nativeSrc": "2265:4:1",
																								"nodeType": "YulIdentifier",
																								"src": "2265:4:1"
																							}
																						],
																						"functionName": {
																							"name": "mstore",
																							"nativeSrc": "2241:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "2241:6:1"
																						},
																						"nativeSrc": "2241:29:1",
																						"nodeType": "YulFunctionCall",
																						"src": "2241:29:1"
																					},
																					"nativeSrc": "2241:29:1",
																					"nodeType": "YulExpressionStatement",
																					"src": "2241:29:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "j",
																					"nativeSrc": "1799:1:1",
																					"nodeType": "YulIdentifier",
																					"src": "1799:1:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1802:3:1",
																					"nodeType": "YulLiteral",
																					"src": "1802:3:1",
																					"type": "",
																					"value": "128"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1796:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "1796:2:1"
																			},
																			"nativeSrc": "1796:10:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1796:10:1"
																		},
																		"nativeSrc": "1776:512:1",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "1807:19:1",
																			"nodeType": "YulBlock",
																			"src": "1807:19:1",
																			"statements": [
																				{
																					"nativeSrc": "1809:15:1",
																					"nodeType": "YulAssignment",
																					"src": "1809:15:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "j",
																								"nativeSrc": "1818:1:1",
																								"nodeType": "YulIdentifier",
																								"src": "1818:1:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1821:2:1",
																								"nodeType": "YulLiteral",
																								"src": "1821:2:1",
																								"type": "",
																								"value": "12"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1814:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "1814:3:1"
																						},
																						"nativeSrc": "1814:10:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1814:10:1"
																					},
																					"variableNames": [
																						{
																							"name": "j",
																							"nativeSrc": "1809:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "1809:1:1"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "1780:15:1",
																			"nodeType": "YulBlock",
																			"src": "1780:15:1",
																			"statements": [
																				{
																					"nativeSrc": "1782:11:1",
																					"nodeType": "YulVariableDeclaration",
																					"src": "1782:11:1",
																					"value": {
																						"kind": "number",
																						"nativeSrc": "1791:2:1",
																						"nodeType": "YulLiteral",
																						"src": "1791:2:1",
																						"type": "",
																						"value": "64"
																					},
																					"variables": [
																						{
																							"name": "j",
																							"nativeSrc": "1786:1:1",
																							"nodeType": "YulTypedName",
																							"src": "1786:1:1",
																							"type": ""
																						}
																					]
																				}
																			]
																		},
																		"src": "1776:512:1"
																	},
																	{
																		"body": {
																			"nativeSrc": "2357:463:1",
																			"nodeType": "YulBlock",
																			"src": "2357:463:1",
																			"statements": [
																				{
																					"nativeSrc": "2379:159:1",
																					"nodeType": "YulVariableDeclaration",
																					"src": "2379:159:1",
																					"value": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "scratch",
																														"nativeSrc": "2409:7:1",
																														"nodeType": "YulIdentifier",
																														"src": "2409:7:1"
																													},
																													{
																														"arguments": [
																															{
																																"name": "j",
																																"nativeSrc": "2422:1:1",
																																"nodeType": "YulIdentifier",
																																"src": "2422:1:1"
																															},
																															{
																																"kind": "number",
																																"nativeSrc": "2425:2:1",
																																"nodeType": "YulLiteral",
																																"src": "2425:2:1",
																																"type": "",
																																"value": "24"
																															}
																														],
																														"functionName": {
																															"name": "sub",
																															"nativeSrc": "2418:3:1",
																															"nodeType": "YulIdentifier",
																															"src": "2418:3:1"
																														},
																														"nativeSrc": "2418:10:1",
																														"nodeType": "YulFunctionCall",
																														"src": "2418:10:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "2405:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "2405:3:1"
																												},
																												"nativeSrc": "2405:24:1",
																												"nodeType": "YulFunctionCall",
																												"src": "2405:24:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "2399:5:1",
																											"nodeType": "YulIdentifier",
																											"src": "2399:5:1"
																										},
																										"nativeSrc": "2399:31:1",
																										"nodeType": "YulFunctionCall",
																										"src": "2399:31:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "scratch",
																														"nativeSrc": "2442:7:1",
																														"nodeType": "YulIdentifier",
																														"src": "2442:7:1"
																													},
																													{
																														"arguments": [
																															{
																																"name": "j",
																																"nativeSrc": "2455:1:1",
																																"nodeType": "YulIdentifier",
																																"src": "2455:1:1"
																															},
																															{
																																"kind": "number",
																																"nativeSrc": "2458:2:1",
																																"nodeType": "YulLiteral",
																																"src": "2458:2:1",
																																"type": "",
																																"value": "64"
																															}
																														],
																														"functionName": {
																															"name": "sub",
																															"nativeSrc": "2451:3:1",
																															"nodeType": "YulIdentifier",
																															"src": "2451:3:1"
																														},
																														"nativeSrc": "2451:10:1",
																														"nodeType": "YulFunctionCall",
																														"src": "2451:10:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "2438:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "2438:3:1"
																												},
																												"nativeSrc": "2438:24:1",
																												"nodeType": "YulFunctionCall",
																												"src": "2438:24:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "2432:5:1",
																											"nodeType": "YulIdentifier",
																											"src": "2432:5:1"
																										},
																										"nativeSrc": "2432:31:1",
																										"nodeType": "YulFunctionCall",
																										"src": "2432:31:1"
																									}
																								],
																								"functionName": {
																									"name": "xor",
																									"nativeSrc": "2395:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "2395:3:1"
																								},
																								"nativeSrc": "2395:69:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2395:69:1"
																							},
																							{
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "scratch",
																														"nativeSrc": "2480:7:1",
																														"nodeType": "YulIdentifier",
																														"src": "2480:7:1"
																													},
																													{
																														"arguments": [
																															{
																																"name": "j",
																																"nativeSrc": "2493:1:1",
																																"nodeType": "YulIdentifier",
																																"src": "2493:1:1"
																															},
																															{
																																"kind": "number",
																																"nativeSrc": "2496:3:1",
																																"nodeType": "YulLiteral",
																																"src": "2496:3:1",
																																"type": "",
																																"value": "112"
																															}
																														],
																														"functionName": {
																															"name": "sub",
																															"nativeSrc": "2489:3:1",
																															"nodeType": "YulIdentifier",
																															"src": "2489:3:1"
																														},
																														"nativeSrc": "2489:11:1",
																														"nodeType": "YulFunctionCall",
																														"src": "2489:11:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "2476:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "2476:3:1"
																												},
																												"nativeSrc": "2476:25:1",
																												"nodeType": "YulFunctionCall",
																												"src": "2476:25:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "2470:5:1",
																											"nodeType": "YulIdentifier",
																											"src": "2470:5:1"
																										},
																										"nativeSrc": "2470:32:1",
																										"nodeType": "YulFunctionCall",
																										"src": "2470:32:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "scratch",
																														"nativeSrc": "2514:7:1",
																														"nodeType": "YulIdentifier",
																														"src": "2514:7:1"
																													},
																													{
																														"arguments": [
																															{
																																"name": "j",
																																"nativeSrc": "2527:1:1",
																																"nodeType": "YulIdentifier",
																																"src": "2527:1:1"
																															},
																															{
																																"kind": "number",
																																"nativeSrc": "2530:3:1",
																																"nodeType": "YulLiteral",
																																"src": "2530:3:1",
																																"type": "",
																																"value": "128"
																															}
																														],
																														"functionName": {
																															"name": "sub",
																															"nativeSrc": "2523:3:1",
																															"nodeType": "YulIdentifier",
																															"src": "2523:3:1"
																														},
																														"nativeSrc": "2523:11:1",
																														"nodeType": "YulFunctionCall",
																														"src": "2523:11:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "2510:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "2510:3:1"
																												},
																												"nativeSrc": "2510:25:1",
																												"nodeType": "YulFunctionCall",
																												"src": "2510:25:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "2504:5:1",
																											"nodeType": "YulIdentifier",
																											"src": "2504:5:1"
																										},
																										"nativeSrc": "2504:32:1",
																										"nodeType": "YulFunctionCall",
																										"src": "2504:32:1"
																									}
																								],
																								"functionName": {
																									"name": "xor",
																									"nativeSrc": "2466:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "2466:3:1"
																								},
																								"nativeSrc": "2466:71:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2466:71:1"
																							}
																						],
																						"functionName": {
																							"name": "xor",
																							"nativeSrc": "2391:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "2391:3:1"
																						},
																						"nativeSrc": "2391:147:1",
																						"nodeType": "YulFunctionCall",
																						"src": "2391:147:1"
																					},
																					"variables": [
																						{
																							"name": "temp",
																							"nativeSrc": "2383:4:1",
																							"nodeType": "YulTypedName",
																							"src": "2383:4:1",
																							"type": ""
																						}
																					]
																				},
																				{
																					"nativeSrc": "2559:193:1",
																					"nodeType": "YulAssignment",
																					"src": "2559:193:1",
																					"value": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "temp",
																												"nativeSrc": "2578:4:1",
																												"nodeType": "YulIdentifier",
																												"src": "2578:4:1"
																											},
																											{
																												"kind": "number",
																												"nativeSrc": "2584:1:1",
																												"nodeType": "YulLiteral",
																												"src": "2584:1:1",
																												"type": "",
																												"value": "4"
																											}
																										],
																										"functionName": {
																											"name": "mul",
																											"nativeSrc": "2574:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "2574:3:1"
																										},
																										"nativeSrc": "2574:12:1",
																										"nodeType": "YulFunctionCall",
																										"src": "2574:12:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2588:66:1",
																										"nodeType": "YulLiteral",
																										"src": "2588:66:1",
																										"type": "",
																										"value": "0xFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFC"
																									}
																								],
																								"functionName": {
																									"name": "and",
																									"nativeSrc": "2570:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "2570:3:1"
																								},
																								"nativeSrc": "2570:85:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2570:85:1"
																							},
																							{
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "temp",
																												"nativeSrc": "2665:4:1",
																												"nodeType": "YulIdentifier",
																												"src": "2665:4:1"
																											},
																											{
																												"kind": "number",
																												"nativeSrc": "2671:10:1",
																												"nodeType": "YulLiteral",
																												"src": "2671:10:1",
																												"type": "",
																												"value": "0x40000000"
																											}
																										],
																										"functionName": {
																											"name": "div",
																											"nativeSrc": "2661:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "2661:3:1"
																										},
																										"nativeSrc": "2661:21:1",
																										"nodeType": "YulFunctionCall",
																										"src": "2661:21:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2684:66:1",
																										"nodeType": "YulLiteral",
																										"src": "2684:66:1",
																										"type": "",
																										"value": "0x0000000300000003000000030000000300000003000000030000000300000003"
																									}
																								],
																								"functionName": {
																									"name": "and",
																									"nativeSrc": "2657:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "2657:3:1"
																								},
																								"nativeSrc": "2657:94:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2657:94:1"
																							}
																						],
																						"functionName": {
																							"name": "or",
																							"nativeSrc": "2567:2:1",
																							"nodeType": "YulIdentifier",
																							"src": "2567:2:1"
																						},
																						"nativeSrc": "2567:185:1",
																						"nodeType": "YulFunctionCall",
																						"src": "2567:185:1"
																					},
																					"variableNames": [
																						{
																							"name": "temp",
																							"nativeSrc": "2559:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "2559:4:1"
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "scratch",
																										"nativeSrc": "2784:7:1",
																										"nodeType": "YulIdentifier",
																										"src": "2784:7:1"
																									},
																									{
																										"name": "j",
																										"nativeSrc": "2793:1:1",
																										"nodeType": "YulIdentifier",
																										"src": "2793:1:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2780:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "2780:3:1"
																								},
																								"nativeSrc": "2780:15:1",
																								"nodeType": "YulFunctionCall",
																								"src": "2780:15:1"
																							},
																							{
																								"name": "temp",
																								"nativeSrc": "2797:4:1",
																								"nodeType": "YulIdentifier",
																								"src": "2797:4:1"
																							}
																						],
																						"functionName": {
																							"name": "mstore",
																							"nativeSrc": "2773:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "2773:6:1"
																						},
																						"nativeSrc": "2773:29:1",
																						"nodeType": "YulFunctionCall",
																						"src": "2773:29:1"
																					},
																					"nativeSrc": "2773:29:1",
																					"nodeType": "YulExpressionStatement",
																					"src": "2773:29:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "j",
																					"nativeSrc": "2329:1:1",
																					"nodeType": "YulIdentifier",
																					"src": "2329:1:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2332:3:1",
																					"nodeType": "YulLiteral",
																					"src": "2332:3:1",
																					"type": "",
																					"value": "320"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2326:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "2326:2:1"
																			},
																			"nativeSrc": "2326:10:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2326:10:1"
																		},
																		"nativeSrc": "2305:515:1",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "2337:19:1",
																			"nodeType": "YulBlock",
																			"src": "2337:19:1",
																			"statements": [
																				{
																					"nativeSrc": "2339:15:1",
																					"nodeType": "YulAssignment",
																					"src": "2339:15:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "j",
																								"nativeSrc": "2348:1:1",
																								"nodeType": "YulIdentifier",
																								"src": "2348:1:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2351:2:1",
																								"nodeType": "YulLiteral",
																								"src": "2351:2:1",
																								"type": "",
																								"value": "24"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "2344:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "2344:3:1"
																						},
																						"nativeSrc": "2344:10:1",
																						"nodeType": "YulFunctionCall",
																						"src": "2344:10:1"
																					},
																					"variableNames": [
																						{
																							"name": "j",
																							"nativeSrc": "2339:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "2339:1:1"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "2309:16:1",
																			"nodeType": "YulBlock",
																			"src": "2309:16:1",
																			"statements": [
																				{
																					"nativeSrc": "2311:12:1",
																					"nodeType": "YulVariableDeclaration",
																					"src": "2311:12:1",
																					"value": {
																						"kind": "number",
																						"nativeSrc": "2320:3:1",
																						"nodeType": "YulLiteral",
																						"src": "2320:3:1",
																						"type": "",
																						"value": "128"
																					},
																					"variables": [
																						{
																							"name": "j",
																							"nativeSrc": "2315:1:1",
																							"nodeType": "YulTypedName",
																							"src": "2315:1:1",
																							"type": ""
																						}
																					]
																				}
																			]
																		},
																		"src": "2305:515:1"
																	},
																	{
																		"nativeSrc": "2838:10:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2838:10:1",
																		"value": {
																			"name": "h",
																			"nativeSrc": "2847:1:1",
																			"nodeType": "YulIdentifier",
																			"src": "2847:1:1"
																		},
																		"variables": [
																			{
																				"name": "x",
																				"nativeSrc": "2842:1:1",
																				"nodeType": "YulTypedName",
																				"src": "2842:1:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2865:10:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2865:10:1",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "2874:1:1",
																			"nodeType": "YulLiteral",
																			"src": "2874:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "f",
																				"nativeSrc": "2869:1:1",
																				"nodeType": "YulTypedName",
																				"src": "2869:1:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2892:10:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2892:10:1",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "2901:1:1",
																			"nodeType": "YulLiteral",
																			"src": "2901:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "k",
																				"nativeSrc": "2896:1:1",
																				"nodeType": "YulTypedName",
																				"src": "2896:1:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2967:2341:1",
																			"nodeType": "YulBlock",
																			"src": "2967:2341:1",
																			"statements": [
																				{
																					"cases": [
																						{
																							"body": {
																								"nativeSrc": "3034:345:1",
																								"nodeType": "YulBlock",
																								"src": "3034:345:1",
																								"statements": [
																									{
																										"nativeSrc": "3115:64:1",
																										"nodeType": "YulAssignment",
																										"src": "3115:64:1",
																										"value": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"name": "x",
																															"nativeSrc": "3128:1:1",
																															"nodeType": "YulIdentifier",
																															"src": "3128:1:1"
																														},
																														{
																															"kind": "number",
																															"nativeSrc": "3131:23:1",
																															"nodeType": "YulLiteral",
																															"src": "3131:23:1",
																															"type": "",
																															"value": "0x100000000000000000000"
																														}
																													],
																													"functionName": {
																														"name": "div",
																														"nativeSrc": "3124:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "3124:3:1"
																													},
																													"nativeSrc": "3124:31:1",
																													"nodeType": "YulFunctionCall",
																													"src": "3124:31:1"
																												},
																												{
																													"arguments": [
																														{
																															"name": "x",
																															"nativeSrc": "3161:1:1",
																															"nodeType": "YulIdentifier",
																															"src": "3161:1:1"
																														},
																														{
																															"kind": "number",
																															"nativeSrc": "3164:13:1",
																															"nodeType": "YulLiteral",
																															"src": "3164:13:1",
																															"type": "",
																															"value": "0x10000000000"
																														}
																													],
																													"functionName": {
																														"name": "div",
																														"nativeSrc": "3157:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "3157:3:1"
																													},
																													"nativeSrc": "3157:21:1",
																													"nodeType": "YulFunctionCall",
																													"src": "3157:21:1"
																												}
																											],
																											"functionName": {
																												"name": "xor",
																												"nativeSrc": "3120:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "3120:3:1"
																											},
																											"nativeSrc": "3120:59:1",
																											"nodeType": "YulFunctionCall",
																											"src": "3120:59:1"
																										},
																										"variableNames": [
																											{
																												"name": "f",
																												"nativeSrc": "3115:1:1",
																												"nodeType": "YulIdentifier",
																												"src": "3115:1:1"
																											}
																										]
																									},
																									{
																										"nativeSrc": "3204:54:1",
																										"nodeType": "YulAssignment",
																										"src": "3204:54:1",
																										"value": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"name": "x",
																															"nativeSrc": "3217:1:1",
																															"nodeType": "YulIdentifier",
																															"src": "3217:1:1"
																														},
																														{
																															"kind": "number",
																															"nativeSrc": "3220:33:1",
																															"nodeType": "YulLiteral",
																															"src": "3220:33:1",
																															"type": "",
																															"value": "0x1000000000000000000000000000000"
																														}
																													],
																													"functionName": {
																														"name": "div",
																														"nativeSrc": "3213:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "3213:3:1"
																													},
																													"nativeSrc": "3213:41:1",
																													"nodeType": "YulFunctionCall",
																													"src": "3213:41:1"
																												},
																												{
																													"name": "f",
																													"nativeSrc": "3256:1:1",
																													"nodeType": "YulIdentifier",
																													"src": "3256:1:1"
																												}
																											],
																											"functionName": {
																												"name": "and",
																												"nativeSrc": "3209:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "3209:3:1"
																											},
																											"nativeSrc": "3209:49:1",
																											"nodeType": "YulFunctionCall",
																											"src": "3209:49:1"
																										},
																										"variableNames": [
																											{
																												"name": "f",
																												"nativeSrc": "3204:1:1",
																												"nodeType": "YulIdentifier",
																												"src": "3204:1:1"
																											}
																										]
																									},
																									{
																										"nativeSrc": "3283:34:1",
																										"nodeType": "YulAssignment",
																										"src": "3283:34:1",
																										"value": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"name": "x",
																															"nativeSrc": "3296:1:1",
																															"nodeType": "YulIdentifier",
																															"src": "3296:1:1"
																														},
																														{
																															"kind": "number",
																															"nativeSrc": "3299:13:1",
																															"nodeType": "YulLiteral",
																															"src": "3299:13:1",
																															"type": "",
																															"value": "0x10000000000"
																														}
																													],
																													"functionName": {
																														"name": "div",
																														"nativeSrc": "3292:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "3292:3:1"
																													},
																													"nativeSrc": "3292:21:1",
																													"nodeType": "YulFunctionCall",
																													"src": "3292:21:1"
																												},
																												{
																													"name": "f",
																													"nativeSrc": "3315:1:1",
																													"nodeType": "YulIdentifier",
																													"src": "3315:1:1"
																												}
																											],
																											"functionName": {
																												"name": "xor",
																												"nativeSrc": "3288:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "3288:3:1"
																											},
																											"nativeSrc": "3288:29:1",
																											"nodeType": "YulFunctionCall",
																											"src": "3288:29:1"
																										},
																										"variableNames": [
																											{
																												"name": "f",
																												"nativeSrc": "3283:1:1",
																												"nodeType": "YulIdentifier",
																												"src": "3283:1:1"
																											}
																										]
																									},
																									{
																										"nativeSrc": "3342:15:1",
																										"nodeType": "YulAssignment",
																										"src": "3342:15:1",
																										"value": {
																											"kind": "number",
																											"nativeSrc": "3347:10:1",
																											"nodeType": "YulLiteral",
																											"src": "3347:10:1",
																											"type": "",
																											"value": "0x5A827999"
																										},
																										"variableNames": [
																											{
																												"name": "k",
																												"nativeSrc": "3342:1:1",
																												"nodeType": "YulIdentifier",
																												"src": "3342:1:1"
																											}
																										]
																									}
																								]
																							},
																							"nativeSrc": "3027:352:1",
																							"nodeType": "YulCase",
																							"src": "3027:352:1",
																							"value": {
																								"kind": "number",
																								"nativeSrc": "3032:1:1",
																								"nodeType": "YulLiteral",
																								"src": "3032:1:1",
																								"type": "",
																								"value": "0"
																							}
																						},
																						{
																							"body": {
																								"nativeSrc": "3406:276:1",
																								"nodeType": "YulBlock",
																								"src": "3406:276:1",
																								"statements": [
																									{
																										"nativeSrc": "3477:84:1",
																										"nodeType": "YulAssignment",
																										"src": "3477:84:1",
																										"value": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"name": "x",
																															"nativeSrc": "3490:1:1",
																															"nodeType": "YulIdentifier",
																															"src": "3490:1:1"
																														},
																														{
																															"kind": "number",
																															"nativeSrc": "3493:33:1",
																															"nodeType": "YulLiteral",
																															"src": "3493:33:1",
																															"type": "",
																															"value": "0x1000000000000000000000000000000"
																														}
																													],
																													"functionName": {
																														"name": "div",
																														"nativeSrc": "3486:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "3486:3:1"
																													},
																													"nativeSrc": "3486:41:1",
																													"nodeType": "YulFunctionCall",
																													"src": "3486:41:1"
																												},
																												{
																													"arguments": [
																														{
																															"name": "x",
																															"nativeSrc": "3533:1:1",
																															"nodeType": "YulIdentifier",
																															"src": "3533:1:1"
																														},
																														{
																															"kind": "number",
																															"nativeSrc": "3536:23:1",
																															"nodeType": "YulLiteral",
																															"src": "3536:23:1",
																															"type": "",
																															"value": "0x100000000000000000000"
																														}
																													],
																													"functionName": {
																														"name": "div",
																														"nativeSrc": "3529:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "3529:3:1"
																													},
																													"nativeSrc": "3529:31:1",
																													"nodeType": "YulFunctionCall",
																													"src": "3529:31:1"
																												}
																											],
																											"functionName": {
																												"name": "xor",
																												"nativeSrc": "3482:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "3482:3:1"
																											},
																											"nativeSrc": "3482:79:1",
																											"nodeType": "YulFunctionCall",
																											"src": "3482:79:1"
																										},
																										"variableNames": [
																											{
																												"name": "f",
																												"nativeSrc": "3477:1:1",
																												"nodeType": "YulIdentifier",
																												"src": "3477:1:1"
																											}
																										]
																									},
																									{
																										"nativeSrc": "3586:34:1",
																										"nodeType": "YulAssignment",
																										"src": "3586:34:1",
																										"value": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"name": "x",
																															"nativeSrc": "3599:1:1",
																															"nodeType": "YulIdentifier",
																															"src": "3599:1:1"
																														},
																														{
																															"kind": "number",
																															"nativeSrc": "3602:13:1",
																															"nodeType": "YulLiteral",
																															"src": "3602:13:1",
																															"type": "",
																															"value": "0x10000000000"
																														}
																													],
																													"functionName": {
																														"name": "div",
																														"nativeSrc": "3595:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "3595:3:1"
																													},
																													"nativeSrc": "3595:21:1",
																													"nodeType": "YulFunctionCall",
																													"src": "3595:21:1"
																												},
																												{
																													"name": "f",
																													"nativeSrc": "3618:1:1",
																													"nodeType": "YulIdentifier",
																													"src": "3618:1:1"
																												}
																											],
																											"functionName": {
																												"name": "xor",
																												"nativeSrc": "3591:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "3591:3:1"
																											},
																											"nativeSrc": "3591:29:1",
																											"nodeType": "YulFunctionCall",
																											"src": "3591:29:1"
																										},
																										"variableNames": [
																											{
																												"name": "f",
																												"nativeSrc": "3586:1:1",
																												"nodeType": "YulIdentifier",
																												"src": "3586:1:1"
																											}
																										]
																									},
																									{
																										"nativeSrc": "3645:15:1",
																										"nodeType": "YulAssignment",
																										"src": "3645:15:1",
																										"value": {
																											"kind": "number",
																											"nativeSrc": "3650:10:1",
																											"nodeType": "YulLiteral",
																											"src": "3650:10:1",
																											"type": "",
																											"value": "0x6ED9EBA1"
																										},
																										"variableNames": [
																											{
																												"name": "k",
																												"nativeSrc": "3645:1:1",
																												"nodeType": "YulIdentifier",
																												"src": "3645:1:1"
																											}
																										]
																									}
																								]
																							},
																							"nativeSrc": "3400:282:1",
																							"nodeType": "YulCase",
																							"src": "3400:282:1",
																							"value": {
																								"kind": "number",
																								"nativeSrc": "3405:1:1",
																								"nodeType": "YulLiteral",
																								"src": "3405:1:1",
																								"type": "",
																								"value": "1"
																							}
																						},
																						{
																							"body": {
																								"nativeSrc": "3710:407:1",
																								"nodeType": "YulBlock",
																								"src": "3710:407:1",
																								"statements": [
																									{
																										"nativeSrc": "3797:83:1",
																										"nodeType": "YulAssignment",
																										"src": "3797:83:1",
																										"value": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"name": "x",
																															"nativeSrc": "3809:1:1",
																															"nodeType": "YulIdentifier",
																															"src": "3809:1:1"
																														},
																														{
																															"kind": "number",
																															"nativeSrc": "3812:33:1",
																															"nodeType": "YulLiteral",
																															"src": "3812:33:1",
																															"type": "",
																															"value": "0x1000000000000000000000000000000"
																														}
																													],
																													"functionName": {
																														"name": "div",
																														"nativeSrc": "3805:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "3805:3:1"
																													},
																													"nativeSrc": "3805:41:1",
																													"nodeType": "YulFunctionCall",
																													"src": "3805:41:1"
																												},
																												{
																													"arguments": [
																														{
																															"name": "x",
																															"nativeSrc": "3852:1:1",
																															"nodeType": "YulIdentifier",
																															"src": "3852:1:1"
																														},
																														{
																															"kind": "number",
																															"nativeSrc": "3855:23:1",
																															"nodeType": "YulLiteral",
																															"src": "3855:23:1",
																															"type": "",
																															"value": "0x100000000000000000000"
																														}
																													],
																													"functionName": {
																														"name": "div",
																														"nativeSrc": "3848:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "3848:3:1"
																													},
																													"nativeSrc": "3848:31:1",
																													"nodeType": "YulFunctionCall",
																													"src": "3848:31:1"
																												}
																											],
																											"functionName": {
																												"name": "or",
																												"nativeSrc": "3802:2:1",
																												"nodeType": "YulIdentifier",
																												"src": "3802:2:1"
																											},
																											"nativeSrc": "3802:78:1",
																											"nodeType": "YulFunctionCall",
																											"src": "3802:78:1"
																										},
																										"variableNames": [
																											{
																												"name": "f",
																												"nativeSrc": "3797:1:1",
																												"nodeType": "YulIdentifier",
																												"src": "3797:1:1"
																											}
																										]
																									},
																									{
																										"nativeSrc": "3905:34:1",
																										"nodeType": "YulAssignment",
																										"src": "3905:34:1",
																										"value": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"name": "x",
																															"nativeSrc": "3918:1:1",
																															"nodeType": "YulIdentifier",
																															"src": "3918:1:1"
																														},
																														{
																															"kind": "number",
																															"nativeSrc": "3921:13:1",
																															"nodeType": "YulLiteral",
																															"src": "3921:13:1",
																															"type": "",
																															"value": "0x10000000000"
																														}
																													],
																													"functionName": {
																														"name": "div",
																														"nativeSrc": "3914:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "3914:3:1"
																													},
																													"nativeSrc": "3914:21:1",
																													"nodeType": "YulFunctionCall",
																													"src": "3914:21:1"
																												},
																												{
																													"name": "f",
																													"nativeSrc": "3937:1:1",
																													"nodeType": "YulIdentifier",
																													"src": "3937:1:1"
																												}
																											],
																											"functionName": {
																												"name": "and",
																												"nativeSrc": "3910:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "3910:3:1"
																											},
																											"nativeSrc": "3910:29:1",
																											"nodeType": "YulFunctionCall",
																											"src": "3910:29:1"
																										},
																										"variableNames": [
																											{
																												"name": "f",
																												"nativeSrc": "3905:1:1",
																												"nodeType": "YulIdentifier",
																												"src": "3905:1:1"
																											}
																										]
																									},
																									{
																										"nativeSrc": "3964:91:1",
																										"nodeType": "YulAssignment",
																										"src": "3964:91:1",
																										"value": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"arguments": [
																																{
																																	"name": "x",
																																	"nativeSrc": "3980:1:1",
																																	"nodeType": "YulIdentifier",
																																	"src": "3980:1:1"
																																},
																																{
																																	"kind": "number",
																																	"nativeSrc": "3983:33:1",
																																	"nodeType": "YulLiteral",
																																	"src": "3983:33:1",
																																	"type": "",
																																	"value": "0x1000000000000000000000000000000"
																																}
																															],
																															"functionName": {
																																"name": "div",
																																"nativeSrc": "3976:3:1",
																																"nodeType": "YulIdentifier",
																																"src": "3976:3:1"
																															},
																															"nativeSrc": "3976:41:1",
																															"nodeType": "YulFunctionCall",
																															"src": "3976:41:1"
																														},
																														{
																															"arguments": [
																																{
																																	"name": "x",
																																	"nativeSrc": "4023:1:1",
																																	"nodeType": "YulIdentifier",
																																	"src": "4023:1:1"
																																},
																																{
																																	"kind": "number",
																																	"nativeSrc": "4026:23:1",
																																	"nodeType": "YulLiteral",
																																	"src": "4026:23:1",
																																	"type": "",
																																	"value": "0x100000000000000000000"
																																}
																															],
																															"functionName": {
																																"name": "div",
																																"nativeSrc": "4019:3:1",
																																"nodeType": "YulIdentifier",
																																"src": "4019:3:1"
																															},
																															"nativeSrc": "4019:31:1",
																															"nodeType": "YulFunctionCall",
																															"src": "4019:31:1"
																														}
																													],
																													"functionName": {
																														"name": "and",
																														"nativeSrc": "3972:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "3972:3:1"
																													},
																													"nativeSrc": "3972:79:1",
																													"nodeType": "YulFunctionCall",
																													"src": "3972:79:1"
																												},
																												{
																													"name": "f",
																													"nativeSrc": "4053:1:1",
																													"nodeType": "YulIdentifier",
																													"src": "4053:1:1"
																												}
																											],
																											"functionName": {
																												"name": "or",
																												"nativeSrc": "3969:2:1",
																												"nodeType": "YulIdentifier",
																												"src": "3969:2:1"
																											},
																											"nativeSrc": "3969:86:1",
																											"nodeType": "YulFunctionCall",
																											"src": "3969:86:1"
																										},
																										"variableNames": [
																											{
																												"name": "f",
																												"nativeSrc": "3964:1:1",
																												"nodeType": "YulIdentifier",
																												"src": "3964:1:1"
																											}
																										]
																									},
																									{
																										"nativeSrc": "4080:15:1",
																										"nodeType": "YulAssignment",
																										"src": "4080:15:1",
																										"value": {
																											"kind": "number",
																											"nativeSrc": "4085:10:1",
																											"nodeType": "YulLiteral",
																											"src": "4085:10:1",
																											"type": "",
																											"value": "0x8F1BBCDC"
																										},
																										"variableNames": [
																											{
																												"name": "k",
																												"nativeSrc": "4080:1:1",
																												"nodeType": "YulIdentifier",
																												"src": "4080:1:1"
																											}
																										]
																									}
																								]
																							},
																							"nativeSrc": "3703:414:1",
																							"nodeType": "YulCase",
																							"src": "3703:414:1",
																							"value": {
																								"kind": "number",
																								"nativeSrc": "3708:1:1",
																								"nodeType": "YulLiteral",
																								"src": "3708:1:1",
																								"type": "",
																								"value": "2"
																							}
																						},
																						{
																							"body": {
																								"nativeSrc": "4145:276:1",
																								"nodeType": "YulBlock",
																								"src": "4145:276:1",
																								"statements": [
																									{
																										"nativeSrc": "4216:84:1",
																										"nodeType": "YulAssignment",
																										"src": "4216:84:1",
																										"value": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"name": "x",
																															"nativeSrc": "4229:1:1",
																															"nodeType": "YulIdentifier",
																															"src": "4229:1:1"
																														},
																														{
																															"kind": "number",
																															"nativeSrc": "4232:33:1",
																															"nodeType": "YulLiteral",
																															"src": "4232:33:1",
																															"type": "",
																															"value": "0x1000000000000000000000000000000"
																														}
																													],
																													"functionName": {
																														"name": "div",
																														"nativeSrc": "4225:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "4225:3:1"
																													},
																													"nativeSrc": "4225:41:1",
																													"nodeType": "YulFunctionCall",
																													"src": "4225:41:1"
																												},
																												{
																													"arguments": [
																														{
																															"name": "x",
																															"nativeSrc": "4272:1:1",
																															"nodeType": "YulIdentifier",
																															"src": "4272:1:1"
																														},
																														{
																															"kind": "number",
																															"nativeSrc": "4275:23:1",
																															"nodeType": "YulLiteral",
																															"src": "4275:23:1",
																															"type": "",
																															"value": "0x100000000000000000000"
																														}
																													],
																													"functionName": {
																														"name": "div",
																														"nativeSrc": "4268:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "4268:3:1"
																													},
																													"nativeSrc": "4268:31:1",
																													"nodeType": "YulFunctionCall",
																													"src": "4268:31:1"
																												}
																											],
																											"functionName": {
																												"name": "xor",
																												"nativeSrc": "4221:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "4221:3:1"
																											},
																											"nativeSrc": "4221:79:1",
																											"nodeType": "YulFunctionCall",
																											"src": "4221:79:1"
																										},
																										"variableNames": [
																											{
																												"name": "f",
																												"nativeSrc": "4216:1:1",
																												"nodeType": "YulIdentifier",
																												"src": "4216:1:1"
																											}
																										]
																									},
																									{
																										"nativeSrc": "4325:34:1",
																										"nodeType": "YulAssignment",
																										"src": "4325:34:1",
																										"value": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"name": "x",
																															"nativeSrc": "4338:1:1",
																															"nodeType": "YulIdentifier",
																															"src": "4338:1:1"
																														},
																														{
																															"kind": "number",
																															"nativeSrc": "4341:13:1",
																															"nodeType": "YulLiteral",
																															"src": "4341:13:1",
																															"type": "",
																															"value": "0x10000000000"
																														}
																													],
																													"functionName": {
																														"name": "div",
																														"nativeSrc": "4334:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "4334:3:1"
																													},
																													"nativeSrc": "4334:21:1",
																													"nodeType": "YulFunctionCall",
																													"src": "4334:21:1"
																												},
																												{
																													"name": "f",
																													"nativeSrc": "4357:1:1",
																													"nodeType": "YulIdentifier",
																													"src": "4357:1:1"
																												}
																											],
																											"functionName": {
																												"name": "xor",
																												"nativeSrc": "4330:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "4330:3:1"
																											},
																											"nativeSrc": "4330:29:1",
																											"nodeType": "YulFunctionCall",
																											"src": "4330:29:1"
																										},
																										"variableNames": [
																											{
																												"name": "f",
																												"nativeSrc": "4325:1:1",
																												"nodeType": "YulIdentifier",
																												"src": "4325:1:1"
																											}
																										]
																									},
																									{
																										"nativeSrc": "4384:15:1",
																										"nodeType": "YulAssignment",
																										"src": "4384:15:1",
																										"value": {
																											"kind": "number",
																											"nativeSrc": "4389:10:1",
																											"nodeType": "YulLiteral",
																											"src": "4389:10:1",
																											"type": "",
																											"value": "0xCA62C1D6"
																										},
																										"variableNames": [
																											{
																												"name": "k",
																												"nativeSrc": "4384:1:1",
																												"nodeType": "YulIdentifier",
																												"src": "4384:1:1"
																											}
																										]
																									}
																								]
																							},
																							"nativeSrc": "4138:283:1",
																							"nodeType": "YulCase",
																							"src": "4138:283:1",
																							"value": {
																								"kind": "number",
																								"nativeSrc": "4143:1:1",
																								"nodeType": "YulLiteral",
																								"src": "4143:1:1",
																								"type": "",
																								"value": "3"
																							}
																						}
																					],
																					"expression": {
																						"arguments": [
																							{
																								"name": "j",
																								"nativeSrc": "3000:1:1",
																								"nodeType": "YulIdentifier",
																								"src": "3000:1:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3003:2:1",
																								"nodeType": "YulLiteral",
																								"src": "3003:2:1",
																								"type": "",
																								"value": "20"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "2996:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "2996:3:1"
																						},
																						"nativeSrc": "2996:10:1",
																						"nodeType": "YulFunctionCall",
																						"src": "2996:10:1"
																					},
																					"nativeSrc": "2989:1432:1",
																					"nodeType": "YulSwitch",
																					"src": "2989:1432:1"
																				},
																				{
																					"nativeSrc": "4508:80:1",
																					"nodeType": "YulVariableDeclaration",
																					"src": "4508:80:1",
																					"value": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "x",
																										"nativeSrc": "4528:1:1",
																										"nodeType": "YulIdentifier",
																										"src": "4528:1:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4531:49:1",
																										"nodeType": "YulLiteral",
																										"src": "4531:49:1",
																										"type": "",
																										"value": "0x80000000000000000000000000000000000000000000000"
																									}
																								],
																								"functionName": {
																									"name": "div",
																									"nativeSrc": "4524:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "4524:3:1"
																								},
																								"nativeSrc": "4524:57:1",
																								"nodeType": "YulFunctionCall",
																								"src": "4524:57:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4583:4:1",
																								"nodeType": "YulLiteral",
																								"src": "4583:4:1",
																								"type": "",
																								"value": "0x1F"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "4520:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "4520:3:1"
																						},
																						"nativeSrc": "4520:68:1",
																						"nodeType": "YulFunctionCall",
																						"src": "4520:68:1"
																					},
																					"variables": [
																						{
																							"name": "temp",
																							"nativeSrc": "4512:4:1",
																							"nodeType": "YulTypedName",
																							"src": "4512:4:1",
																							"type": ""
																						}
																					]
																				},
																				{
																					"nativeSrc": "4609:84:1",
																					"nodeType": "YulAssignment",
																					"src": "4609:84:1",
																					"value": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "x",
																												"nativeSrc": "4628:1:1",
																												"nodeType": "YulIdentifier",
																												"src": "4628:1:1"
																											},
																											{
																												"kind": "number",
																												"nativeSrc": "4631:41:1",
																												"nodeType": "YulLiteral",
																												"src": "4631:41:1",
																												"type": "",
																												"value": "0x800000000000000000000000000000000000000"
																											}
																										],
																										"functionName": {
																											"name": "div",
																											"nativeSrc": "4624:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "4624:3:1"
																										},
																										"nativeSrc": "4624:49:1",
																										"nodeType": "YulFunctionCall",
																										"src": "4624:49:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4675:10:1",
																										"nodeType": "YulLiteral",
																										"src": "4675:10:1",
																										"type": "",
																										"value": "0xFFFFFFE0"
																									}
																								],
																								"functionName": {
																									"name": "and",
																									"nativeSrc": "4620:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "4620:3:1"
																								},
																								"nativeSrc": "4620:66:1",
																								"nodeType": "YulFunctionCall",
																								"src": "4620:66:1"
																							},
																							{
																								"name": "temp",
																								"nativeSrc": "4688:4:1",
																								"nodeType": "YulIdentifier",
																								"src": "4688:4:1"
																							}
																						],
																						"functionName": {
																							"name": "or",
																							"nativeSrc": "4617:2:1",
																							"nodeType": "YulIdentifier",
																							"src": "4617:2:1"
																						},
																						"nativeSrc": "4617:76:1",
																						"nodeType": "YulFunctionCall",
																						"src": "4617:76:1"
																					},
																					"variableNames": [
																						{
																							"name": "temp",
																							"nativeSrc": "4609:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "4609:4:1"
																						}
																					]
																				},
																				{
																					"nativeSrc": "4714:20:1",
																					"nodeType": "YulAssignment",
																					"src": "4714:20:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "f",
																								"nativeSrc": "4726:1:1",
																								"nodeType": "YulIdentifier",
																								"src": "4726:1:1"
																							},
																							{
																								"name": "temp",
																								"nativeSrc": "4729:4:1",
																								"nodeType": "YulIdentifier",
																								"src": "4729:4:1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "4722:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "4722:3:1"
																						},
																						"nativeSrc": "4722:12:1",
																						"nodeType": "YulFunctionCall",
																						"src": "4722:12:1"
																					},
																					"variableNames": [
																						{
																							"name": "temp",
																							"nativeSrc": "4714:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "4714:4:1"
																						}
																					]
																				},
																				{
																					"nativeSrc": "4755:37:1",
																					"nodeType": "YulAssignment",
																					"src": "4755:37:1",
																					"value": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "x",
																										"nativeSrc": "4771:1:1",
																										"nodeType": "YulIdentifier",
																										"src": "4771:1:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4774:10:1",
																										"nodeType": "YulLiteral",
																										"src": "4774:10:1",
																										"type": "",
																										"value": "0xFFFFFFFF"
																									}
																								],
																								"functionName": {
																									"name": "and",
																									"nativeSrc": "4767:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "4767:3:1"
																								},
																								"nativeSrc": "4767:18:1",
																								"nodeType": "YulFunctionCall",
																								"src": "4767:18:1"
																							},
																							{
																								"name": "temp",
																								"nativeSrc": "4787:4:1",
																								"nodeType": "YulIdentifier",
																								"src": "4787:4:1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "4763:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "4763:3:1"
																						},
																						"nativeSrc": "4763:29:1",
																						"nodeType": "YulFunctionCall",
																						"src": "4763:29:1"
																					},
																					"variableNames": [
																						{
																							"name": "temp",
																							"nativeSrc": "4755:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "4755:4:1"
																						}
																					]
																				},
																				{
																					"nativeSrc": "4813:20:1",
																					"nodeType": "YulAssignment",
																					"src": "4813:20:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "k",
																								"nativeSrc": "4825:1:1",
																								"nodeType": "YulIdentifier",
																								"src": "4825:1:1"
																							},
																							{
																								"name": "temp",
																								"nativeSrc": "4828:4:1",
																								"nodeType": "YulIdentifier",
																								"src": "4828:4:1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "4821:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "4821:3:1"
																						},
																						"nativeSrc": "4821:12:1",
																						"nodeType": "YulFunctionCall",
																						"src": "4821:12:1"
																					},
																					"variableNames": [
																						{
																							"name": "temp",
																							"nativeSrc": "4813:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "4813:4:1"
																						}
																					]
																				},
																				{
																					"nativeSrc": "4854:115:1",
																					"nodeType": "YulAssignment",
																					"src": "4854:115:1",
																					"value": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "scratch",
																														"nativeSrc": "4880:7:1",
																														"nodeType": "YulIdentifier",
																														"src": "4880:7:1"
																													},
																													{
																														"arguments": [
																															{
																																"name": "j",
																																"nativeSrc": "4893:1:1",
																																"nodeType": "YulIdentifier",
																																"src": "4893:1:1"
																															},
																															{
																																"kind": "number",
																																"nativeSrc": "4896:1:1",
																																"nodeType": "YulLiteral",
																																"src": "4896:1:1",
																																"type": "",
																																"value": "4"
																															}
																														],
																														"functionName": {
																															"name": "mul",
																															"nativeSrc": "4889:3:1",
																															"nodeType": "YulIdentifier",
																															"src": "4889:3:1"
																														},
																														"nativeSrc": "4889:9:1",
																														"nodeType": "YulFunctionCall",
																														"src": "4889:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4876:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "4876:3:1"
																												},
																												"nativeSrc": "4876:23:1",
																												"nodeType": "YulFunctionCall",
																												"src": "4876:23:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4870:5:1",
																											"nodeType": "YulIdentifier",
																											"src": "4870:5:1"
																										},
																										"nativeSrc": "4870:30:1",
																										"nodeType": "YulFunctionCall",
																										"src": "4870:30:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4902:59:1",
																										"nodeType": "YulLiteral",
																										"src": "4902:59:1",
																										"type": "",
																										"value": "0x100000000000000000000000000000000000000000000000000000000"
																									}
																								],
																								"functionName": {
																									"name": "div",
																									"nativeSrc": "4866:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "4866:3:1"
																								},
																								"nativeSrc": "4866:96:1",
																								"nodeType": "YulFunctionCall",
																								"src": "4866:96:1"
																							},
																							{
																								"name": "temp",
																								"nativeSrc": "4964:4:1",
																								"nodeType": "YulIdentifier",
																								"src": "4964:4:1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "4862:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "4862:3:1"
																						},
																						"nativeSrc": "4862:107:1",
																						"nodeType": "YulFunctionCall",
																						"src": "4862:107:1"
																					},
																					"variableNames": [
																						{
																							"name": "temp",
																							"nativeSrc": "4854:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "4854:4:1"
																						}
																					]
																				},
																				{
																					"nativeSrc": "4990:86:1",
																					"nodeType": "YulAssignment",
																					"src": "4990:86:1",
																					"value": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "x",
																										"nativeSrc": "5002:1:1",
																										"nodeType": "YulIdentifier",
																										"src": "5002:1:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5005:13:1",
																										"nodeType": "YulLiteral",
																										"src": "5005:13:1",
																										"type": "",
																										"value": "0x10000000000"
																									}
																								],
																								"functionName": {
																									"name": "div",
																									"nativeSrc": "4998:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "4998:3:1"
																								},
																								"nativeSrc": "4998:21:1",
																								"nodeType": "YulFunctionCall",
																								"src": "4998:21:1"
																							},
																							{
																								"arguments": [
																									{
																										"name": "temp",
																										"nativeSrc": "5025:4:1",
																										"nodeType": "YulIdentifier",
																										"src": "5025:4:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5031:43:1",
																										"nodeType": "YulLiteral",
																										"src": "5031:43:1",
																										"type": "",
																										"value": "0x10000000000000000000000000000000000000000"
																									}
																								],
																								"functionName": {
																									"name": "mul",
																									"nativeSrc": "5021:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "5021:3:1"
																								},
																								"nativeSrc": "5021:54:1",
																								"nodeType": "YulFunctionCall",
																								"src": "5021:54:1"
																							}
																						],
																						"functionName": {
																							"name": "or",
																							"nativeSrc": "4995:2:1",
																							"nodeType": "YulIdentifier",
																							"src": "4995:2:1"
																						},
																						"nativeSrc": "4995:81:1",
																						"nodeType": "YulFunctionCall",
																						"src": "4995:81:1"
																					},
																					"variableNames": [
																						{
																							"name": "x",
																							"nativeSrc": "4990:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "4990:1:1"
																						}
																					]
																				},
																				{
																					"nativeSrc": "5097:193:1",
																					"nodeType": "YulAssignment",
																					"src": "5097:193:1",
																					"value": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "x",
																										"nativeSrc": "5109:1:1",
																										"nodeType": "YulIdentifier",
																										"src": "5109:1:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5112:50:1",
																										"nodeType": "YulLiteral",
																										"src": "5112:50:1",
																										"type": "",
																										"value": "0xFFFFFFFF00FFFFFFFF000000000000FFFFFFFF00FFFFFFFF"
																									}
																								],
																								"functionName": {
																									"name": "and",
																									"nativeSrc": "5105:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "5105:3:1"
																								},
																								"nativeSrc": "5105:58:1",
																								"nodeType": "YulFunctionCall",
																								"src": "5105:58:1"
																							},
																							{
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"name": "x",
																																"nativeSrc": "5180:1:1",
																																"nodeType": "YulIdentifier",
																																"src": "5180:1:1"
																															},
																															{
																																"kind": "number",
																																"nativeSrc": "5183:15:1",
																																"nodeType": "YulLiteral",
																																"src": "5183:15:1",
																																"type": "",
																																"value": "0x4000000000000"
																															}
																														],
																														"functionName": {
																															"name": "div",
																															"nativeSrc": "5176:3:1",
																															"nodeType": "YulIdentifier",
																															"src": "5176:3:1"
																														},
																														"nativeSrc": "5176:23:1",
																														"nodeType": "YulFunctionCall",
																														"src": "5176:23:1"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "5201:10:1",
																														"nodeType": "YulLiteral",
																														"src": "5201:10:1",
																														"type": "",
																														"value": "0xC0000000"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "5172:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "5172:3:1"
																												},
																												"nativeSrc": "5172:40:1",
																												"nodeType": "YulFunctionCall",
																												"src": "5172:40:1"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"name": "x",
																																"nativeSrc": "5222:1:1",
																																"nodeType": "YulIdentifier",
																																"src": "5222:1:1"
																															},
																															{
																																"kind": "number",
																																"nativeSrc": "5225:23:1",
																																"nodeType": "YulLiteral",
																																"src": "5225:23:1",
																																"type": "",
																																"value": "0x400000000000000000000"
																															}
																														],
																														"functionName": {
																															"name": "div",
																															"nativeSrc": "5218:3:1",
																															"nodeType": "YulIdentifier",
																															"src": "5218:3:1"
																														},
																														"nativeSrc": "5218:31:1",
																														"nodeType": "YulFunctionCall",
																														"src": "5218:31:1"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "5251:10:1",
																														"nodeType": "YulLiteral",
																														"src": "5251:10:1",
																														"type": "",
																														"value": "0x3FFFFFFF"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "5214:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "5214:3:1"
																												},
																												"nativeSrc": "5214:48:1",
																												"nodeType": "YulFunctionCall",
																												"src": "5214:48:1"
																											}
																										],
																										"functionName": {
																											"name": "or",
																											"nativeSrc": "5169:2:1",
																											"nodeType": "YulIdentifier",
																											"src": "5169:2:1"
																										},
																										"nativeSrc": "5169:94:1",
																										"nodeType": "YulFunctionCall",
																										"src": "5169:94:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5265:23:1",
																										"nodeType": "YulLiteral",
																										"src": "5265:23:1",
																										"type": "",
																										"value": "0x100000000000000000000"
																									}
																								],
																								"functionName": {
																									"name": "mul",
																									"nativeSrc": "5165:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "5165:3:1"
																								},
																								"nativeSrc": "5165:124:1",
																								"nodeType": "YulFunctionCall",
																								"src": "5165:124:1"
																							}
																						],
																						"functionName": {
																							"name": "or",
																							"nativeSrc": "5102:2:1",
																							"nodeType": "YulIdentifier",
																							"src": "5102:2:1"
																						},
																						"nativeSrc": "5102:188:1",
																						"nodeType": "YulFunctionCall",
																						"src": "5102:188:1"
																					},
																					"variableNames": [
																						{
																							"name": "x",
																							"nativeSrc": "5097:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "5097:1:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "j",
																					"nativeSrc": "2941:1:1",
																					"nodeType": "YulIdentifier",
																					"src": "2941:1:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2944:2:1",
																					"nodeType": "YulLiteral",
																					"src": "2944:2:1",
																					"type": "",
																					"value": "80"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2938:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "2938:2:1"
																			},
																			"nativeSrc": "2938:9:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2938:9:1"
																		},
																		"nativeSrc": "2919:2389:1",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "2948:18:1",
																			"nodeType": "YulBlock",
																			"src": "2948:18:1",
																			"statements": [
																				{
																					"nativeSrc": "2950:14:1",
																					"nodeType": "YulAssignment",
																					"src": "2950:14:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "j",
																								"nativeSrc": "2959:1:1",
																								"nodeType": "YulIdentifier",
																								"src": "2959:1:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2962:1:1",
																								"nodeType": "YulLiteral",
																								"src": "2962:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "2955:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "2955:3:1"
																						},
																						"nativeSrc": "2955:9:1",
																						"nodeType": "YulFunctionCall",
																						"src": "2955:9:1"
																					},
																					"variableNames": [
																						{
																							"name": "j",
																							"nativeSrc": "2950:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "2950:1:1"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "2923:14:1",
																			"nodeType": "YulBlock",
																			"src": "2923:14:1",
																			"statements": [
																				{
																					"nativeSrc": "2925:10:1",
																					"nodeType": "YulVariableDeclaration",
																					"src": "2925:10:1",
																					"value": {
																						"kind": "number",
																						"nativeSrc": "2934:1:1",
																						"nodeType": "YulLiteral",
																						"src": "2934:1:1",
																						"type": "",
																						"value": "0"
																					},
																					"variables": [
																						{
																							"name": "j",
																							"nativeSrc": "2929:1:1",
																							"nodeType": "YulTypedName",
																							"src": "2929:1:1",
																							"type": ""
																						}
																					]
																				}
																			]
																		},
																		"src": "2919:2389:1"
																	},
																	{
																		"nativeSrc": "5326:71:1",
																		"nodeType": "YulAssignment",
																		"src": "5326:71:1",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "h",
																							"nativeSrc": "5339:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "5339:1:1"
																						},
																						{
																							"name": "x",
																							"nativeSrc": "5342:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "5342:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5335:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "5335:3:1"
																					},
																					"nativeSrc": "5335:9:1",
																					"nodeType": "YulFunctionCall",
																					"src": "5335:9:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5346:50:1",
																					"nodeType": "YulLiteral",
																					"src": "5346:50:1",
																					"type": "",
																					"value": "0xFFFFFFFF00FFFFFFFF00FFFFFFFF00FFFFFFFF00FFFFFFFF"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "5331:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "5331:3:1"
																			},
																			"nativeSrc": "5331:66:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5331:66:1"
																		},
																		"variableNames": [
																			{
																				"name": "h",
																				"nativeSrc": "5326:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "5326:1:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "1149:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "1149:1:1"
																	},
																	{
																		"name": "totallen",
																		"nativeSrc": "1152:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "1152:8:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "1146:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1146:2:1"
																},
																"nativeSrc": "1146:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1146:15:1"
															},
															"nativeSrc": "1127:4284:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "1162:19:1",
																"nodeType": "YulBlock",
																"src": "1162:19:1",
																"statements": [
																	{
																		"nativeSrc": "1164:15:1",
																		"nodeType": "YulAssignment",
																		"src": "1164:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "1173:1:1",
																					"nodeType": "YulIdentifier",
																					"src": "1173:1:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1176:2:1",
																					"nodeType": "YulLiteral",
																					"src": "1176:2:1",
																					"type": "",
																					"value": "64"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1169:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "1169:3:1"
																			},
																			"nativeSrc": "1169:10:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1169:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "1164:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "1164:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "1131:14:1",
																"nodeType": "YulBlock",
																"src": "1131:14:1",
																"statements": [
																	{
																		"nativeSrc": "1133:10:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1133:10:1",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "1142:1:1",
																			"nodeType": "YulLiteral",
																			"src": "1142:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "1137:1:1",
																				"nodeType": "YulTypedName",
																				"src": "1137:1:1",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "1127:4284:1"
														},
														{
															"nativeSrc": "5424:295:1",
															"nodeType": "YulAssignment",
															"src": "5424:295:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "h",
																														"nativeSrc": "5455:1:1",
																														"nodeType": "YulIdentifier",
																														"src": "5455:1:1"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "5458:11:1",
																														"nodeType": "YulLiteral",
																														"src": "5458:11:1",
																														"type": "",
																														"value": "0x100000000"
																													}
																												],
																												"functionName": {
																													"name": "div",
																													"nativeSrc": "5451:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "5451:3:1"
																												},
																												"nativeSrc": "5451:19:1",
																												"nodeType": "YulFunctionCall",
																												"src": "5451:19:1"
																											},
																											{
																												"kind": "number",
																												"nativeSrc": "5472:42:1",
																												"nodeType": "YulLiteral",
																												"src": "5472:42:1",
																												"type": "",
																												"value": "0xFFFFFFFF00000000000000000000000000000000"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "5447:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "5447:3:1"
																										},
																										"nativeSrc": "5447:68:1",
																										"nodeType": "YulFunctionCall",
																										"src": "5447:68:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "h",
																														"nativeSrc": "5525:1:1",
																														"nodeType": "YulIdentifier",
																														"src": "5525:1:1"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "5528:9:1",
																														"nodeType": "YulLiteral",
																														"src": "5528:9:1",
																														"type": "",
																														"value": "0x1000000"
																													}
																												],
																												"functionName": {
																													"name": "div",
																													"nativeSrc": "5521:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "5521:3:1"
																												},
																												"nativeSrc": "5521:17:1",
																												"nodeType": "YulFunctionCall",
																												"src": "5521:17:1"
																											},
																											{
																												"kind": "number",
																												"nativeSrc": "5540:34:1",
																												"nodeType": "YulLiteral",
																												"src": "5540:34:1",
																												"type": "",
																												"value": "0xFFFFFFFF000000000000000000000000"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "5517:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "5517:3:1"
																										},
																										"nativeSrc": "5517:58:1",
																										"nodeType": "YulFunctionCall",
																										"src": "5517:58:1"
																									}
																								],
																								"functionName": {
																									"name": "or",
																									"nativeSrc": "5444:2:1",
																									"nodeType": "YulIdentifier",
																									"src": "5444:2:1"
																								},
																								"nativeSrc": "5444:132:1",
																								"nodeType": "YulFunctionCall",
																								"src": "5444:132:1"
																							},
																							{
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "h",
																												"nativeSrc": "5586:1:1",
																												"nodeType": "YulIdentifier",
																												"src": "5586:1:1"
																											},
																											{
																												"kind": "number",
																												"nativeSrc": "5589:7:1",
																												"nodeType": "YulLiteral",
																												"src": "5589:7:1",
																												"type": "",
																												"value": "0x10000"
																											}
																										],
																										"functionName": {
																											"name": "div",
																											"nativeSrc": "5582:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "5582:3:1"
																										},
																										"nativeSrc": "5582:15:1",
																										"nodeType": "YulFunctionCall",
																										"src": "5582:15:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5599:26:1",
																										"nodeType": "YulLiteral",
																										"src": "5599:26:1",
																										"type": "",
																										"value": "0xFFFFFFFF0000000000000000"
																									}
																								],
																								"functionName": {
																									"name": "and",
																									"nativeSrc": "5578:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "5578:3:1"
																								},
																								"nativeSrc": "5578:48:1",
																								"nodeType": "YulFunctionCall",
																								"src": "5578:48:1"
																							}
																						],
																						"functionName": {
																							"name": "or",
																							"nativeSrc": "5441:2:1",
																							"nodeType": "YulIdentifier",
																							"src": "5441:2:1"
																						},
																						"nativeSrc": "5441:186:1",
																						"nodeType": "YulFunctionCall",
																						"src": "5441:186:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "h",
																										"nativeSrc": "5637:1:1",
																										"nodeType": "YulIdentifier",
																										"src": "5637:1:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5640:5:1",
																										"nodeType": "YulLiteral",
																										"src": "5640:5:1",
																										"type": "",
																										"value": "0x100"
																									}
																								],
																								"functionName": {
																									"name": "div",
																									"nativeSrc": "5633:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "5633:3:1"
																								},
																								"nativeSrc": "5633:13:1",
																								"nodeType": "YulFunctionCall",
																								"src": "5633:13:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5648:18:1",
																								"nodeType": "YulLiteral",
																								"src": "5648:18:1",
																								"type": "",
																								"value": "0xFFFFFFFF00000000"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "5629:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "5629:3:1"
																						},
																						"nativeSrc": "5629:38:1",
																						"nodeType": "YulFunctionCall",
																						"src": "5629:38:1"
																					}
																				],
																				"functionName": {
																					"name": "or",
																					"nativeSrc": "5438:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "5438:2:1"
																				},
																				"nativeSrc": "5438:230:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5438:230:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "h",
																						"nativeSrc": "5674:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "5674:1:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5677:10:1",
																						"nodeType": "YulLiteral",
																						"src": "5677:10:1",
																						"type": "",
																						"value": "0xFFFFFFFF"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "5670:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5670:3:1"
																				},
																				"nativeSrc": "5670:18:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5670:18:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "5435:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "5435:2:1"
																		},
																		"nativeSrc": "5435:254:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5435:254:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5691:27:1",
																		"nodeType": "YulLiteral",
																		"src": "5691:27:1",
																		"type": "",
																		"value": "0x1000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5431:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5431:3:1"
																},
																"nativeSrc": "5431:288:1",
																"nodeType": "YulFunctionCall",
																"src": "5431:288:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5424:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5424:3:1"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 530,
														"isOffset": false,
														"isSlot": false,
														"src": "1225:4:1",
														"valueSize": 1
													},
													{
														"declaration": 530,
														"isOffset": false,
														"isSlot": false,
														"src": "1290:4:1",
														"valueSize": 1
													},
													{
														"declaration": 530,
														"isOffset": false,
														"isSlot": false,
														"src": "344:4:1",
														"valueSize": 1
													},
													{
														"declaration": 530,
														"isOffset": false,
														"isSlot": false,
														"src": "362:4:1",
														"valueSize": 1
													},
													{
														"declaration": 530,
														"isOffset": false,
														"isSlot": false,
														"src": "374:4:1",
														"valueSize": 1
													},
													{
														"declaration": 533,
														"isOffset": false,
														"isSlot": false,
														"src": "5424:3:1",
														"valueSize": 1
													}
												],
												"id": 535,
												"nodeType": "InlineAssembly",
												"src": "152:5577:1"
											}
										]
									},
									"id": 537,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sha1",
									"nameLocation": "83:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "101:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "88:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 529,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "88:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "87:19:1"
									},
									"returnParameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "ret",
												"nameLocation": "137:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "129:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes20",
													"typeString": "bytes20"
												},
												"typeName": {
													"id": 532,
													"name": "bytes20",
													"nodeType": "ElementaryTypeName",
													"src": "129:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes20",
														"typeString": "bytes20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "128:13:1"
									},
									"scope": 538,
									"src": "74:5661:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 539,
							"src": "26:5711:1",
							"usedErrors": [],
							"usedEvents": [
								528
							]
						}
					],
					"src": "0:5737:1"
				},
				"id": 1
			},
			"contracts/dnssec-oracle/nsec3digests/NSEC3Digest.sol": {
				"ast": {
					"absolutePath": "contracts/dnssec-oracle/nsec3digests/NSEC3Digest.sol",
					"exportedSymbols": {
						"NSEC3Digest": [
							554
						]
					},
					"id": 555,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 540,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "NSEC3Digest",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 541,
								"nodeType": "StructuredDocumentation",
								"src": "25:79:2",
								"text": " @dev Interface for contracts that implement NSEC3 digest algorithms."
							},
							"fullyImplemented": false,
							"id": 554,
							"linearizedBaseContracts": [
								554
							],
							"name": "NSEC3Digest",
							"nameLocation": "115:11:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 542,
										"nodeType": "StructuredDocumentation",
										"src": "133:273:2",
										"text": " @dev Performs an NSEC3 iterated hash.\n @param salt The salt value to use on each iteration.\n @param data The data to hash.\n @param iterations The number of iterations to perform.\n @return The result of the iterated hash operation."
									},
									"functionSelector": "68f9dab2",
									"id": 553,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hash",
									"nameLocation": "421:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "441:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "426:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 543,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "426:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "462:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "447:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 545,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "447:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "iterations",
												"nameLocation": "473:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "468:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 547,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "468:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "425:59:2"
									},
									"returnParameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "516:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 550,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "516:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "515:9:2"
									},
									"scope": 554,
									"src": "412:113:2",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "external"
								}
							],
							"scope": 555,
							"src": "105:422:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "0:528:2"
				},
				"id": 2
			},
			"contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol": {
				"ast": {
					"absolutePath": "contracts/dnssec-oracle/nsec3digests/SHA1NSEC3Digest.sol",
					"exportedSymbols": {
						"Buffer": [
							522
						],
						"NSEC3Digest": [
							554
						],
						"SHA1": [
							538
						],
						"SHA1NSEC3Digest": [
							675
						]
					},
					"id": 676,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 556,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:3"
						},
						{
							"absolutePath": "contracts/dnssec-oracle/nsec3digests/NSEC3Digest.sol",
							"file": "./NSEC3Digest.sol",
							"id": 557,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 676,
							"sourceUnit": 555,
							"src": "25:27:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/dnssec-oracle/SHA1.sol",
							"file": "../SHA1.sol",
							"id": 558,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 676,
							"sourceUnit": 539,
							"src": "53:21:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Buffer.sol",
							"file": "../../Buffer.sol",
							"id": 559,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 676,
							"sourceUnit": 523,
							"src": "75:26:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 561,
										"name": "NSEC3Digest",
										"nameLocations": [
											"211:11:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 554,
										"src": "211:11:3"
									},
									"id": 562,
									"nodeType": "InheritanceSpecifier",
									"src": "211:11:3"
								}
							],
							"canonicalName": "SHA1NSEC3Digest",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 560,
								"nodeType": "StructuredDocumentation",
								"src": "102:80:3",
								"text": " @dev Implements the DNSSEC iterated SHA1 digest used for NSEC3 records."
							},
							"fullyImplemented": true,
							"id": 675,
							"linearizedBaseContracts": [
								675,
								554
							],
							"name": "SHA1NSEC3Digest",
							"nameLocation": "192:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 566,
									"libraryName": {
										"id": 563,
										"name": "Buffer",
										"nameLocations": [
											"235:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 522,
										"src": "235:6:3"
									},
									"nodeType": "UsingForDirective",
									"src": "229:31:3",
									"typeName": {
										"id": 565,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 564,
											"name": "Buffer.buffer",
											"nameLocations": [
												"246:6:3",
												"253:6:3"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 8,
											"src": "246:13:3"
										},
										"referencedDeclaration": 8,
										"src": "246:13:3",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_buffer_$8_storage_ptr",
											"typeString": "struct Buffer.buffer"
										}
									}
								},
								{
									"baseFunctions": [
										553
									],
									"body": {
										"id": 673,
										"nodeType": "Block",
										"src": "380:500:3",
										"statements": [
											{
												"assignments": [
													582
												],
												"declarations": [
													{
														"constant": false,
														"id": 582,
														"mutability": "mutable",
														"name": "buf",
														"nameLocation": "411:3:3",
														"nodeType": "VariableDeclaration",
														"scope": 673,
														"src": "390:24:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
															"typeString": "struct Buffer.buffer"
														},
														"typeName": {
															"id": 581,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 580,
																"name": "Buffer.buffer",
																"nameLocations": [
																	"390:6:3",
																	"397:6:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 8,
																"src": "390:13:3"
															},
															"referencedDeclaration": 8,
															"src": "390:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$8_storage_ptr",
																"typeString": "struct Buffer.buffer"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 583,
												"nodeType": "VariableDeclarationStatement",
												"src": "390:24:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 593,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 591,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 587,
																		"name": "salt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 568,
																		"src": "433:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	},
																	"id": 588,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "438:6:3",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "433:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"expression": {
																		"id": 589,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 570,
																		"src": "447:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	},
																	"id": 590,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "452:6:3",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "447:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "433:25:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "3136",
																"id": 592,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "461:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_16_by_1",
																	"typeString": "int_const 16"
																},
																"value": "16"
															},
															"src": "433:30:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 584,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 582,
															"src": "424:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															}
														},
														"id": 586,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "428:4:3",
														"memberName": "init",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 46,
														"src": "424:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$8_memory_ptr_$_t_uint256_$returns$_t_struct$_buffer_$8_memory_ptr_$attached_to$_t_struct$_buffer_$8_memory_ptr_$",
															"typeString": "function (struct Buffer.buffer memory,uint256) pure returns (struct Buffer.buffer memory)"
														}
													},
													"id": 594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "424:40:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
														"typeString": "struct Buffer.buffer memory"
													}
												},
												"id": 595,
												"nodeType": "ExpressionStatement",
												"src": "424:40:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 599,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 570,
															"src": "486:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"expression": {
															"id": 596,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 582,
															"src": "475:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															}
														},
														"id": 598,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "479:6:3",
														"memberName": "append",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 265,
														"src": "475:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$8_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_struct$_buffer_$8_memory_ptr_$attached_to$_t_struct$_buffer_$8_memory_ptr_$",
															"typeString": "function (struct Buffer.buffer memory,bytes memory) pure returns (struct Buffer.buffer memory)"
														}
													},
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "475:16:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
														"typeString": "struct Buffer.buffer memory"
													}
												},
												"id": 601,
												"nodeType": "ExpressionStatement",
												"src": "475:16:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 605,
															"name": "salt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 568,
															"src": "512:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"expression": {
															"id": 602,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 582,
															"src": "501:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															}
														},
														"id": 604,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "505:6:3",
														"memberName": "append",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 265,
														"src": "501:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$8_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_struct$_buffer_$8_memory_ptr_$attached_to$_t_struct$_buffer_$8_memory_ptr_$",
															"typeString": "function (struct Buffer.buffer memory,bytes memory) pure returns (struct Buffer.buffer memory)"
														}
													},
													"id": 606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "501:16:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
														"typeString": "struct Buffer.buffer memory"
													}
												},
												"id": 607,
												"nodeType": "ExpressionStatement",
												"src": "501:16:3"
											},
											{
												"assignments": [
													609
												],
												"declarations": [
													{
														"constant": false,
														"id": 609,
														"mutability": "mutable",
														"name": "h",
														"nameLocation": "535:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 673,
														"src": "527:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes20",
															"typeString": "bytes20"
														},
														"typeName": {
															"id": 608,
															"name": "bytes20",
															"nodeType": "ElementaryTypeName",
															"src": "527:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes20",
																"typeString": "bytes20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 615,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 612,
																"name": "buf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 582,
																"src": "549:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
																	"typeString": "struct Buffer.buffer memory"
																}
															},
															"id": 613,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "553:3:3",
															"memberName": "buf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 5,
															"src": "549:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 610,
															"name": "SHA1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 538,
															"src": "539:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SHA1_$538_$",
																"typeString": "type(library SHA1)"
															}
														},
														"id": 611,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "544:4:3",
														"memberName": "sha1",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 537,
														"src": "539:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes20_$",
															"typeString": "function (bytes memory) pure returns (bytes20)"
														}
													},
													"id": 614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "539:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes20",
														"typeString": "bytes20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "527:30:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 616,
														"name": "iterations",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 572,
														"src": "571:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 617,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "584:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "571:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 667,
												"nodeType": "IfStatement",
												"src": "567:279:3",
												"trueBody": {
													"id": 666,
													"nodeType": "Block",
													"src": "587:259:3",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 619,
																		"name": "buf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 582,
																		"src": "601:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
																			"typeString": "struct Buffer.buffer memory"
																		}
																	},
																	"id": 621,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "605:8:3",
																	"memberName": "truncate",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 132,
																	"src": "601:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$8_memory_ptr_$returns$_t_struct$_buffer_$8_memory_ptr_$attached_to$_t_struct$_buffer_$8_memory_ptr_$",
																		"typeString": "function (struct Buffer.buffer memory) pure returns (struct Buffer.buffer memory)"
																	}
																},
																"id": 622,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "601:14:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
																	"typeString": "struct Buffer.buffer memory"
																}
															},
															"id": 623,
															"nodeType": "ExpressionStatement",
															"src": "601:14:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 629,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "655:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 628,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "647:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes20_$",
																				"typeString": "type(bytes20)"
																			},
																			"typeName": {
																				"id": 627,
																				"name": "bytes20",
																				"nodeType": "ElementaryTypeName",
																				"src": "647:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 630,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "647:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes20",
																			"typeString": "bytes20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes20",
																			"typeString": "bytes20"
																		}
																	],
																	"expression": {
																		"id": 624,
																		"name": "buf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 582,
																		"src": "629:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
																			"typeString": "struct Buffer.buffer memory"
																		}
																	},
																	"id": 626,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "633:13:3",
																	"memberName": "appendBytes20",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 428,
																	"src": "629:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$8_memory_ptr_$_t_bytes20_$returns$_t_struct$_buffer_$8_memory_ptr_$attached_to$_t_struct$_buffer_$8_memory_ptr_$",
																		"typeString": "function (struct Buffer.buffer memory,bytes20) pure returns (struct Buffer.buffer memory)"
																	}
																},
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "629:29:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
																	"typeString": "struct Buffer.buffer memory"
																}
															},
															"id": 632,
															"nodeType": "ExpressionStatement",
															"src": "629:29:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 636,
																		"name": "salt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 568,
																		"src": "683:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	],
																	"expression": {
																		"id": 633,
																		"name": "buf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 582,
																		"src": "672:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
																			"typeString": "struct Buffer.buffer memory"
																		}
																	},
																	"id": 635,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "676:6:3",
																	"memberName": "append",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 265,
																	"src": "672:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$8_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_struct$_buffer_$8_memory_ptr_$attached_to$_t_struct$_buffer_$8_memory_ptr_$",
																		"typeString": "function (struct Buffer.buffer memory,bytes memory) pure returns (struct Buffer.buffer memory)"
																	}
																},
																"id": 637,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "672:16:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
																	"typeString": "struct Buffer.buffer memory"
																}
															},
															"id": 638,
															"nodeType": "ExpressionStatement",
															"src": "672:16:3"
														},
														{
															"body": {
																"id": 664,
																"nodeType": "Block",
																"src": "741:95:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 652,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "776:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				{
																					"id": 653,
																					"name": "h",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "779:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes20",
																						"typeString": "bytes20"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					{
																						"typeIdentifier": "t_bytes20",
																						"typeString": "bytes20"
																					}
																				],
																				"expression": {
																					"id": 649,
																					"name": "buf",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 582,
																					"src": "759:3:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
																						"typeString": "struct Buffer.buffer memory"
																					}
																				},
																				"id": 651,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "763:12:3",
																				"memberName": "writeBytes20",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 403,
																				"src": "759:16:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$8_memory_ptr_$_t_uint256_$_t_bytes20_$returns$_t_struct$_buffer_$8_memory_ptr_$attached_to$_t_struct$_buffer_$8_memory_ptr_$",
																					"typeString": "function (struct Buffer.buffer memory,uint256,bytes20) pure returns (struct Buffer.buffer memory)"
																				}
																			},
																			"id": 654,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "759:22:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
																				"typeString": "struct Buffer.buffer memory"
																			}
																		},
																		"id": 655,
																		"nodeType": "ExpressionStatement",
																		"src": "759:22:3"
																	},
																	{
																		"expression": {
																			"id": 662,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 656,
																				"name": "h",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 609,
																				"src": "799:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes20",
																					"typeString": "bytes20"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 659,
																							"name": "buf",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 582,
																							"src": "813:3:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_buffer_$8_memory_ptr",
																								"typeString": "struct Buffer.buffer memory"
																							}
																						},
																						"id": 660,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "817:3:3",
																						"memberName": "buf",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 5,
																						"src": "813:7:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					],
																					"expression": {
																						"id": 657,
																						"name": "SHA1",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 538,
																						"src": "803:4:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_SHA1_$538_$",
																							"typeString": "type(library SHA1)"
																						}
																					},
																					"id": 658,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "808:4:3",
																					"memberName": "sha1",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 537,
																					"src": "803:9:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes20_$",
																						"typeString": "function (bytes memory) pure returns (bytes20)"
																					}
																				},
																				"id": 661,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "803:18:3",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes20",
																					"typeString": "bytes20"
																				}
																			},
																			"src": "799:22:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes20",
																				"typeString": "bytes20"
																			}
																		},
																		"id": 663,
																		"nodeType": "ExpressionStatement",
																		"src": "799:22:3"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 645,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 643,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 640,
																	"src": "720:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 644,
																	"name": "iterations",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 572,
																	"src": "724:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "720:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 665,
															"initializationExpression": {
																"assignments": [
																	640
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 640,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "713:1:3",
																		"nodeType": "VariableDeclaration",
																		"scope": 665,
																		"src": "708:6:3",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 639,
																			"name": "uint",
																			"nodeType": "ElementaryTypeName",
																			"src": "708:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 642,
																"initialValue": {
																	"hexValue": "30",
																	"id": 641,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "717:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "708:10:3"
															},
															"isSimpleCounterLoop": true,
															"loopExpression": {
																"expression": {
																	"id": 647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "736:3:3",
																	"subExpression": {
																		"id": 646,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 640,
																		"src": "736:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 648,
																"nodeType": "ExpressionStatement",
																"src": "736:3:3"
															},
															"nodeType": "ForStatement",
															"src": "703:133:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 670,
															"name": "h",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "871:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes20",
																"typeString": "bytes20"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes20",
																"typeString": "bytes20"
															}
														],
														"id": 669,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "863:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes32_$",
															"typeString": "type(bytes32)"
														},
														"typeName": {
															"id": 668,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "863:7:3",
															"typeDescriptions": {}
														}
													},
													"id": 671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "863:10:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 577,
												"id": 672,
												"nodeType": "Return",
												"src": "856:17:3"
											}
										]
									},
									"functionSelector": "68f9dab2",
									"id": 674,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hash",
									"nameLocation": "275:4:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 574,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "348:8:3"
									},
									"parameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "295:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "280:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 567,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "280:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "316:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "301:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 569,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "301:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "iterations",
												"nameLocation": "327:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "322:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 571,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "322:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "279:59:3"
									},
									"returnParameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "371:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 575,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "371:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "370:9:3"
									},
									"scope": 675,
									"src": "266:614:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 676,
							"src": "183:699:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "0:883:3"
				},
				"id": 3
			}
		}
	}
}