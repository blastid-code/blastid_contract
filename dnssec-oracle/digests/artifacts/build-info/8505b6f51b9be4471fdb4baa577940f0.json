{
	"id": "8505b6f51b9be4471fdb4baa577940f0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/dnssec-oracle/digests/DummyDigest.sol": {
				"content": "pragma solidity ^0.8.4;\n\nimport \"./Digest.sol\";\n\n/**\n* @dev Implements a dummy DNSSEC digest that approves all hashes, for testing.\n*/\ncontract DummyDigest is Digest {\n    function verify(bytes calldata, bytes calldata) external override pure returns (bool) { return true; }\n}\n"
			},
			"contracts/dnssec-oracle/digests/Digest.sol": {
				"content": "pragma solidity ^0.8.4;\n\n/**\n* @dev An interface for contracts implementing a DNSSEC digest.\n*/\ninterface Digest {\n    /**\n    * @dev Verifies a cryptographic hash.\n    * @param data The data to hash.\n    * @param hash The hash to compare to.\n    * @return True iff the hashed data matches the provided hash value.\n    */\n    function verify(bytes calldata data, bytes calldata hash) external virtual pure returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/dnssec-oracle/digests/Digest.sol": {
				"Digest": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "hash",
									"type": "bytes"
								}
							],
							"name": "verify",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "An interface for contracts implementing a DNSSEC digest.",
						"kind": "dev",
						"methods": {
							"verify(bytes,bytes)": {
								"details": "Verifies a cryptographic hash.",
								"params": {
									"data": "The data to hash.",
									"hash": "The hash to compare to."
								},
								"returns": {
									"_0": "True iff the hashed data matches the provided hash value."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"verify(bytes,bytes)": "f7e83aee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"hash\",\"type\":\"bytes\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An interface for contracts implementing a DNSSEC digest.\",\"kind\":\"dev\",\"methods\":{\"verify(bytes,bytes)\":{\"details\":\"Verifies a cryptographic hash.\",\"params\":{\"data\":\"The data to hash.\",\"hash\":\"The hash to compare to.\"},\"returns\":{\"_0\":\"True iff the hashed data matches the provided hash value.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/dnssec-oracle/digests/Digest.sol\":\"Digest\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/dnssec-oracle/digests/Digest.sol\":{\"keccak256\":\"0x259720cef78c019d38b908bc7dd524f087c58d8c40792cebcdd4e982c628bc9a\",\"urls\":[\"bzz-raw://dc797b74bc1f9b4495f02e69b1c8374cf1942dbfdf121ecbe1b4f28367aed545\",\"dweb:/ipfs/QmS7b42XT556aS9HQppYbNTdosPfWCTym1qDh5CXsSAi1U\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/dnssec-oracle/digests/DummyDigest.sol": {
				"DummyDigest": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "verify",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implements a dummy DNSSEC digest that approves all hashes, for testing.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/dnssec-oracle/digests/DummyDigest.sol\":135:276  contract DummyDigest is Digest {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/dnssec-oracle/digests/DummyDigest.sol\":135:276  contract DummyDigest is Digest {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xf7e83aee\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/dnssec-oracle/digests/DummyDigest.sol\":172:274  function verify(bytes calldata, bytes calldata) external override pure returns (bool) { return true; } */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_7:\n        /* \"contracts/dnssec-oracle/digests/DummyDigest.sol\":252:256  bool */\n      0x00\n        /* \"contracts/dnssec-oracle/digests/DummyDigest.sol\":267:271  true */\n      0x01\n        /* \"contracts/dnssec-oracle/digests/DummyDigest.sol\":260:271  return true */\n      swap1\n      pop\n        /* \"contracts/dnssec-oracle/digests/DummyDigest.sol\":172:274  function verify(bytes calldata, bytes calldata) external override pure returns (bool) { return true; } */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_12:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_13:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:451   */\n    tag_14:\n        /* \"#utility.yul\":443:444   */\n      0x00\n        /* \"#utility.yul\":440:441   */\n      dup1\n        /* \"#utility.yul\":433:445   */\n      revert\n        /* \"#utility.yul\":457:574   */\n    tag_15:\n        /* \"#utility.yul\":566:567   */\n      0x00\n        /* \"#utility.yul\":563:564   */\n      dup1\n        /* \"#utility.yul\":556:568   */\n      revert\n        /* \"#utility.yul\":580:697   */\n    tag_16:\n        /* \"#utility.yul\":689:690   */\n      0x00\n        /* \"#utility.yul\":686:687   */\n      dup1\n        /* \"#utility.yul\":679:691   */\n      revert\n        /* \"#utility.yul\":716:1268   */\n    tag_17:\n        /* \"#utility.yul\":773:781   */\n      0x00\n        /* \"#utility.yul\":783:789   */\n      dup1\n        /* \"#utility.yul\":833:836   */\n      dup4\n        /* \"#utility.yul\":826:830   */\n      0x1f\n        /* \"#utility.yul\":818:824   */\n      dup5\n        /* \"#utility.yul\":814:831   */\n      add\n        /* \"#utility.yul\":810:837   */\n      slt\n        /* \"#utility.yul\":800:922   */\n      tag_28\n      jumpi\n        /* \"#utility.yul\":841:920   */\n      tag_29\n      tag_14\n      jump\t// in\n    tag_29:\n        /* \"#utility.yul\":800:922   */\n    tag_28:\n        /* \"#utility.yul\":954:960   */\n      dup3\n        /* \"#utility.yul\":941:961   */\n      calldataload\n        /* \"#utility.yul\":931:961   */\n      swap1\n      pop\n        /* \"#utility.yul\":984:1002   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":976:982   */\n      dup2\n        /* \"#utility.yul\":973:1003   */\n      gt\n        /* \"#utility.yul\":970:1087   */\n      iszero\n      tag_30\n      jumpi\n        /* \"#utility.yul\":1006:1085   */\n      tag_31\n      tag_15\n      jump\t// in\n    tag_31:\n        /* \"#utility.yul\":970:1087   */\n    tag_30:\n        /* \"#utility.yul\":1120:1124   */\n      0x20\n        /* \"#utility.yul\":1112:1118   */\n      dup4\n        /* \"#utility.yul\":1108:1125   */\n      add\n        /* \"#utility.yul\":1096:1125   */\n      swap2\n      pop\n        /* \"#utility.yul\":1174:1177   */\n      dup4\n        /* \"#utility.yul\":1166:1170   */\n      0x01\n        /* \"#utility.yul\":1158:1164   */\n      dup3\n        /* \"#utility.yul\":1154:1171   */\n      mul\n        /* \"#utility.yul\":1144:1152   */\n      dup4\n        /* \"#utility.yul\":1140:1172   */\n      add\n        /* \"#utility.yul\":1137:1178   */\n      gt\n        /* \"#utility.yul\":1134:1262   */\n      iszero\n      tag_32\n      jumpi\n        /* \"#utility.yul\":1181:1260   */\n      tag_33\n      tag_16\n      jump\t// in\n    tag_33:\n        /* \"#utility.yul\":1134:1262   */\n    tag_32:\n        /* \"#utility.yul\":716:1268   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1274:2144   */\n    tag_6:\n        /* \"#utility.yul\":1364:1370   */\n      0x00\n        /* \"#utility.yul\":1372:1378   */\n      dup1\n        /* \"#utility.yul\":1380:1386   */\n      0x00\n        /* \"#utility.yul\":1388:1394   */\n      dup1\n        /* \"#utility.yul\":1437:1439   */\n      0x40\n        /* \"#utility.yul\":1425:1434   */\n      dup6\n        /* \"#utility.yul\":1416:1423   */\n      dup8\n        /* \"#utility.yul\":1412:1435   */\n      sub\n        /* \"#utility.yul\":1408:1440   */\n      slt\n        /* \"#utility.yul\":1405:1524   */\n      iszero\n      tag_35\n      jumpi\n        /* \"#utility.yul\":1443:1522   */\n      tag_36\n      tag_12\n      jump\t// in\n    tag_36:\n        /* \"#utility.yul\":1405:1524   */\n    tag_35:\n        /* \"#utility.yul\":1591:1592   */\n      0x00\n        /* \"#utility.yul\":1580:1589   */\n      dup6\n        /* \"#utility.yul\":1576:1593   */\n      add\n        /* \"#utility.yul\":1563:1594   */\n      calldataload\n        /* \"#utility.yul\":1621:1639   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1613:1619   */\n      dup2\n        /* \"#utility.yul\":1610:1640   */\n      gt\n        /* \"#utility.yul\":1607:1724   */\n      iszero\n      tag_37\n      jumpi\n        /* \"#utility.yul\":1643:1722   */\n      tag_38\n      tag_13\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":1607:1724   */\n    tag_37:\n        /* \"#utility.yul\":1756:1820   */\n      tag_39\n        /* \"#utility.yul\":1812:1819   */\n      dup8\n        /* \"#utility.yul\":1803:1809   */\n      dup3\n        /* \"#utility.yul\":1792:1801   */\n      dup9\n        /* \"#utility.yul\":1788:1810   */\n      add\n        /* \"#utility.yul\":1756:1820   */\n      tag_17\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":1738:1820   */\n      swap5\n      pop\n      swap5\n      pop\n        /* \"#utility.yul\":1534:1830   */\n      pop\n        /* \"#utility.yul\":1897:1899   */\n      0x20\n        /* \"#utility.yul\":1886:1895   */\n      dup6\n        /* \"#utility.yul\":1882:1900   */\n      add\n        /* \"#utility.yul\":1869:1901   */\n      calldataload\n        /* \"#utility.yul\":1928:1946   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1920:1926   */\n      dup2\n        /* \"#utility.yul\":1917:1947   */\n      gt\n        /* \"#utility.yul\":1914:2031   */\n      iszero\n      tag_40\n      jumpi\n        /* \"#utility.yul\":1950:2029   */\n      tag_41\n      tag_13\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":1914:2031   */\n    tag_40:\n        /* \"#utility.yul\":2063:2127   */\n      tag_42\n        /* \"#utility.yul\":2119:2126   */\n      dup8\n        /* \"#utility.yul\":2110:2116   */\n      dup3\n        /* \"#utility.yul\":2099:2108   */\n      dup9\n        /* \"#utility.yul\":2095:2117   */\n      add\n        /* \"#utility.yul\":2063:2127   */\n      tag_17\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":2045:2127   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":1840:2137   */\n      pop\n        /* \"#utility.yul\":1274:2144   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2150:2240   */\n    tag_18:\n        /* \"#utility.yul\":2184:2191   */\n      0x00\n        /* \"#utility.yul\":2227:2232   */\n      dup2\n        /* \"#utility.yul\":2220:2233   */\n      iszero\n        /* \"#utility.yul\":2213:2234   */\n      iszero\n        /* \"#utility.yul\":2202:2234   */\n      swap1\n      pop\n        /* \"#utility.yul\":2150:2240   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2246:2355   */\n    tag_19:\n        /* \"#utility.yul\":2327:2348   */\n      tag_45\n        /* \"#utility.yul\":2342:2347   */\n      dup2\n        /* \"#utility.yul\":2327:2348   */\n      tag_18\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":2322:2325   */\n      dup3\n        /* \"#utility.yul\":2315:2349   */\n      mstore\n        /* \"#utility.yul\":2246:2355   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2361:2571   */\n    tag_9:\n        /* \"#utility.yul\":2448:2452   */\n      0x00\n        /* \"#utility.yul\":2486:2488   */\n      0x20\n        /* \"#utility.yul\":2475:2484   */\n      dup3\n        /* \"#utility.yul\":2471:2489   */\n      add\n        /* \"#utility.yul\":2463:2489   */\n      swap1\n      pop\n        /* \"#utility.yul\":2499:2564   */\n      tag_47\n        /* \"#utility.yul\":2561:2562   */\n      0x00\n        /* \"#utility.yul\":2550:2559   */\n      dup4\n        /* \"#utility.yul\":2546:2563   */\n      add\n        /* \"#utility.yul\":2537:2543   */\n      dup5\n        /* \"#utility.yul\":2499:2564   */\n      tag_19\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":2361:2571   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220601f9d2db1448e2e2c67d2d171af34b22f70f9945d90459edba4c66acb36fc9b64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506101ba8061001d5f395ff3fe608060405234801561000f575f80fd5b5060043610610029575f3560e01c8063f7e83aee1461002d575b5f80fd5b610047600480360381019061004291906100d3565b61005d565b604051610054919061016b565b60405180910390f35b5f60019050949350505050565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f8083601f84011261009357610092610072565b5b8235905067ffffffffffffffff8111156100b0576100af610076565b5b6020830191508360018202830111156100cc576100cb61007a565b5b9250929050565b5f805f80604085870312156100eb576100ea61006a565b5b5f85013567ffffffffffffffff8111156101085761010761006e565b5b6101148782880161007e565b9450945050602085013567ffffffffffffffff8111156101375761013661006e565b5b6101438782880161007e565b925092505092959194509250565b5f8115159050919050565b61016581610151565b82525050565b5f60208201905061017e5f83018461015c565b9291505056fea2646970667358221220601f9d2db1448e2e2c67d2d171af34b22f70f9945d90459edba4c66acb36fc9b64736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BA DUP1 PUSH2 0x1D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xF7E83AEE EQ PUSH2 0x2D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x47 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42 SWAP2 SWAP1 PUSH2 0xD3 JUMP JUMPDEST PUSH2 0x5D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54 SWAP2 SWAP1 PUSH2 0x16B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH1 0x1 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x93 JUMPI PUSH2 0x92 PUSH2 0x72 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB0 JUMPI PUSH2 0xAF PUSH2 0x76 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xCC JUMPI PUSH2 0xCB PUSH2 0x7A JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xEB JUMPI PUSH2 0xEA PUSH2 0x6A JUMP JUMPDEST JUMPDEST PUSH0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x108 JUMPI PUSH2 0x107 PUSH2 0x6E JUMP JUMPDEST JUMPDEST PUSH2 0x114 DUP8 DUP3 DUP9 ADD PUSH2 0x7E JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x137 JUMPI PUSH2 0x136 PUSH2 0x6E JUMP JUMPDEST JUMPDEST PUSH2 0x143 DUP8 DUP3 DUP9 ADD PUSH2 0x7E JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x165 DUP2 PUSH2 0x151 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17E PUSH0 DUP4 ADD DUP5 PUSH2 0x15C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0x1F SWAP14 0x2D 0xB1 PREVRANDAO DUP15 0x2E 0x2C PUSH8 0xD2D171AF34B22F70 0xF9 SWAP5 TSTORE SWAP1 GASLIMIT SWAP15 0xDB LOG4 0xC6 PUSH11 0xCB36FC9B64736F6C634300 ADDMOD XOR STOP CALLER ",
							"sourceMap": "135:141:1:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@verify_32": {
									"entryPoint": 93,
									"id": 32,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_calldata_ptr": {
									"entryPoint": 126,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes_calldata_ptrt_bytes_calldata_ptr": {
									"entryPoint": 211,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 348,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 363,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 337,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 118,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 114,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 122,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 110,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 106,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2574:2",
										"nodeType": "YulBlock",
										"src": "0:2574:2",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:2",
													"nodeType": "YulBlock",
													"src": "47:35:2",
													"statements": [
														{
															"nativeSrc": "57:19:2",
															"nodeType": "YulAssignment",
															"src": "57:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:2",
																		"nodeType": "YulLiteral",
																		"src": "73:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:2"
																},
																"nativeSrc": "67:9:2",
																"nodeType": "YulFunctionCall",
																"src": "67:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:2",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:2",
														"nodeType": "YulTypedName",
														"src": "40:6:2",
														"type": ""
													}
												],
												"src": "7:75:2"
											},
											{
												"body": {
													"nativeSrc": "177:28:2",
													"nodeType": "YulBlock",
													"src": "177:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:2",
																		"nodeType": "YulLiteral",
																		"src": "194:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:2",
																		"nodeType": "YulLiteral",
																		"src": "197:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:2"
																},
																"nativeSrc": "187:12:2",
																"nodeType": "YulFunctionCall",
																"src": "187:12:2"
															},
															"nativeSrc": "187:12:2",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:2",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:2"
											},
											{
												"body": {
													"nativeSrc": "300:28:2",
													"nodeType": "YulBlock",
													"src": "300:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:2",
																		"nodeType": "YulLiteral",
																		"src": "317:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:2",
																		"nodeType": "YulLiteral",
																		"src": "320:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:2"
																},
																"nativeSrc": "310:12:2",
																"nodeType": "YulFunctionCall",
																"src": "310:12:2"
															},
															"nativeSrc": "310:12:2",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:2",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:2"
											},
											{
												"body": {
													"nativeSrc": "423:28:2",
													"nodeType": "YulBlock",
													"src": "423:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:2",
																		"nodeType": "YulLiteral",
																		"src": "440:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:2",
																		"nodeType": "YulLiteral",
																		"src": "443:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:2"
																},
																"nativeSrc": "433:12:2",
																"nodeType": "YulFunctionCall",
																"src": "433:12:2"
															},
															"nativeSrc": "433:12:2",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:2"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:2",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:2"
											},
											{
												"body": {
													"nativeSrc": "546:28:2",
													"nodeType": "YulBlock",
													"src": "546:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:2",
																		"nodeType": "YulLiteral",
																		"src": "563:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:2",
																		"nodeType": "YulLiteral",
																		"src": "566:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:2"
																},
																"nativeSrc": "556:12:2",
																"nodeType": "YulFunctionCall",
																"src": "556:12:2"
															},
															"nativeSrc": "556:12:2",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:2"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nativeSrc": "457:117:2",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:2"
											},
											{
												"body": {
													"nativeSrc": "669:28:2",
													"nodeType": "YulBlock",
													"src": "669:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "686:1:2",
																		"nodeType": "YulLiteral",
																		"src": "686:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "689:1:2",
																		"nodeType": "YulLiteral",
																		"src": "689:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "679:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "679:6:2"
																},
																"nativeSrc": "679:12:2",
																"nodeType": "YulFunctionCall",
																"src": "679:12:2"
															},
															"nativeSrc": "679:12:2",
															"nodeType": "YulExpressionStatement",
															"src": "679:12:2"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "580:117:2",
												"nodeType": "YulFunctionDefinition",
												"src": "580:117:2"
											},
											{
												"body": {
													"nativeSrc": "790:478:2",
													"nodeType": "YulBlock",
													"src": "790:478:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "839:83:2",
																"nodeType": "YulBlock",
																"src": "839:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "841:77:2",
																				"nodeType": "YulIdentifier",
																				"src": "841:77:2"
																			},
																			"nativeSrc": "841:79:2",
																			"nodeType": "YulFunctionCall",
																			"src": "841:79:2"
																		},
																		"nativeSrc": "841:79:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "841:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "818:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "818:6:2"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "826:4:2",
																						"nodeType": "YulLiteral",
																						"src": "826:4:2",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "814:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "814:3:2"
																				},
																				"nativeSrc": "814:17:2",
																				"nodeType": "YulFunctionCall",
																				"src": "814:17:2"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "833:3:2",
																				"nodeType": "YulIdentifier",
																				"src": "833:3:2"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "810:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "810:3:2"
																		},
																		"nativeSrc": "810:27:2",
																		"nodeType": "YulFunctionCall",
																		"src": "810:27:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "803:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "803:6:2"
																},
																"nativeSrc": "803:35:2",
																"nodeType": "YulFunctionCall",
																"src": "803:35:2"
															},
															"nativeSrc": "800:122:2",
															"nodeType": "YulIf",
															"src": "800:122:2"
														},
														{
															"nativeSrc": "931:30:2",
															"nodeType": "YulAssignment",
															"src": "931:30:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "954:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "954:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "941:12:2",
																	"nodeType": "YulIdentifier",
																	"src": "941:12:2"
																},
																"nativeSrc": "941:20:2",
																"nodeType": "YulFunctionCall",
																"src": "941:20:2"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "931:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "931:6:2"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1004:83:2",
																"nodeType": "YulBlock",
																"src": "1004:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "1006:77:2",
																				"nodeType": "YulIdentifier",
																				"src": "1006:77:2"
																			},
																			"nativeSrc": "1006:79:2",
																			"nodeType": "YulFunctionCall",
																			"src": "1006:79:2"
																		},
																		"nativeSrc": "1006:79:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "1006:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "976:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "976:6:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "984:18:2",
																		"nodeType": "YulLiteral",
																		"src": "984:18:2",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "973:2:2",
																	"nodeType": "YulIdentifier",
																	"src": "973:2:2"
																},
																"nativeSrc": "973:30:2",
																"nodeType": "YulFunctionCall",
																"src": "973:30:2"
															},
															"nativeSrc": "970:117:2",
															"nodeType": "YulIf",
															"src": "970:117:2"
														},
														{
															"nativeSrc": "1096:29:2",
															"nodeType": "YulAssignment",
															"src": "1096:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1112:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "1112:6:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1120:4:2",
																		"nodeType": "YulLiteral",
																		"src": "1120:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1108:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1108:3:2"
																},
																"nativeSrc": "1108:17:2",
																"nodeType": "YulFunctionCall",
																"src": "1108:17:2"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "1096:8:2",
																	"nodeType": "YulIdentifier",
																	"src": "1096:8:2"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1179:83:2",
																"nodeType": "YulBlock",
																"src": "1179:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "1181:77:2",
																				"nodeType": "YulIdentifier",
																				"src": "1181:77:2"
																			},
																			"nativeSrc": "1181:79:2",
																			"nodeType": "YulFunctionCall",
																			"src": "1181:79:2"
																		},
																		"nativeSrc": "1181:79:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "1181:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "1144:8:2",
																				"nodeType": "YulIdentifier",
																				"src": "1144:8:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "1158:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "1158:6:2"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1166:4:2",
																						"nodeType": "YulLiteral",
																						"src": "1166:4:2",
																						"type": "",
																						"value": "0x01"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "1154:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "1154:3:2"
																				},
																				"nativeSrc": "1154:17:2",
																				"nodeType": "YulFunctionCall",
																				"src": "1154:17:2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1140:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1140:3:2"
																		},
																		"nativeSrc": "1140:32:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1140:32:2"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "1174:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "1174:3:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1137:2:2",
																	"nodeType": "YulIdentifier",
																	"src": "1137:2:2"
																},
																"nativeSrc": "1137:41:2",
																"nodeType": "YulFunctionCall",
																"src": "1137:41:2"
															},
															"nativeSrc": "1134:128:2",
															"nodeType": "YulIf",
															"src": "1134:128:2"
														}
													]
												},
												"name": "abi_decode_t_bytes_calldata_ptr",
												"nativeSrc": "716:552:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "757:6:2",
														"nodeType": "YulTypedName",
														"src": "757:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "765:3:2",
														"nodeType": "YulTypedName",
														"src": "765:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "773:8:2",
														"nodeType": "YulTypedName",
														"src": "773:8:2",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "783:6:2",
														"nodeType": "YulTypedName",
														"src": "783:6:2",
														"type": ""
													}
												],
												"src": "716:552:2"
											},
											{
												"body": {
													"nativeSrc": "1395:749:2",
													"nodeType": "YulBlock",
													"src": "1395:749:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "1441:83:2",
																"nodeType": "YulBlock",
																"src": "1441:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1443:77:2",
																				"nodeType": "YulIdentifier",
																				"src": "1443:77:2"
																			},
																			"nativeSrc": "1443:79:2",
																			"nodeType": "YulFunctionCall",
																			"src": "1443:79:2"
																		},
																		"nativeSrc": "1443:79:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "1443:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1416:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "1416:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1425:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1425:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1412:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1412:3:2"
																		},
																		"nativeSrc": "1412:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1412:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1437:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1437:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1408:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1408:3:2"
																},
																"nativeSrc": "1408:32:2",
																"nodeType": "YulFunctionCall",
																"src": "1408:32:2"
															},
															"nativeSrc": "1405:119:2",
															"nodeType": "YulIf",
															"src": "1405:119:2"
														},
														{
															"nativeSrc": "1534:296:2",
															"nodeType": "YulBlock",
															"src": "1534:296:2",
															"statements": [
																{
																	"nativeSrc": "1549:45:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1549:45:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1580:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "1580:9:2"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1591:1:2",
																						"nodeType": "YulLiteral",
																						"src": "1591:1:2",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1576:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "1576:3:2"
																				},
																				"nativeSrc": "1576:17:2",
																				"nodeType": "YulFunctionCall",
																				"src": "1576:17:2"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "1563:12:2",
																			"nodeType": "YulIdentifier",
																			"src": "1563:12:2"
																		},
																		"nativeSrc": "1563:31:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1563:31:2"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1553:6:2",
																			"nodeType": "YulTypedName",
																			"src": "1553:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "1641:83:2",
																		"nodeType": "YulBlock",
																		"src": "1641:83:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "1643:77:2",
																						"nodeType": "YulIdentifier",
																						"src": "1643:77:2"
																					},
																					"nativeSrc": "1643:79:2",
																					"nodeType": "YulFunctionCall",
																					"src": "1643:79:2"
																				},
																				"nativeSrc": "1643:79:2",
																				"nodeType": "YulExpressionStatement",
																				"src": "1643:79:2"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "1613:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "1613:6:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1621:18:2",
																				"nodeType": "YulLiteral",
																				"src": "1621:18:2",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1610:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "1610:2:2"
																		},
																		"nativeSrc": "1610:30:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1610:30:2"
																	},
																	"nativeSrc": "1607:117:2",
																	"nodeType": "YulIf",
																	"src": "1607:117:2"
																},
																{
																	"nativeSrc": "1738:82:2",
																	"nodeType": "YulAssignment",
																	"src": "1738:82:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1792:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "1792:9:2"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1803:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "1803:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1788:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "1788:3:2"
																				},
																				"nativeSrc": "1788:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "1788:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1812:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "1812:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_calldata_ptr",
																			"nativeSrc": "1756:31:2",
																			"nodeType": "YulIdentifier",
																			"src": "1756:31:2"
																		},
																		"nativeSrc": "1756:64:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1756:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1738:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "1738:6:2"
																		},
																		{
																			"name": "value1",
																			"nativeSrc": "1746:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "1746:6:2"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1840:297:2",
															"nodeType": "YulBlock",
															"src": "1840:297:2",
															"statements": [
																{
																	"nativeSrc": "1855:46:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1855:46:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1886:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "1886:9:2"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1897:2:2",
																						"nodeType": "YulLiteral",
																						"src": "1897:2:2",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1882:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "1882:3:2"
																				},
																				"nativeSrc": "1882:18:2",
																				"nodeType": "YulFunctionCall",
																				"src": "1882:18:2"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "1869:12:2",
																			"nodeType": "YulIdentifier",
																			"src": "1869:12:2"
																		},
																		"nativeSrc": "1869:32:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1869:32:2"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1859:6:2",
																			"nodeType": "YulTypedName",
																			"src": "1859:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "1948:83:2",
																		"nodeType": "YulBlock",
																		"src": "1948:83:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "1950:77:2",
																						"nodeType": "YulIdentifier",
																						"src": "1950:77:2"
																					},
																					"nativeSrc": "1950:79:2",
																					"nodeType": "YulFunctionCall",
																					"src": "1950:79:2"
																				},
																				"nativeSrc": "1950:79:2",
																				"nodeType": "YulExpressionStatement",
																				"src": "1950:79:2"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "1920:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "1920:6:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1928:18:2",
																				"nodeType": "YulLiteral",
																				"src": "1928:18:2",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1917:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "1917:2:2"
																		},
																		"nativeSrc": "1917:30:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1917:30:2"
																	},
																	"nativeSrc": "1914:117:2",
																	"nodeType": "YulIf",
																	"src": "1914:117:2"
																},
																{
																	"nativeSrc": "2045:82:2",
																	"nodeType": "YulAssignment",
																	"src": "2045:82:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2099:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "2099:9:2"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2110:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "2110:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2095:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "2095:3:2"
																				},
																				"nativeSrc": "2095:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "2095:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2119:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "2119:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_calldata_ptr",
																			"nativeSrc": "2063:31:2",
																			"nodeType": "YulIdentifier",
																			"src": "2063:31:2"
																		},
																		"nativeSrc": "2063:64:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2063:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "2045:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "2045:6:2"
																		},
																		{
																			"name": "value3",
																			"nativeSrc": "2053:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "2053:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes_calldata_ptrt_bytes_calldata_ptr",
												"nativeSrc": "1274:870:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1341:9:2",
														"nodeType": "YulTypedName",
														"src": "1341:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1352:7:2",
														"nodeType": "YulTypedName",
														"src": "1352:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1364:6:2",
														"nodeType": "YulTypedName",
														"src": "1364:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1372:6:2",
														"nodeType": "YulTypedName",
														"src": "1372:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1380:6:2",
														"nodeType": "YulTypedName",
														"src": "1380:6:2",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1388:6:2",
														"nodeType": "YulTypedName",
														"src": "1388:6:2",
														"type": ""
													}
												],
												"src": "1274:870:2"
											},
											{
												"body": {
													"nativeSrc": "2192:48:2",
													"nodeType": "YulBlock",
													"src": "2192:48:2",
													"statements": [
														{
															"nativeSrc": "2202:32:2",
															"nodeType": "YulAssignment",
															"src": "2202:32:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2227:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "2227:5:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2220:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "2220:6:2"
																		},
																		"nativeSrc": "2220:13:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2220:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2213:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2213:6:2"
																},
																"nativeSrc": "2213:21:2",
																"nodeType": "YulFunctionCall",
																"src": "2213:21:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2202:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "2202:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2150:90:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2174:5:2",
														"nodeType": "YulTypedName",
														"src": "2174:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2184:7:2",
														"nodeType": "YulTypedName",
														"src": "2184:7:2",
														"type": ""
													}
												],
												"src": "2150:90:2"
											},
											{
												"body": {
													"nativeSrc": "2305:50:2",
													"nodeType": "YulBlock",
													"src": "2305:50:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2322:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "2322:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2342:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "2342:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "2327:14:2",
																			"nodeType": "YulIdentifier",
																			"src": "2327:14:2"
																		},
																		"nativeSrc": "2327:21:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2327:21:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2315:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2315:6:2"
																},
																"nativeSrc": "2315:34:2",
																"nodeType": "YulFunctionCall",
																"src": "2315:34:2"
															},
															"nativeSrc": "2315:34:2",
															"nodeType": "YulExpressionStatement",
															"src": "2315:34:2"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "2246:109:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2293:5:2",
														"nodeType": "YulTypedName",
														"src": "2293:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2300:3:2",
														"nodeType": "YulTypedName",
														"src": "2300:3:2",
														"type": ""
													}
												],
												"src": "2246:109:2"
											},
											{
												"body": {
													"nativeSrc": "2453:118:2",
													"nodeType": "YulBlock",
													"src": "2453:118:2",
													"statements": [
														{
															"nativeSrc": "2463:26:2",
															"nodeType": "YulAssignment",
															"src": "2463:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2475:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "2475:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2486:2:2",
																		"nodeType": "YulLiteral",
																		"src": "2486:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2471:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2471:3:2"
																},
																"nativeSrc": "2471:18:2",
																"nodeType": "YulFunctionCall",
																"src": "2471:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2463:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "2463:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2537:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "2537:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2550:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "2550:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2561:1:2",
																				"nodeType": "YulLiteral",
																				"src": "2561:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2546:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2546:3:2"
																		},
																		"nativeSrc": "2546:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2546:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "2499:37:2",
																	"nodeType": "YulIdentifier",
																	"src": "2499:37:2"
																},
																"nativeSrc": "2499:65:2",
																"nodeType": "YulFunctionCall",
																"src": "2499:65:2"
															},
															"nativeSrc": "2499:65:2",
															"nodeType": "YulExpressionStatement",
															"src": "2499:65:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "2361:210:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2425:9:2",
														"nodeType": "YulTypedName",
														"src": "2425:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2437:6:2",
														"nodeType": "YulTypedName",
														"src": "2437:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2448:4:2",
														"nodeType": "YulTypedName",
														"src": "2448:4:2",
														"type": ""
													}
												],
												"src": "2361:210:2"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_bytes_calldata_ptrt_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610029575f3560e01c8063f7e83aee1461002d575b5f80fd5b610047600480360381019061004291906100d3565b61005d565b604051610054919061016b565b60405180910390f35b5f60019050949350505050565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f8083601f84011261009357610092610072565b5b8235905067ffffffffffffffff8111156100b0576100af610076565b5b6020830191508360018202830111156100cc576100cb61007a565b5b9250929050565b5f805f80604085870312156100eb576100ea61006a565b5b5f85013567ffffffffffffffff8111156101085761010761006e565b5b6101148782880161007e565b9450945050602085013567ffffffffffffffff8111156101375761013661006e565b5b6101438782880161007e565b925092505092959194509250565b5f8115159050919050565b61016581610151565b82525050565b5f60208201905061017e5f83018461015c565b9291505056fea2646970667358221220601f9d2db1448e2e2c67d2d171af34b22f70f9945d90459edba4c66acb36fc9b64736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xF7E83AEE EQ PUSH2 0x2D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x47 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42 SWAP2 SWAP1 PUSH2 0xD3 JUMP JUMPDEST PUSH2 0x5D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54 SWAP2 SWAP1 PUSH2 0x16B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH1 0x1 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x93 JUMPI PUSH2 0x92 PUSH2 0x72 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB0 JUMPI PUSH2 0xAF PUSH2 0x76 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xCC JUMPI PUSH2 0xCB PUSH2 0x7A JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xEB JUMPI PUSH2 0xEA PUSH2 0x6A JUMP JUMPDEST JUMPDEST PUSH0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x108 JUMPI PUSH2 0x107 PUSH2 0x6E JUMP JUMPDEST JUMPDEST PUSH2 0x114 DUP8 DUP3 DUP9 ADD PUSH2 0x7E JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x137 JUMPI PUSH2 0x136 PUSH2 0x6E JUMP JUMPDEST JUMPDEST PUSH2 0x143 DUP8 DUP3 DUP9 ADD PUSH2 0x7E JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x165 DUP2 PUSH2 0x151 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17E PUSH0 DUP4 ADD DUP5 PUSH2 0x15C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0x1F SWAP14 0x2D 0xB1 PREVRANDAO DUP15 0x2E 0x2C PUSH8 0xD2D171AF34B22F70 0xF9 SWAP5 TSTORE SWAP1 GASLIMIT SWAP15 0xDB LOG4 0xC6 PUSH11 0xCB36FC9B64736F6C634300 ADDMOD XOR STOP CALLER ",
							"sourceMap": "135:141:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;172:102;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;252:4;267;260:11;;172:102;;;;;;:::o;88:117:2:-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:117;689:1;686;679:12;716:552;773:8;783:6;833:3;826:4;818:6;814:17;810:27;800:122;;841:79;;:::i;:::-;800:122;954:6;941:20;931:30;;984:18;976:6;973:30;970:117;;;1006:79;;:::i;:::-;970:117;1120:4;1112:6;1108:17;1096:29;;1174:3;1166:4;1158:6;1154:17;1144:8;1140:32;1137:41;1134:128;;;1181:79;;:::i;:::-;1134:128;716:552;;;;;:::o;1274:870::-;1364:6;1372;1380;1388;1437:2;1425:9;1416:7;1412:23;1408:32;1405:119;;;1443:79;;:::i;:::-;1405:119;1591:1;1580:9;1576:17;1563:31;1621:18;1613:6;1610:30;1607:117;;;1643:79;;:::i;:::-;1607:117;1756:64;1812:7;1803:6;1792:9;1788:22;1756:64;:::i;:::-;1738:82;;;;1534:296;1897:2;1886:9;1882:18;1869:32;1928:18;1920:6;1917:30;1914:117;;;1950:79;;:::i;:::-;1914:117;2063:64;2119:7;2110:6;2099:9;2095:22;2063:64;:::i;:::-;2045:82;;;;1840:297;1274:870;;;;;;;:::o;2150:90::-;2184:7;2227:5;2220:13;2213:21;2202:32;;2150:90;;;:::o;2246:109::-;2327:21;2342:5;2327:21;:::i;:::-;2322:3;2315:34;2246:109;;:::o;2361:210::-;2448:4;2486:2;2475:9;2471:18;2463:26;;2499:65;2561:1;2550:9;2546:17;2537:6;2499:65;:::i;:::-;2361:210;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "88400",
								"executionCost": "133",
								"totalCost": "88533"
							},
							"external": {
								"verify(bytes,bytes)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 135,
									"end": 276,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 135,
									"end": 276,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 135,
									"end": 276,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 135,
									"end": 276,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 135,
									"end": 276,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 135,
									"end": 276,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 135,
									"end": 276,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 135,
									"end": 276,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 135,
									"end": 276,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 135,
									"end": 276,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 135,
									"end": 276,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 135,
									"end": 276,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 135,
									"end": 276,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 135,
									"end": 276,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 135,
									"end": 276,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 135,
									"end": 276,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 135,
									"end": 276,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 135,
									"end": 276,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 135,
									"end": 276,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 135,
									"end": 276,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 135,
									"end": 276,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220601f9d2db1448e2e2c67d2d171af34b22f70f9945d90459edba4c66acb36fc9b64736f6c63430008180033",
									".code": [
										{
											"begin": 135,
											"end": 276,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 135,
											"end": 276,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 276,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 135,
											"end": 276,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 135,
											"end": 276,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 135,
											"end": 276,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 135,
											"end": 276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 135,
											"end": 276,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 135,
											"end": 276,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 276,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 135,
											"end": 276,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 135,
											"end": 276,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 135,
											"end": 276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 135,
											"end": 276,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 135,
											"end": 276,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 135,
											"end": 276,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 135,
											"end": 276,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 135,
											"end": 276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 135,
											"end": 276,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 135,
											"end": 276,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 276,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 135,
											"end": 276,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 135,
											"end": 276,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 135,
											"end": 276,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 135,
											"end": 276,
											"name": "PUSH",
											"source": 1,
											"value": "F7E83AEE"
										},
										{
											"begin": 135,
											"end": 276,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 135,
											"end": 276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 135,
											"end": 276,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 135,
											"end": 276,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 135,
											"end": 276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 135,
											"end": 276,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 276,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 135,
											"end": 276,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 172,
											"end": 274,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 172,
											"end": 274,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 172,
											"end": 274,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 172,
											"end": 274,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 172,
											"end": 274,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 172,
											"end": 274,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 172,
											"end": 274,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 172,
											"end": 274,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 172,
											"end": 274,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 172,
											"end": 274,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 172,
											"end": 274,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 172,
											"end": 274,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 172,
											"end": 274,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 172,
											"end": 274,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 172,
											"end": 274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 172,
											"end": 274,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 172,
											"end": 274,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 172,
											"end": 274,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 172,
											"end": 274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 172,
											"end": 274,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 172,
											"end": 274,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 172,
											"end": 274,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 172,
											"end": 274,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 172,
											"end": 274,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 172,
											"end": 274,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 172,
											"end": 274,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 172,
											"end": 274,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 172,
											"end": 274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 172,
											"end": 274,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 172,
											"end": 274,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 172,
											"end": 274,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 172,
											"end": 274,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 172,
											"end": 274,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 172,
											"end": 274,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 172,
											"end": 274,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 172,
											"end": 274,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 172,
											"end": 274,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 172,
											"end": 274,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 172,
											"end": 274,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 252,
											"end": 256,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 267,
											"end": 271,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 260,
											"end": 271,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 260,
											"end": 271,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 172,
											"end": 274,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 172,
											"end": 274,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 172,
											"end": 274,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 172,
											"end": 274,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 172,
											"end": 274,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 172,
											"end": 274,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 172,
											"end": 274,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 334,
											"end": 451,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 334,
											"end": 451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 443,
											"end": 444,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 440,
											"end": 441,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 433,
											"end": 445,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 457,
											"end": 574,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 457,
											"end": 574,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 566,
											"end": 567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 563,
											"end": 564,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 556,
											"end": 568,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 580,
											"end": 697,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 580,
											"end": 697,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 689,
											"end": 690,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 686,
											"end": 687,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 679,
											"end": 691,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 716,
											"end": 1268,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 716,
											"end": 1268,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 773,
											"end": 781,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 783,
											"end": 789,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 833,
											"end": 836,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 826,
											"end": 830,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 818,
											"end": 824,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 814,
											"end": 831,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 810,
											"end": 837,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 800,
											"end": 922,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 800,
											"end": 922,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 841,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 841,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 841,
											"end": 920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 841,
											"end": 920,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 841,
											"end": 920,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 800,
											"end": 922,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 800,
											"end": 922,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 954,
											"end": 960,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 941,
											"end": 961,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 931,
											"end": 961,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 931,
											"end": 961,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 984,
											"end": 1002,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 976,
											"end": 982,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 973,
											"end": 1003,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 970,
											"end": 1087,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 970,
											"end": 1087,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 970,
											"end": 1087,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1006,
											"end": 1085,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1006,
											"end": 1085,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1006,
											"end": 1085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1006,
											"end": 1085,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1006,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 970,
											"end": 1087,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 970,
											"end": 1087,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1124,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1112,
											"end": 1118,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1108,
											"end": 1125,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1096,
											"end": 1125,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1096,
											"end": 1125,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1174,
											"end": 1177,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1166,
											"end": 1170,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1158,
											"end": 1164,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1154,
											"end": 1171,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1144,
											"end": 1152,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1140,
											"end": 1172,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1137,
											"end": 1178,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1134,
											"end": 1262,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1134,
											"end": 1262,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1134,
											"end": 1262,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1181,
											"end": 1260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1181,
											"end": 1260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1181,
											"end": 1260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1181,
											"end": 1260,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1181,
											"end": 1260,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1134,
											"end": 1262,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1134,
											"end": 1262,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 716,
											"end": 1268,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 716,
											"end": 1268,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 716,
											"end": 1268,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 716,
											"end": 1268,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 716,
											"end": 1268,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 716,
											"end": 1268,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 2144,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1274,
											"end": 2144,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1364,
											"end": 1370,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1372,
											"end": 1378,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1386,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1388,
											"end": 1394,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1437,
											"end": 1439,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1425,
											"end": 1434,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1423,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1435,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1408,
											"end": 1440,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1405,
											"end": 1524,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1405,
											"end": 1524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1405,
											"end": 1524,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1443,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1443,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1443,
											"end": 1522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1443,
											"end": 1522,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1443,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1405,
											"end": 1524,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1405,
											"end": 1524,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1591,
											"end": 1592,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1580,
											"end": 1589,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1576,
											"end": 1593,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1594,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1621,
											"end": 1639,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1613,
											"end": 1619,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1610,
											"end": 1640,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1724,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1724,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1607,
											"end": 1724,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1643,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1643,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1643,
											"end": 1722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1643,
											"end": 1722,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1643,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1607,
											"end": 1724,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1607,
											"end": 1724,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1756,
											"end": 1820,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1812,
											"end": 1819,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1803,
											"end": 1809,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1792,
											"end": 1801,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 1788,
											"end": 1810,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1756,
											"end": 1820,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1756,
											"end": 1820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1756,
											"end": 1820,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1756,
											"end": 1820,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1738,
											"end": 1820,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 1738,
											"end": 1820,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1738,
											"end": 1820,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 1738,
											"end": 1820,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1534,
											"end": 1830,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1897,
											"end": 1899,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1886,
											"end": 1895,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1900,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1869,
											"end": 1901,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1928,
											"end": 1946,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1920,
											"end": 1926,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1917,
											"end": 1947,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1914,
											"end": 2031,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1914,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1914,
											"end": 2031,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1950,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1950,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1950,
											"end": 2029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1950,
											"end": 2029,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1950,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1914,
											"end": 2031,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1914,
											"end": 2031,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2063,
											"end": 2127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2119,
											"end": 2126,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2110,
											"end": 2116,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2099,
											"end": 2108,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 2095,
											"end": 2117,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2063,
											"end": 2127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2063,
											"end": 2127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2063,
											"end": 2127,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2063,
											"end": 2127,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2045,
											"end": 2127,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2045,
											"end": 2127,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2045,
											"end": 2127,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2045,
											"end": 2127,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1840,
											"end": 2137,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 2144,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 2144,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 2144,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 2144,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 2144,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 2144,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 2144,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 2144,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2150,
											"end": 2240,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2150,
											"end": 2240,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2184,
											"end": 2191,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2227,
											"end": 2232,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2220,
											"end": 2233,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2213,
											"end": 2234,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2202,
											"end": 2234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2202,
											"end": 2234,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2150,
											"end": 2240,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2150,
											"end": 2240,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2150,
											"end": 2240,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2150,
											"end": 2240,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2355,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2246,
											"end": 2355,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2348,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2342,
											"end": 2347,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2348,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2327,
											"end": 2348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2348,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2327,
											"end": 2348,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2322,
											"end": 2325,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2315,
											"end": 2349,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2355,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2355,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2355,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2361,
											"end": 2571,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 2361,
											"end": 2571,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2448,
											"end": 2452,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2486,
											"end": 2488,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2475,
											"end": 2484,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2471,
											"end": 2489,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2463,
											"end": 2489,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2463,
											"end": 2489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2499,
											"end": 2564,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2561,
											"end": 2562,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2550,
											"end": 2559,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2546,
											"end": 2563,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2537,
											"end": 2543,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2499,
											"end": 2564,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2499,
											"end": 2564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2499,
											"end": 2564,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2499,
											"end": 2564,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2361,
											"end": 2571,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2361,
											"end": 2571,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2361,
											"end": 2571,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2361,
											"end": 2571,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2361,
											"end": 2571,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"contracts/dnssec-oracle/digests/Digest.sol",
								"contracts/dnssec-oracle/digests/DummyDigest.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"verify(bytes,bytes)": "f7e83aee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implements a dummy DNSSEC digest that approves all hashes, for testing.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/dnssec-oracle/digests/DummyDigest.sol\":\"DummyDigest\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/dnssec-oracle/digests/Digest.sol\":{\"keccak256\":\"0x259720cef78c019d38b908bc7dd524f087c58d8c40792cebcdd4e982c628bc9a\",\"urls\":[\"bzz-raw://dc797b74bc1f9b4495f02e69b1c8374cf1942dbfdf121ecbe1b4f28367aed545\",\"dweb:/ipfs/QmS7b42XT556aS9HQppYbNTdosPfWCTym1qDh5CXsSAi1U\"]},\"contracts/dnssec-oracle/digests/DummyDigest.sol\":{\"keccak256\":\"0x15e3a63572d9325d0e59346e5758181aed1865b934b3422f53cac930c7902c14\",\"urls\":[\"bzz-raw://c77a88ccf7b63196daea6ad28823328047b97293a10f3e4f93c1508ba74a2f68\",\"dweb:/ipfs/QmX3hBH2wZPjqJejKWAHdezeYGD84zLZFKUNCcZ2hYFUqv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/dnssec-oracle/digests/Digest.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/dnssec-oracle/digests/Digest.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/dnssec-oracle/digests/DummyDigest.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/dnssec-oracle/digests/DummyDigest.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5815",
				"formattedMessage": "Warning: Interface functions are implicitly \"virtual\"\n  --> contracts/dnssec-oracle/digests/Digest.sol:13:5:\n   |\n13 |     function verify(bytes calldata data, bytes calldata hash) external virtual pure returns (bool);\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Interface functions are implicitly \"virtual\"",
				"severity": "warning",
				"sourceLocation": {
					"end": 421,
					"file": "contracts/dnssec-oracle/digests/Digest.sol",
					"start": 326
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/dnssec-oracle/digests/Digest.sol": {
				"ast": {
					"absolutePath": "contracts/dnssec-oracle/digests/Digest.sol",
					"exportedSymbols": {
						"Digest": [
							13
						]
					},
					"id": 14,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Digest",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "25:70:0",
								"text": " @dev An interface for contracts implementing a DNSSEC digest."
							},
							"fullyImplemented": false,
							"id": 13,
							"linearizedBaseContracts": [
								13
							],
							"name": "Digest",
							"nameLocation": "106:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "119:202:0",
										"text": " @dev Verifies a cryptographic hash.\n @param data The data to hash.\n @param hash The hash to compare to.\n @return True iff the hashed data matches the provided hash value."
									},
									"functionSelector": "f7e83aee",
									"id": 12,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "verify",
									"nameLocation": "335:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "357:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "342:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 4,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "342:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "378:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "363:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 6,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "363:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "341:42:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "415:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 9,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "415:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "414:6:0"
									},
									"scope": 13,
									"src": "326:95:0",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "external"
								}
							],
							"scope": 14,
							"src": "96:327:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "0:424:0"
				},
				"id": 0
			},
			"contracts/dnssec-oracle/digests/DummyDigest.sol": {
				"ast": {
					"absolutePath": "contracts/dnssec-oracle/digests/DummyDigest.sol",
					"exportedSymbols": {
						"Digest": [
							13
						],
						"DummyDigest": [
							33
						]
					},
					"id": 34,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 15,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:1"
						},
						{
							"absolutePath": "contracts/dnssec-oracle/digests/Digest.sol",
							"file": "./Digest.sol",
							"id": 16,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 34,
							"sourceUnit": 14,
							"src": "25:22:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 18,
										"name": "Digest",
										"nameLocations": [
											"159:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 13,
										"src": "159:6:1"
									},
									"id": 19,
									"nodeType": "InheritanceSpecifier",
									"src": "159:6:1"
								}
							],
							"canonicalName": "DummyDigest",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 17,
								"nodeType": "StructuredDocumentation",
								"src": "49:85:1",
								"text": " @dev Implements a dummy DNSSEC digest that approves all hashes, for testing."
							},
							"fullyImplemented": true,
							"id": 33,
							"linearizedBaseContracts": [
								33,
								13
							],
							"name": "DummyDigest",
							"nameLocation": "144:11:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										12
									],
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "258:16:1",
										"statements": [
											{
												"expression": {
													"hexValue": "74727565",
													"id": 29,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "267:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 28,
												"id": 30,
												"nodeType": "Return",
												"src": "260:11:1"
											}
										]
									},
									"functionSelector": "f7e83aee",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verify",
									"nameLocation": "181:6:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 25,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "229:8:1"
									},
									"parameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "188:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 20,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "188:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "204:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 22,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "204:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "187:32:1"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "252:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 26,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "252:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "251:6:1"
									},
									"scope": 33,
									"src": "172:102:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 34,
							"src": "135:141:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "0:277:1"
				},
				"id": 1
			}
		}
	}
}